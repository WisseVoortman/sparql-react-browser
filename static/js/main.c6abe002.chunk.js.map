{"version":3,"sources":["components/Tooltip.module.scss","components/ScrollBox.module.scss","redux/store/middleware.js","containers/DevTools.jsx","redux/reducers/data.js","redux/actionTypes.js","redux/reducers/nodes.js","redux/reducers/utils.js","redux/reducers/links.js","redux/reducers/datasource.js","redux/reducers/forcegraphSettings.js","redux/reducers/loading.js","redux/reducers/error.js","redux/reducers/index.js","redux/store/index.js","components/Nav.js","components/Header.js","components/Footer.js","pages/Home.js","components/Node.js","components/NodeLabel.js","components/Link.js","components/LinkLabel.js","components/Marker.js","components/ScrollBox.js","utils/uri.js","components/Tooltip.js","components/ForceGraph.js","redux/actions/utils.js","redux/actions/datasource.js","redux/actions/sparql.js","redux/actions/nodes.js","redux/actions/forcegraphSettings.js","redux/actions/error.js","containers/ConnectedForceGraph.js","components/AddDataSource.js","containers/ConnectedAddDatasource.js","components/DataSource.js","containers/ConnectedDataSource.js","components/QueryForm.js","containers/ConnectedQueryForm.js","components/Examples.js","containers/ConnectedExamples.js","components/Search.js","containers/ConnectedSearch.js","components/forcegraphSettings.js","containers/ConnectedForcegraphSettings.js","components/History.js","components/ForceGraphSidebar.js","components/TableLink.js","containers/ConnectedForceGraphSidebar.js","pages/Graph.js","pages/Contact.js","pages/NotFound.js","components/PageContent.js","components/Loading.js","containers/ConnectedLoading.js","components/Error.js","containers/ConnectedError.js","App.js","index.js","components/Search.module.scss"],"names":["module","exports","history","createBrowserHistory","middleware","applyMiddleware","thunkMiddleware","routerMiddleware","DevTools","createDevTools","toggleVisibilityKey","changePositionKey","defaultIsVisible","theme","dataReducer","state","id","action","NewState","Object","assign","type","nodeReducer","selectedNode","nodesList","node","links","source","value","target","property","templist","forEach","link","includes","push","console","log","vars","result","data","head","results","bindings","element","config","subject","split","some","historyList","graph","historyGraph","selectedHistoryGraph","sortBy","field","a","b","setLinkNum","i","length","linknum","linkReducer","sort","datasourceReducer","searchAll","currentDatasource","datasources","name","endpoint","active","classes","selectedClass","instances","selectedInstance","newState","datasource","index","indexOf","indexOfDatasourceToRemovedex","splice","myclass","instance","forcegraphSettingsReducer","linkDistance","min","max","forceCharge","settings","loadingReducer","endsWith","requestName","replace","counter","errorReducer","error","appReducer","combineReducers","nodes","nodesReducer","linkesReducer","forcegraphsettings","loading","router","connectRouter","enhancer","compose","instrument","persistState","matches","window","location","href","match","getSessionKey","Navigation","Navbar","expand","Container","Brand","as","NavLink","activeClassName","to","width","height","alt","Toggle","aria-controls","Collapse","Nav","Link","exact","React","Component","Header","className","Footer","Date","getYear","Home","Jumbotron","Button","variant","onClick","props","Node","enterNode","selection","select","on","d","ssn","facn","attr","x","y","classed","linksList","find","call","drag","simulation","d3","rs","fx","fy","this","d3Node","ReactDOM","findDOMNode","datum","NodeLabel","enterNodeLabel","open","text","nodeURL","join","merge","enterLink","dr","d3Link","marker-end","LinkLabel","enterLinkLabel","linkpropertys","Marker","viewBox","refX","refY","orient","fill","stroke","markerWidth","markerHeight","cx","cy","r","ScrollBox","styles","orientation","children","isValidHttpUrl","string","url","URL","_","protocol","initialState","Tooltip","enterTooltip","linkBelongs","renderlinks","filter","map","tooltip","Popover","popover","Title","class","rsn","Content","Table","ForceGraph","restartSimulation","bind","setSelectedNode","removeSelectedNode","fetchAboutClickedNode","document","getElementById","addEventListener","initializeSVG","offsetWidth","offsetHeight","forceLink","distance","forceCenter","strength","force","setState","prevprops","stop","zoom","scaleExtent","currentTransform","transform","svg","style","alpha","restart","key","thunkCreator","types","promise","rest","REQUESTED","RESOLVED","REJECTED","dispatch","then","errors","Error","catch","axios","require","setCurrentDatasource","toggleSearchAll","toggleBlockDatasource","deleteDatasource","addDatasource","fetchClasses","method","qs","stringify","queryLn","ref","query","headers","Accept","fetchInstances","c","setSelectedClass","setSelectedInstance","fetchTest","fetch","response","json","fetchSparql","setSelectedHistoryGraph","fetchAboutSubject","substring","lastIndexOf","fetchHistoryGraphs","fetchFromHistoricGraphs","setForcegraphSettings","createError","clearError","ConnectedForceGraph","connect","bindActionCreators","AddDatasource","show","handleNameChange","handleEndpointChange","event","handleModal","Modal","onHide","closeButton","Body","Form","onSubmit","handleSubmitDatasource","Group","controlId","Label","Control","placeholder","onChange","ConnectedAddDatasource","DataSourceDropdown","Row","Col","sm","Dropdown","Menu","item","Item","ButtonGroup","renderBlockButton","renderDatasourceDropdown","ConnectedDataSource","DataSource","QueryForm","handleQueryChange","handleQuerySubmit","handleSubjectChange","handleSubjectDetailsQuerySubmit","preventDefault","rows","ConnectedQueryForm","Example","Card","Text","ConnectedExamples","Examples","Search","handleChange","toLowerCase","label","valueName","SearchForm","renderKlasseLabel","ListGroup","filterClassHelper","renderInstanceLabel","filterInstanceHelper","ConnectedSearch","Slider","submit","applySettings","ConnectedSlider","ForcegraphSettings","History","docURI","sshg","ffhg","fhg","h","responsive","object","renderHistory","ForeGraphSidebar","Tabs","defaultActiveKey","Tab","eventKey","title","ConnectedForcegraphSettings","ConnectedForceGraphSidebar","ForceGraphSidebar","Graph","path","fluid","Contact","NotFound","PageContent","component","Notfound","Loading","isLoading","ConnectedLoading","keys","reduce","message","ConnectedError","store","createStore","getState","App","process","render","StrictMode"],"mappings":"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","file":"static/js/main.c6abe002.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"Tooltip_tooltip__3bsps\",\"none\":\"Tooltip_none__1PxYc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollbox-xy\":\"ScrollBox_scrollbox-xy__2A147\",\"scrollbox-y\":\"ScrollBox_scrollbox-y__2xxz_\",\"scrollbox-x\":\"ScrollBox_scrollbox-x__7nG6s\"};","import thunkMiddleware from 'redux-thunk'\r\n\r\nimport { applyMiddleware } from 'redux'\r\nimport { routerMiddleware } from 'connected-react-router'\r\n\r\nimport { createBrowserHistory } from 'history'\r\nexport const history = createBrowserHistory()\r\n\r\nconst middleware = applyMiddleware(\r\n  thunkMiddleware,\r\n  routerMiddleware(history)\r\n)\r\n\r\nexport default middleware","import React from 'react'\r\n\r\nimport { createDevTools } from 'redux-devtools'\r\n\r\nimport LogMonitor from 'redux-devtools-log-monitor'\r\nimport DockMonitor from 'redux-devtools-dock-monitor'\r\n\r\nconst DevTools = createDevTools(\r\n  <DockMonitor\r\n    toggleVisibilityKey='ctrl-h'\r\n    changePositionKey='ctrl-q'\r\n    defaultIsVisible={true}\r\n  >\r\n    <LogMonitor theme='tomorrow' />\r\n  </DockMonitor>\r\n)\r\n\r\nexport default DevTools","import { FETCH_TEST_SUCCESS, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS, FETCH_ABOUT_CLICKED_NODE_SUCCESS } from '../actionTypes'\r\n\r\nexport default function dataReducer(state = {\r\n  id: 1,\r\n\r\n},\r\n  action) {\r\n  let NewState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case FETCH_TEST_SUCCESS: {\r\n      NewState.id = state.id + 1\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_SUCCESS: {\r\n      NewState.id = state.id + 1\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_ABOUTSUBJECT_SUCCESS: {\r\n      NewState.id = state.id + 1\r\n      return NewState\r\n    }\r\n    case FETCH_ABOUT_CLICKED_NODE_SUCCESS: {\r\n      NewState.id = state.id + 1\r\n      return NewState\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","\r\n//datasource\r\nexport const SET_CURRENT_DATASOURCE = 'SET_CURRENT_DATASOURCE';\r\nexport const TOGGLE_SEARCHALL = 'TOGGLE_SEARCHALL'\r\nexport const TOGGLE_BLOCK_DATASOURCE = 'TOGGLE_BLOCK_DATASOURCE'\r\nexport const DELETE_DATASOURCE = 'DELETE_DATASOURCE'\r\nexport const ADD_DATASOURCE = 'ADD_DATASOURCE'\r\n\r\n//forcegraph settings\r\nexport const SET_FORCEGRAPH_SETTINGS = 'SET_FORCEGRAPH_SETTINGS'\r\n\r\n//error\r\nexport const CREATE_ERROR = 'CREATE_ERROR'\r\nexport const CLEAR_ERROR = 'CLEAR_ERROR'\r\n\r\n//classes\r\nexport const FETCH_CLASSES_REQUEST = 'FETCH_CLASSES_REQUEST'\r\nexport const FETCH_CLASSES_SUCCESS = 'FETCH_CLASSES_SUCCESS'\r\nexport const FETCH_CLASSES_FAILURE = 'FETCH_CLASSES_FAILURE'\r\n\r\nexport const SET_SELECTED_CLASS = 'SET_SELECTED_CLASS'\r\n\r\n// instance from class\r\nexport const FETCH_INSTANCES_OF_CLASS_REQUEST = 'FETCH_INSTANCES_OF_CLASS_REQUEST'\r\nexport const FETCH_INSTANCES_OF_CLASS_SUCCESS = 'FETCH_INSTANCES_OF_CLASS_SUCCESS'\r\nexport const FETCH_INSTANCES_OF_CLASS_FAILURE = 'FETCH_INSTANCES_OF_CLASS_FAILURE'\r\n\r\nexport const SET_SELECTED_INSTANCE = 'SET_SELECTED_INSTANCE'\r\n\r\n// nodes\r\nexport const SET_SELECTED_NODE = 'SET_SELECTED_NODE'\r\nexport const REMOVE_SELECTED_NODE = 'REMOVE_SELECTED_NODE'\r\n\r\nexport const SET_SELECTED_HISTORYGRAPH = 'SET_SELECTED_HISTORYGRAPH'\r\n\r\n\r\n//fetch test\r\nexport const FETCH_TEST_REQUEST = 'FETCH_TEST_REQUEST'\r\nexport const FETCH_TEST_SUCCESS = 'FETCH_TEST_SUCCESS'\r\nexport const FETCH_TEST_FAILURE = 'FETCH_TEST_FAILURE'\r\n\r\n//fetch sparql\r\nexport const FETCH_SPARQL_REQUEST = 'FETCH_SPARQL_REQUEST'\r\nexport const FETCH_SPARQL_SUCCESS = 'FETCH_SPARQL_SUCCESS'\r\nexport const FETCH_SPARQL_FAILURE = 'FETCH_SPARQL_FAILURE'\r\n\r\n//fetch sparql about subject\r\nexport const FETCH_SPARQL_ABOUTSUBJECT_REQUEST = 'FETCH_SPARQL_ABOUTSUBJECT_REQUEST'\r\nexport const FETCH_SPARQL_ABOUTSUBJECT_SUCCESS = 'FETCH_SPARQL_ABOUTSUBJECT_SUCCESS'\r\nexport const FETCH_SPARQL_ABOUTSUBJECT_FAILURE = 'FETCH_SPARQL_ABOUTSUBJECT_FAILURE'\r\n\r\n//fetch about clicked nodes\r\nexport const FETCH_ABOUT_CLICKED_NODE_REQUEST = 'FETCH_ABOUT_CLICKED_NODE_REQUEST'\r\nexport const FETCH_ABOUT_CLICKED_NODE_SUCCESS = 'FETCH_ABOUT_CLICKED_NODE_SUCCESS'\r\nexport const FETCH_ABOUT_CLICKED_NODE_FAILURE = 'FETCH_ABOUT_CLICKED_NODE_FAILURE'\r\n\r\n//fetch history\r\nexport const FETCH_HISTORY_GRAPHS_REQUEST = 'FETCH_HISTORY_GRAPHS_REQUEST'\r\nexport const FETCH_HISTORY_GRAPHS_SUCCESS = 'FETCH_HISTORY_GRAPHS_SUCCESS' \r\nexport const FETCH_HISTORY_GRAPHS_FAILURE = 'FETCH_HISTORY_GRAPHS_FAILURE' \r\n\r\n//\r\nexport const FETCH_FROM_HISTORIC_GRAPH_REQUEST = 'FETCH_FROM_HISTORIC_GRAPH_REQUEST'\r\nexport const FETCH_FROM_HISTORIC_GRAPH_SUCCESS = 'FETCH_FROM_HISTORIC_GRAPH_SUCCESS'\r\nexport const FETCH_FROM_HISTORIC_GRAPH_FAILURE = 'FETCH_FROM_HISTORIC_GRAPH_FAILURE'\r\n","import { SET_SELECTED_NODE, REMOVE_SELECTED_NODE, FETCH_HISTORY_GRAPHS_SUCCESS, SET_SELECTED_HISTORYGRAPH } from '../actionTypes'\r\nimport { FETCH_TEST_SUCCESS, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS, FETCH_ABOUT_CLICKED_NODE_SUCCESS, FETCH_FROM_HISTORIC_GRAPH_SUCCESS } from '../actionTypes'\r\n\r\nexport default function nodeReducer(state = {\r\n  selectedNode: \"\",\r\n  nodesList: [\r\n    { id: 'Subject', type: 'literal' },\r\n    { id: 'Object', type: 'literal' },\r\n  ]\r\n}, action) {\r\n  let NewState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case SET_SELECTED_NODE: {\r\n      const node = action.node\r\n      NewState.selectedNode = node\r\n      return NewState\r\n    }\r\n    case REMOVE_SELECTED_NODE: {\r\n      NewState.selectedNode = \"\"\r\n      return NewState\r\n    }\r\n\r\n    case FETCH_TEST_SUCCESS: {\r\n\r\n      var links = [\r\n        { source: { value: \"http://example.nl/persoon/Wisse\", type: \"uri\" }, target: { value: \"http://example.nl/bedrijf/DUO\", type: \"uri\" }, property: \"http://example.nl/Is stagair bij\" },\r\n        { source: { value: \"http://example.nl/persoon/Wisse\", type: \"uri\" }, target: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, property: \"http://example.nl/Heeft Woonadres\" },\r\n        { source: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, target: { value: \"7913TH\", type: \"literal\" }, property: \"http://example.nl/Postcode\" },\r\n        { source: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, target: { value: \"25\", type: \"literal\" }, property: \"http://example.nl/Nummer\" },\r\n        { source: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, target: { value: \"Zuideropgaande\", type: \"literal\" }, property: \"http://example.nl/Straatnaam\" },\r\n        { source: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, target: { value: \"Hollandscheveld\", type: \"literal\" }, property: \"http://example.nl/Plaatsnaam\" },\r\n        { source: { value: \"http://example.nl/bedrijf/DUO\", type: \"uri\" }, target: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, property: \"http://example.nl/Heeft adres\" },\r\n        { source: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, target: { value: \"9722TB\", type: \"literal\" }, property: \"http://example.nl/Postcode\" },\r\n        { source: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, target: { value: \"12\", type: \"literal\" }, property: \"http://example.nl/Nummer\" },\r\n        { source: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, target: { value: \"Kempkensberg\", type: \"literal\" }, property: \"http://example.nl/Straatnaam\" },\r\n        { source: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, target: { value: \"Groningen\", type: \"literal\" }, property: \"Plaatsnaam\" },\r\n        { source: { value: \"http://example.nl/persoon/Wisse\", type: \"uri\" }, target: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, property: \"Werkadres\" },\r\n      ]\r\n\r\n      NewState.nodesList = []\r\n\r\n      //distinct nodes\r\n      var templist = []\r\n      links.forEach(link => {\r\n        if (!templist.includes(link.source.value)) {\r\n          NewState.nodesList.push({ id: link.source.value, type: link.source.type })\r\n        }\r\n        if (!templist.includes(link.target.value)) {\r\n          NewState.nodesList.push({ id: link.target.value, type: link.target.type })\r\n        }\r\n\r\n        templist.push(link.source.value)\r\n        templist.push(link.target.value)\r\n      })\r\n      console.log('node NewState: ' + NewState)\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_SUCCESS: {\r\n      NewState.nodesList = []\r\n\r\n      //distinct nodes\r\n      var templist = []\r\n\r\n      //var names from the result\r\n      var vars = action.result.data.head.vars\r\n\r\n\r\n      action.result.data.results.bindings.forEach(element => {\r\n\r\n        //add subject and object to templist\r\n        if (!templist.includes(element[vars[0]].value)) {\r\n          NewState.nodesList.push({ id: element[vars[0]].value, type: element[vars[0]].type })\r\n        }\r\n        if (!templist.includes(element[vars[2]].value)) {\r\n          NewState.nodesList.push({ id: element[vars[2]].value, type: element[vars[2]].type })\r\n        }\r\n\r\n        templist.push(element[vars[0]].value)\r\n        templist.push(element[vars[2]].value)\r\n      })\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_ABOUTSUBJECT_SUCCESS: {\r\n\r\n      NewState.nodesList = []\r\n\r\n      //distinct nodes\r\n      var templist = []\r\n\r\n      // add main subject to nodeslist\r\n      NewState.nodesList.push({ id: action.result.config.subject, type: 'uri' })\r\n\r\n      //var names from the result\r\n      var vars = action.result.data.head.vars\r\n\r\n      // for each triple\r\n      action.result.data.results.bindings.forEach(element => {\r\n        console.log('hier: ')\r\n        console.log(element[action.result.data.head.vars[1]]['xml:lang'])\r\n\r\n        //check if property comes from the same base URL as the subject\r\n        if (element[vars[0]].value.split('/')[2] === action.result.config.subject.split('/')[2]) {\r\n\r\n          //add targets to nodeslist\r\n          if (!templist.includes(element[vars[1]].value)) {\r\n\r\n            //xml lang set\r\n            if (element[action.result.data.head.vars[1]]['xml:lang'] && (element[action.result.data.head.vars[1]]['xml:lang'] === 'en' || element[action.result.data.head.vars[1]]['xml:lang'] === 'nl')) {\r\n              NewState.nodesList.push({ id: element[action.result.data.head.vars[1]].value, type: element[vars[1]].type })\r\n            }\r\n            //xml lang not set\r\n            if (!element[action.result.data.head.vars[1]]['xml:lang']) {\r\n              NewState.nodesList.push({ id: element[action.result.data.head.vars[1]].value, type: element[vars[1]].type })\r\n            }\r\n\r\n          }\r\n          templist.push(element[vars[1]].value)\r\n        }\r\n      })\r\n      return NewState\r\n    }\r\n    case FETCH_ABOUT_CLICKED_NODE_SUCCESS: {\r\n      NewState.nodesList = state.nodesList\r\n\r\n      //distinct nodes\r\n      \r\n      //var names from the result\r\n      var vars = action.result.data.head.vars\r\n\r\n      // for each triple\r\n      action.result.data.results.bindings.forEach(element => {\r\n\r\n        //check if property comes from the same base URL as the subject\r\n        if (element[vars[0]].value.split('/')[2] === action.result.config.subject.split('/')[2]) {\r\n\r\n          //add targets to nodeslist\r\n          const contains = (node) => node.id === element[action.result.data.head.vars[1]].value\r\n          if (!NewState.nodesList.some(contains)) {\r\n            //console.log('didnotcontain')\r\n\r\n            //xml lang set\r\n            if (element[action.result.data.head.vars[1]]['xml:lang'] && (element[action.result.data.head.vars[1]]['xml:lang'] === 'en' || element[action.result.data.head.vars[1]]['xml:lang'] === 'nl')) {\r\n              NewState.nodesList.push({ id: element[action.result.data.head.vars[1]].value, type: element[vars[1]].type })\r\n            }\r\n            //xml lang not set\r\n            if (!element[action.result.data.head.vars[1]]['xml:lang']) {\r\n              NewState.nodesList.push({ id: element[action.result.data.head.vars[1]].value, type: element[vars[1]].type })\r\n            }\r\n\r\n          }\r\n        }\r\n      })\r\n      return NewState\r\n\r\n    }\r\n    case FETCH_HISTORY_GRAPHS_SUCCESS: {\r\n      NewState.selectedNode.historyList = []\r\n\r\n      action.result.data.results.bindings.forEach(element => {\r\n        NewState.selectedNode.historyList.push(element.graph.value)\r\n      })\r\n      return NewState\r\n    }\r\n    case FETCH_FROM_HISTORIC_GRAPH_SUCCESS: {\r\n      NewState.selectedNode.history = action.result.data.results.bindings\r\n      return NewState\r\n    }\r\n    case SET_SELECTED_HISTORYGRAPH: {\r\n      const historyGraph = action.graph\r\n      NewState.selectedNode.selectedHistoryGraph = historyGraph\r\n      return NewState\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","export const sortBy = function sortBy(field) {\r\n  return function (a, b) {\r\n        if (a.[field] > b.[field]) { return 1; }\r\n        else if (a.[field] < b.[field]) { return -1; }\r\n        else {\r\n          if (a.[field] > b.[field]) { return 1; }\r\n          if (a.[field] < b.[field]) { return -1; }\r\n          else { return 0; }\r\n        }\r\n      };\r\n}\r\n\r\nexport const setLinkNum = function setLinkNum(NewState){\r\n  for (var i = 0; i < NewState.length; i++) {\r\n        if (i !== 0 &&\r\n          NewState[i].source === NewState[i - 1].source &&\r\n          NewState[i].target === NewState[i - 1].target) {\r\n          NewState[i].linknum = NewState[i - 1].linknum + 1;\r\n        }\r\n        else { NewState[i].linknum = 1; };\r\n      };\r\n      return NewState\r\n}","import { FETCH_TEST_SUCCESS, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS, FETCH_ABOUT_CLICKED_NODE_SUCCESS } from '../actionTypes'\r\n\r\nimport { sortBy, setLinkNum } from './utils'\r\n\r\nexport default function linkReducer(state = [\r\n  { source: \"Subject\", target: \"Object\", property: \"http://example.nl/property\" },\r\n], action) {\r\n  let NewState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case FETCH_TEST_SUCCESS: {\r\n\r\n      NewState = [\r\n        { source: \"http://example.nl/persoon/Wisse\", target: \"http://example.nl/bedrijf/DUO\", property: \"http://example.nl/Is stagair bij\" },\r\n        { source: \"http://example.nl/persoon/Wisse\", target: \"http://example.nl/adres/Adres1\", property: \"http://example.nl/Heeft Woonadres\" },\r\n        { source: \"http://example.nl/adres/Adres1\", target: \"7913TH\", property: \"http://example.nl/Postcode\" },\r\n        { source: \"http://example.nl/adres/Adres1\", target: \"25\", property: \"http://example.nl/Nummer\" },\r\n        { source: \"http://example.nl/adres/Adres1\", target: \"Zuideropgaande\", property: \"http://example.nl/Straatnaam\" },\r\n        { source: \"http://example.nl/adres/Adres1\", target: \"Hollandscheveld\", property: \"http://example.nl/Plaatsnaam\" },\r\n        { source: \"http://example.nl/bedrijf/DUO\", target: \"http://example.nl/adres/Adres2\", property: \"http://example.nl/Heeft adres\" },\r\n        { source: \"http://example.nl/adres/Adres2\", target: \"9722TB\", property: \"http://example.nl/Postcode\" },\r\n        { source: \"http://example.nl/adres/Adres2\", target: \"12\", property: \"http://example.nl/Nummer\" },\r\n        { source: \"http://example.nl/adres/Adres2\", target: \"Kempkensberg\", property: \"http://example.nl/Straatnaam\" },\r\n        { source: \"http://example.nl/adres/Adres2\", target: \"Groningen\", property: \"http://example.nl/Plaatsnaam\" },\r\n        { source: \"http://example.nl/persoon/Wisse\", target: \"http://example.nl/adres/Adres2\", property: \"http://example.nl/Werkadres\" },\r\n      ]\r\n\r\n      NewState.sort(sortBy('source'))\r\n\r\n\r\n      NewState = setLinkNum(NewState)\r\n      \r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_SUCCESS: {\r\n      \r\n      NewState = []\r\n\r\n      action.result.data.results.bindings.forEach(element => {\r\n        //console.log(element)\r\n        var source = element[action.result.data.head.vars[0]]\r\n        var target = element[action.result.data.head.vars[2]]\r\n        var property = element[action.result.data.head.vars[1]]\r\n        var link = {}\r\n        link.source = source.value\r\n        link.target = target.value\r\n        link.property = property.value\r\n        NewState.push(link)\r\n\r\n        NewState.sort(sortBy('source'))\r\n\r\n        NewState = setLinkNum(NewState)\r\n\r\n      });\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_ABOUTSUBJECT_SUCCESS: {\r\n      NewState = []\r\n\r\n      action.result.data.results.bindings.forEach(element => {\r\n\r\n        var link = {}\r\n\r\n        link.source = action.result.config.subject\r\n        link.target = element[action.result.data.head.vars[1]].value\r\n        link.property = element[action.result.data.head.vars[0]].value\r\n\r\n        //check if property comes from the same base URL as the subject\r\n        if (element[action.result.data.head.vars[0]].value.split('/')[2] === action.result.config.subject.split('/')[2]) {\r\n\r\n          // add links to linklist\r\n          //xml lang set --> used to set language of a literal\r\n          if (element[action.result.data.head.vars[1]]['xml:lang'] && (element[action.result.data.head.vars[1]]['xml:lang'] === 'en' || element[action.result.data.head.vars[1]]['xml:lang'] === 'nl')) {\r\n            NewState.push(link)\r\n          }\r\n          //xml lang not set\r\n          if (!element[action.result.data.head.vars[1]]['xml:lang']) {\r\n            NewState.push(link)\r\n          }\r\n        }\r\n\r\n        NewState.sort(sortBy('source'))\r\n\r\n        NewState = setLinkNum(NewState)\r\n\r\n      });\r\n      return NewState\r\n    }\r\n    case FETCH_ABOUT_CLICKED_NODE_SUCCESS: {\r\n      NewState = state\r\n\r\n      action.result.data.results.bindings.forEach(element => {\r\n\r\n        var link = {}\r\n\r\n        link.source = action.result.config.subject\r\n        link.target = element[action.result.data.head.vars[1]].value\r\n        link.property = element[action.result.data.head.vars[0]].value\r\n\r\n        //check if property comes from the same base URL as the subject\r\n        if (element[action.result.data.head.vars[0]].value.split('/')[2] === action.result.config.subject.split('/')[2]) {\r\n\r\n          // // check if link is already in the linklist otherwise add\r\n          // const contains = (e) => {\r\n          //   console.log('element: ', e)\r\n          //   console.log('link: ', link)\r\n          //   return e === link};\r\n\r\n          // if(!NewState.some(contains)) {\r\n          //   console.log('didnotontain')\r\n          // }\r\n          // else {\r\n          //   console.log('didcontain')\r\n          // }\r\n\r\n          // add links to linklist\r\n          //xml lang set --> used to set language of a literal\r\n          if (element[action.result.data.head.vars[1]]['xml:lang'] && (element[action.result.data.head.vars[1]]['xml:lang'] === 'en' || element[action.result.data.head.vars[1]]['xml:lang'] === 'nl')) {\r\n            NewState.push(link)\r\n          }\r\n          //xml lang not set\r\n          if (!element[action.result.data.head.vars[1]]['xml:lang']) {\r\n            NewState.push(link)\r\n          }\r\n        }\r\n\r\n        NewState.sort(sortBy('source'))\r\n\r\n        NewState = setLinkNum(NewState)\r\n\r\n      });\r\n      return NewState\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  SET_CURRENT_DATASOURCE, TOGGLE_SEARCHALL, TOGGLE_BLOCK_DATASOURCE, DELETE_DATASOURCE, ADD_DATASOURCE,\r\n  FETCH_CLASSES_SUCCESS, FETCH_INSTANCES_OF_CLASS_SUCCESS,\r\n  SET_SELECTED_CLASS, SET_SELECTED_INSTANCE\r\n} from '../actionTypes';\r\n\r\n\r\nexport default function datasourceReducer(state = {\r\n  searchAll: 'Uit',\r\n  currentDatasource: 'https://lod.onderwijsregistratie.nl/rio/sparql',\r\n  datasources: [\r\n    {\r\n      name: 'Onderwijsregistratie',\r\n      endpoint: 'https://lod.onderwijsregistratie.nl/rio/sparql',\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'dbpedia',\r\n      endpoint: 'http://dbpedia.org/sparql',\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'Basisregistratie adressen en gebouwen (alle voorkomens)',\r\n      endpoint: 'https://bag.basisregistraties.overheid.nl/sparql',\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'Basisregistratie adressen en gebouwen (nu geldige voorkomens)',\r\n      endpoint: 'https://bag.basisregistraties.overheid.nl/sparql/now',\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'Basisregistratie Kadaster - Digitale Kadastrale Kaart',\r\n      endpoint: 'https://brk.basisregistraties.overheid.nl/sparql',\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'Basisregitratie Topografie - Top10NL',\r\n      endpoint: 'https://brt.basisregistraties.overheid.nl/sparql',\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'Cultuurhistorische objecten',\r\n      endpoint: 'https://linkeddata.cultureelerfgoed.nl/sparql',\r\n      active: true,\r\n    },\r\n  ],\r\n  classes: [],\r\n  selectedClass: '',\r\n  instances: [],\r\n  selectedInstance: '',\r\n}, action) {\r\n  let newState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case SET_CURRENT_DATASOURCE: {\r\n      newState.currentDatasource = action.datasource.endpoint;\r\n      return newState;\r\n    }\r\n    case TOGGLE_SEARCHALL: {\r\n      if (state.searchAll === 'Aan') {\r\n        newState.searchAll = 'Uit'\r\n      }\r\n      if (state.searchAll === 'Uit') {\r\n        newState.searchAll = 'Aan'\r\n      }\r\n\r\n      return newState\r\n    }\r\n    case TOGGLE_BLOCK_DATASOURCE: {\r\n      var index = state.datasources.indexOf(action.datasource)\r\n      newState.datasources[index].active = !newState.datasources[index].active\r\n\r\n      return newState\r\n    }\r\n    case DELETE_DATASOURCE: {\r\n      var indexOfDatasourceToRemovedex = state.datasources.indexOf(action.datasource)\r\n      newState.datasources.splice(indexOfDatasourceToRemovedex, 1)\r\n      return newState\r\n    }\r\n    case ADD_DATASOURCE: {\r\n      const name = action.name\r\n      const endpoint = action.endpoint\r\n      newState.datasources.push({\r\n        name: name,\r\n        endpoint: endpoint,\r\n        active: true,\r\n      })\r\n      return newState\r\n    }\r\n    case FETCH_CLASSES_SUCCESS: {\r\n      newState.classes = action.result.data.results.bindings\r\n      return newState\r\n    }\r\n    case SET_SELECTED_CLASS: {\r\n      newState.selectedClass = action.myclass\r\n      return newState\r\n    }\r\n    case SET_SELECTED_INSTANCE: {\r\n      newState.selectedInstance = action.instance\r\n      return newState\r\n    }\r\n    case FETCH_INSTANCES_OF_CLASS_SUCCESS: {\r\n      newState.instances = action.result.data.results.bindings\r\n      return newState\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n","import { SET_FORCEGRAPH_SETTINGS } from '../actionTypes'\r\n\r\nexport default function forcegraphSettingsReducer(state = {\r\n  linkDistance: {\r\n    min: 0,\r\n    max: 800,\r\n    value: 400,\r\n  },\r\n  forceCharge: {\r\n    min: -3000,\r\n    max: 0,\r\n    value: -3000,\r\n\r\n  }\r\n},\r\n  action) {\r\n  switch (action.type) {\r\n    case SET_FORCEGRAPH_SETTINGS: {\r\n\r\n      return action.settings\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","export default function loadingReducer(state = {}, action) {\r\n  if (action.type.endsWith('_REQUEST')) {\r\n    const requestName = action.type.replace('_REQUEST', '')\r\n    const counter = state[requestName] || 0\r\n    return { ...state, [requestName]: counter + 1 }\r\n  }\r\n\r\n  if (action.type.endsWith('_SUCCESS') || action.type.endsWith('_FAILURE')) {\r\n    const requestName = action.type.replace('_SUCCESS', '').replace('_FAILURE', '')\r\n    const counter = state[requestName] || 0\r\n    return { ...state, [requestName]: counter - 1 }\r\n  }\r\n\r\n  return state\r\n}","export default function errorReducer(state = {}, action) {\r\n  if (action.type.endsWith('_FAILURE')) {\r\n    return action.error\r\n  }\r\n  // clear error whensubmitting another request\r\n  if (action.type.endsWith('_REQUEST')) {\r\n    return {}\r\n  }\r\n\r\n  if (action.type === 'CREATE_ERROR') {\r\n    console.log(action)\r\n    return action.error\r\n  }\r\n\r\n  if (action.type === 'CLEAR_ERROR') {\r\n    return {}\r\n  }\r\n\r\n  \r\n\r\n  return state\r\n}","// Root Reducer, combines all reducers into one single reducer\r\nimport { combineReducers } from 'redux'\r\n\r\n// reducer for updating forcegraph based on meaningfull changes.\r\nimport dataReducer from './data'\r\n\r\n//sparql endpoint data reducers\r\nimport nodesReducer from './nodes'\r\nimport linkesReducer from './links'\r\n\r\nimport datasourceReducer from './datasource'\r\nimport forcegraphSettingsReducer from './forcegraphSettings'\r\n\r\n//utility reducers\r\nimport loadingReducer from './loading'\r\nimport errorReducer from './error'\r\n\r\n//router reducer\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nconst appReducer = (history) => combineReducers({\r\n  data: dataReducer,\r\n  nodes: nodesReducer,\r\n  links: linkesReducer,\r\n  datasource: datasourceReducer,\r\n  forcegraphsettings: forcegraphSettingsReducer,\r\n  loading: loadingReducer,\r\n  error: errorReducer,\r\n  router: connectRouter(history)\r\n})\r\n\r\nexport default appReducer","// redux\r\nimport { createStore, compose } from 'redux'\r\n\r\n//root reducer\r\nimport appReducer from '../reducers/index'\r\n\r\n//middleware\r\nimport middleware from './middleware'\r\nimport { history } from './middleware'\r\n\r\n//devtools\r\nimport { persistState } from 'redux-devtools'\r\nimport DevTools from '../../containers/DevTools'\r\n\r\n\r\nconst enhancer = compose(\r\n  middleware,\r\n  DevTools.instrument(),\r\n  persistState(getSessionKey())\r\n)\r\n\r\nfunction getSessionKey() {\r\n  const matches = window.location.href.match(/[?&]debug=([^&#])\\b/)\r\n  return (matches && matches.length > 0)\r\n    ? matches[1]\r\n    : null\r\n}\r\n\r\nexport default function configureStore(initialState) {\r\n  return createStore(appReducer(history), initialState, enhancer)\r\n}","import React from 'react'\r\nimport {\r\n  NavLink,\r\n} from 'react-router-dom'\r\n\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\n\r\n//import Logo from '../assets/img/logo.svg'\r\n\r\nclass Navigation extends React.Component {\r\n  render() {\r\n    return (\r\n      <Navbar id=\"main-navigation\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand as={NavLink} activeClassName=\"notactive\" to=\"/\">\r\n            <img\r\n              // src={Logo}\r\n              width=\"100\"\r\n              height=\"100\"\r\n              alt=\"Logo\"\r\n            /><b>React SPARQL Browser</b>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav.Link as={NavLink} exact activeClassName=\"active\" to=\"/\">Home</Nav.Link>\r\n            <Nav.Link as={NavLink} activeClassName=\"active\" to=\"/sparql-react-browser/contact\">Contact</Nav.Link>\r\n            <Nav.Link as={NavLink} activeClassName=\"active\" to=\"/sparql-react-browser/graph\">Graph</Nav.Link>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\n\r\nimport Navigation from './Nav'\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Header\">\r\n        <header>\r\n          <Navigation />\r\n        </header>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer id=\"Footer\">\r\n        <p>© React-SPARQL-Browser {new Date().getYear() + 1900}</p>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport { Container } from 'react-bootstrap'\r\n\r\nclass Home extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Container id=\"Home\">\r\n      <div className=\"Home\">\r\n        <Jumbotron>\r\n          <h1>Sparql-React-Browser</h1>\r\n          <p>\r\n            Welkom bij de Sparql-React-Browser. Via deze applicatie kunt u open onderwijsdata opvragen en visualiseren. Met onderstaande zoekmogelijkheid komt u snel bij de data die u zoekt. Data wordt weergegeven in een graph JSON. Het gaat om open informatie.\r\n          </p>\r\n          <p>\r\n            <Button variant=\"primary\" onClick={() => this.props.history.push('/sparql-react-browser/graph/examples')}>Probeer uit!</Button>\r\n          </p>\r\n        </Jumbotron>\r\n      </div>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\nexport default Home","import * as d3 from 'd3'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Node extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    // dragging\r\n    this.drag = () => {\r\n      const dragstarted = (d) => {\r\n        this.props.rs()\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      };\r\n\r\n      const dragged = (d) => {\r\n        d.fx = d3.event.x;\r\n        d.fy = d3.event.y;\r\n      };\r\n\r\n      const dragended = (d) => {\r\n        d.fx = null;\r\n        d.fy = null;\r\n      };\r\n\r\n      return d3\r\n        .drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended)\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.d3Node = d3.select(ReactDOM.findDOMNode(this))\r\n      .datum(this.props.data)\r\n      .call(this.enterNode);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.d3Node.datum(this.props.data)\r\n      .call(this.enterNode);\r\n  }\r\n\r\n  enterNode = (selection) => {\r\n    selection.select(\"ellipse\")\r\n      .on('click', (d) => {\r\n        this.props.ssn(d)\r\n        if (d.type === 'uri') {\r\n          this.props.facn(d.id, this.props.datasource)\r\n        }\r\n        \r\n      })\r\n      .on(\"mouseover\", (d) => {\r\n        console.log('mouseover')\r\n      })\r\n      .on(\"mouseout\", (d) => {\r\n        console.log('mouseout')\r\n      })\r\n      .on(\"mousedown\", function (d) {\r\n        console.log('mousedown')\r\n      })\r\n      .on(\"mouseup\", function (d) {\r\n        console.log('mouseup')\r\n      })\r\n      .attr(\"rx\", function (d) { return 30 }) //d.id.length\r\n      .attr(\"ry\", function (d) { return 30 }) //d.id.length\r\n      .attr(\"transform\", (d) => \"translate(\" + d.x + \",\" + d.y + \")\")\r\n      .attr(\"class\", \"ellipse\")\r\n      .classed('uri', function (d) { return d.type === 'uri' })\r\n      .classed('literal', function (d) { return d.type === 'literal' || d.type === 'typed-literal' })\r\n      .classed('selected', (d) => { return d.id === this.props.selectedNode.id})\r\n      .classed('faded', (d) =>  {return this.props.selectedNode})\r\n      .classed('ellipse_highlight', (d) => {\r\n        // check if there is a direct link between this node and the selectedNode\r\n        var nodeIsConnected = (link) => {\r\n          if((link.source.id === d.id || link.target.id === d.id) && (link.source.id === this.props.selectedNode.id || link.target.id === this.props.selectedNode.id) ){\r\n            return true\r\n          }\r\n          else {\r\n            return false\r\n          }  \r\n        }\r\n        \r\n        var found = this.props.linksList.find(nodeIsConnected);\r\n        if(found){\r\n          return true\r\n        }\r\n      })\r\n      .call(this.drag(this.simulation))\r\n\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <g>\r\n        <ellipse className='ellipse' />\r\n      </g>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Node","import * as d3 from 'd3'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass NodeLabel extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    // dragging\r\n    this.drag = () => {\r\n      const dragstarted = (d) => {\r\n        this.props.rs()\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      };\r\n\r\n      const dragged = (d) => {\r\n        d.fx = d3.event.x;\r\n        d.fy = d3.event.y;\r\n      };\r\n\r\n      const dragended = (d) => {\r\n        d.fx = null;\r\n        d.fy = null;\r\n      };\r\n\r\n      return d3\r\n        .drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended)\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.d3Node = d3.select(ReactDOM.findDOMNode(this))\r\n      .datum(this.props.data)\r\n      .call(this.enterNodeLabel);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.d3Node.datum(this.props.data)\r\n      .call(this.enterNodeLabel);\r\n  }\r\n\r\n  enterNodeLabel = (selection) => {\r\n    selection.select('text')\r\n      .on('click', function (d) {\r\n        if (d.type === 'uri') {\r\n          window.open(d.id)           // opens in a new page\r\n        }\r\n      })\r\n      .on(\"mouseover\", function (d) {\r\n        console.log('mouseover')\r\n      })\r\n      .on(\"mouseout\", function (d) {\r\n        console.log('mouseout')\r\n      })\r\n      .on(\"mousedown\", function (d) {\r\n        console.log('mousedown')\r\n      })\r\n      .on(\"mouseup\", function (d) {\r\n        console.log('mouseup')\r\n      })\r\n      .text(function (d) {\r\n        if (d.type === 'uri') {\r\n          var nodeURL = d.id.split('/')\r\n          nodeURL.splice(0, 3)\r\n          nodeURL = nodeURL.join('/')\r\n          return nodeURL;\r\n        }\r\n        return d.id;\r\n      })\r\n      .merge(selection)\r\n      .attr(\"transform\", function (d) {\r\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n      })\r\n    // 2nd way of doing it\r\n    // .attr('x', function (d) { return d.x })\r\n    // .attr('y', function (d) { return d.y })\r\n    // .attr('dy', function (d) { return 5 })\r\n    .call(this.drag())\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <g>\r\n        <text/>\r\n      </g>\r\n    );\r\n  }\r\n};\r\n\r\nexport default NodeLabel","import * as d3 from 'd3'\r\nimport React from 'react'\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Link extends React.Component {\r\n  \r\n  componentDidMount() {\r\n    this.d3Link = d3.select(ReactDOM.findDOMNode(this))\r\n      .datum(this.props.data)\r\n      .call(this.enterLink);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.d3Link.datum(this.props.data)\r\n      .call(this.enterLink);\r\n  }\r\n\r\n  enterLink = (selection) => {\r\n    selection\r\n    .on('click', (d) => {\r\n        console.log('igotclicked')\r\n      })\r\n    .attr(\"class\", function (d) { return \"link\" })\r\n      //.attr(\"class\", function (d) { return \"link \" + d.property; })\r\n      .attr(\"id\", function (d, i) { return \"linkId_\" + i; })\r\n      .attr(\"marker-end\", function (d) { return \"url(#black-arrow)\"; })\r\n      .classed('linkfaded', (d) =>  {return this.props.selectedNode})\r\n      .classed(\"connectedLink\", (d) => {return d.source.id === this.props.selectedNode.id || d.target.id === this.props.selectedNode.id}) //highlighting soorcelink and targetlink\r\n      .merge(selection)\r\n      .attr(\"d\", function (d) {\r\n        \r\n        if (d.linknum) {\r\n          //var dr = d.linknum * 150 - 150; // zorgt dat links vanaf hetzelfde subject naar hetzelfde target elkaar niet overlappen.\r\n          var dr = 0\r\n        }\r\n        else {\r\n          dr = 0\r\n        }\r\n\r\n        return \"M\" + d.source.x + \",\" + d.source.y + \"A\" + dr + \",\" + dr + \" 0 0,1 \" + d.target.x + \",\" + d.target.y;\r\n      })\r\n  };\r\n\r\n  render() {\r\n    return (<path className='link' marker-end=\"url(#black-arrow)\"/>);\r\n  }\r\n}\r\n\r\nexport default Link\r\n\r\n","import * as d3 from 'd3'\r\nimport React from 'react'\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass LinkLabel extends React.Component {\r\n  componentDidMount() {\r\n    this.d3Link = d3.select(ReactDOM.findDOMNode(this))\r\n      .datum(this.props.data)\r\n      .call(this.enterLinkLabel);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.d3Link.datum(this.props.data)\r\n      .call(this.enterLinkLabel);\r\n  }\r\n\r\n  getAllLinkPropertys() {\r\n    var linkpropertys = []\r\n    this.props.linksList.forEach(element => {\r\n      linkpropertys.push(element.property.replace(/\\s/g, ''))\r\n    });\r\n    return linkpropertys\r\n  }\r\n\r\n  enterLinkLabel = (selection) => {\r\n    selection\r\n      .on('click', function (d) {\r\n        //window.location.href = d.id // opens in the same page\r\n        window.open(d.id)           // opens in a new page\r\n      })\r\n      .text(function (d) {\r\n        var text = d.property.split('/')\r\n        text.splice(0, 3)\r\n        text = text.join('/')\r\n        return text;\r\n      })\r\n      .attr(\"transform\", function (d) {\r\n        if(d.linknum > 1){\r\n          return \"translate(\" + ((d.source.x + d.target.x) / 2) + \",\" + ((d.source.y + d.target.y) / 2 + (d.linknum * 10) ) + \")\";\r\n        }\r\n        else {\r\n         return \"translate(\" + ((d.source.x + d.target.x) / 2) + \",\" + ((d.source.y + d.target.y) / 2 ) + \")\"; \r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (<text/>);\r\n  }\r\n}\r\n\r\nexport default LinkLabel\r\n\r\n","import React from 'react'\r\n\r\nclass Marker extends React.Component {\r\n  \r\n  render() {\r\n        return (\r\n        <defs>\r\n      <marker id=\"red-chevron\"\r\n      viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" orient=\"auto\" >\r\n         <path d=\"M 0 0 L 10 5 L 0 10\" fill=\"none\" stroke=\"red\" />\r\n      </marker>\r\n\r\n      <marker id=\"black-arrow\"\r\n      viewBox=\"0 0 10 10\" refX=\"40\" refY=\"5\" orient=\"auto\" markerWidth=\"6\" markerHeight=\"6\">\r\n         <path d=\"M 0 0 L 10 5 L 0 10 z\" />\r\n      </marker>\r\n\r\n      <marker id=\"red-circle\"\r\n      viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" orient=\"auto\" >\r\n         <circle fill=\"red\" cx=\"5\" cy=\"5\" r=\"5\" />\r\n      </marker>\r\n  </defs>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Marker\r\n\r\n  \r\n\r\n","import React from 'react'\r\nimport styles from './ScrollBox.module.scss';\r\n\r\nclass ScrollBox extends React.Component {\r\n  render() {\r\n    return <div className={styles.[this.props.orientation]}>\r\n      {this.props.children}\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default ScrollBox","export function isValidHttpUrl(string) {\r\n    let url;\r\n    try {\r\n      url = new URL(string);\r\n    } catch (_) {\r\n      return false;  \r\n    }\r\n    return url.protocol === \"http:\" || url.protocol === \"https:\";\r\n  }","import * as d3 from 'd3'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './Tooltip.module.scss'\r\nimport { Popover, Table } from 'react-bootstrap'\r\nimport Scrollbox from './ScrollBox'\r\nimport { isValidHttpUrl } from '../utils/index'\r\n\r\nclass Tooltip extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    // dragging\r\n    this.drag = () => {\r\n      const dragstarted = (d) => {\r\n        this.props.rs()\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      };\r\n\r\n      const dragged = (d) => {\r\n        d.fx = d3.event.x;\r\n        d.fy = d3.event.y;\r\n      };\r\n\r\n      const dragended = (d) => {\r\n        d.fx = null;\r\n        d.fy = null;\r\n      };\r\n\r\n      return d3\r\n        .drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended)\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.d3Node = d3.select(ReactDOM.findDOMNode(this))\r\n      .datum(this.props.data)\r\n      .call(this.enterTooltip);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.d3Node.datum(this.props.data)\r\n      .call(this.enterTooltip);\r\n  }\r\n\r\n  enterTooltip = (selection) => {\r\n    selection.select(\"foreignObject\")\r\n    .on(\"mouseout\", (d) => {\r\n        console.log('mouseout')\r\n        //this.props.rsn()\r\n      })\r\n    .attr(\"transform\", (d) => \"translate(\" + (d.x+25) + \",\" + (d.y-10) + \")\")\r\n    .classed(\"none\", (d) => { return (d.id !== this.props.selectedNode.id)})\r\n    .call(this.drag())\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    const renderTable = () => {\r\n      return (\r\n        <Scrollbox orientation=\"scrollbox-xy\">\r\n        <Table>\r\n          <tr>\r\n            <th>Property</th>\r\n            <th>Value</th>\r\n          </tr>\r\n          \r\n          {renderlinks()}\r\n        \r\n        </Table>\r\n        </Scrollbox>\r\n      ) \r\n  }\r\n\r\n  const linkBelongs = (link) => {\r\n    return (link.source.id === this.props.data.id) \r\n  }\r\n  \r\n  const renderlinks = () => {\r\n    var links = this.props.linksList.filter(linkBelongs)\r\n    console.log(\"linkslenght:\", links.length)\r\n    return links.map((link) => \r\n      {\r\n        if (link.target.type === 'uri' || isValidHttpUrl(link.target.id) ) {\r\n          return <tr><td><a href={link.property} target={link.property}>{link.property}</a></td><td><a href={link.target.id} target={link.target.id}>{link.target.id}</a></td></tr>\r\n        }\r\n        else {\r\n          return <tr><td><a href={link.property} target={link.property}>{link.property}</a></td><td>{link.target.id}</td></tr>\r\n        }\r\n        \r\n      }\r\n     \r\n     )\r\n  }\r\n\r\n    return (\r\n      <g>\r\n        <foreignObject width=\"1\" height=\"1\" className={styles.tooltip}>\r\n          <div>\r\n            <Popover id=\"popover-basic\" className={styles.popover}>\r\n              <Popover.Title as=\"h3\">\r\n                {<a href={this.props.data.id} target={this.props.data.id}>{this.props.data.id}</a>}\r\n                \r\n              <button type=\"button\" class=\"close\" onClick={() => this.props.rsn()}><span>×</span></button>\r\n              </Popover.Title>\r\n              <Popover.Content>\r\n                {renderTable()}\r\n              </Popover.Content>\r\n            </Popover>       \r\n          </div>\r\n        </foreignObject>\r\n      </g>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Tooltip\r\n\r\n\r\n","import * as d3 from 'd3'\r\nimport React from 'react'\r\n\r\nimport Node from './Node'\r\nimport NodeLabel from './NodeLabel'\r\nimport Link from './Link'\r\nimport LinkLabel from './LinkLabel'\r\nimport Marker from './Marker'\r\nimport Tooltip from './Tooltip'\r\n\r\nclass ForceGraph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nodes: props.nodes,\r\n      links: props.links\r\n    };\r\n\r\n    this.rs = this.restartSimulation.bind(this)\r\n    this.ssn = this.props.setSelectedNode.bind(this)\r\n    this.rsn = this.props.removeSelectedNode.bind(this)\r\n    this.facn = this.props.fetchAboutClickedNode.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('componentDidMount')\r\n    var element = document.getElementById('forcegraph');\r\n\r\n    // Redraw based on the new size whenever the browser window is resized.\r\n    window.addEventListener(\"resize\", () => {\r\n      this.initializeSVG(element.offsetWidth, element.offsetHeight)\r\n      this.restartSimulation()\r\n    });\r\n\r\n    //initial forcegraph\r\n    this.initializeSVG(element.offsetWidth, element.offsetHeight)\r\n\r\n    //initial forces\r\n    this.forceLink = d3.forceLink()\r\n      .links(this.props.links)\r\n      .distance(this.props.settings.linkDistance.value).id(function (d) { return d.id; })\r\n    this.forceCenter = d3.forceCenter((element.offsetWidth * 1) / 2, (element.offsetHeight * 1) / 2)\r\n    this.forceCharge = d3.forceManyBody()\r\n      .strength(this.props.settings.forceCharge.value) //defaul -30\r\n\r\n    //simulation --> simulation gets updated upon interaction\r\n    this.simulation = d3.forceSimulation(this.props.nodes.nodesList)\r\n      .force('center', this.forceCenter)\r\n      .force('charge', this.forceCharge)\r\n      .force('link', this.forceLink)\r\n\r\n    this.simulation.on('tick', () => {\r\n      console.log('tick')\r\n      this.setState({\r\n        //call this.setstate to rerender with react.\r\n      })\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevprops) {\r\n    if (this.props.data.id !== prevprops.data.id) { // check if any data has changed and restart the simulation with new nodes and links\r\n      \r\n      this.simulation.nodes(this.props.nodes.nodesList) // load new nodes\r\n      this.simulation.force('link').links(this.props.links) // load new links\r\n      this.restartSimulation()\r\n    }\r\n\r\n    if (this.props.settings !== prevprops.settings) { // check if settings have changed\r\n      \r\n      //apply new linkDistance\r\n      this.simulation.force(\"link\")\r\n        .distance(this.props.settings.linkDistance.value)\r\n\r\n      this.restartSimulation()\r\n    }\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.simulation.stop();\r\n  }\r\n\r\n  initializeSVG(width, height) {\r\n    var zoom = d3.zoom()\r\n      .scaleExtent([.5, 10])\r\n      .on(\"zoom\", zoomed);\r\n\r\n    var svg = d3.select(\"#forcegraph\").select(\"svg\")\r\n      .attr(\"class\", \"forcegraph\")\r\n      .style(\"width\", width * 1)   // set size of svg in relation to parent\r\n      .style(\"height\", height * 1) // set size of svg in relation to parent\r\n      .style(\"border\", \"1px solid black\")\r\n      .call(zoom).select(\"g\").attr(\"transform\", \"\")\r\n    \r\n    function zoomed() {\r\n      const currentTransform = d3.event.transform;\r\n      svg.attr(\"transform\", currentTransform);\r\n      //slider.property(\"value\", currentTransform.k);\r\n    }\r\n\r\n    // function slided(d) {\r\n    //   zoom.scaleTo(svg, d3.select(this).property(\"value\"));\r\n    // }\r\n\r\n    // var slider = d3.select(\"#forcegraph\").append(\"p\").append(\"input\")\r\n    //   .datum({})\r\n    //   .attr(\"type\", \"range\")\r\n    //   .attr(\"value\", zoom.scaleExtent()[0])\r\n    //   .attr(\"min\", zoom.scaleExtent()[0])\r\n    //   .attr(\"max\", zoom.scaleExtent()[1])\r\n    //   .attr(\"step\", (zoom.scaleExtent()[1] - zoom.scaleExtent()[0]) / 100)\r\n    //   .on(\"input\", slided);\r\n  }\r\n\r\n\r\n  restartSimulation() {\r\n    this.simulation.alpha(1).restart()\r\n  }\r\n\r\n  render() {\r\n\r\n    const rendertooltip = () => {\r\n      if(this.props.nodes.selectedNode){\r\n        return (<Tooltip data={this.props.nodes.selectedNode} datasource={this.props.datasource} rs={this.rs} ssn={this.ssn} rsn={this.rsn} facn={this.facn} selectedNode={this.props.nodes.selectedNode} linksList={this.props.links} ></Tooltip>)\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div id=\"forcegraph\">\r\n        <svg>\r\n          <g class=\"zoom\"> \r\n            <g class=\"links\">\r\n              {this.props.links.map((link, index) => <Link data={link} key={index} selectedNode={this.props.nodes.selectedNode}></Link>)}\r\n            </g>\r\n            <g class=\"nodesellipse\">\r\n              {this.props.nodes.nodesList.map((node, index) => <Node data={node} key={index} datasource={this.props.datasource} rs={this.rs} ssn={this.ssn} rsn={this.rsn} facn={this.facn} selectedNode={this.props.nodes.selectedNode} linksList={this.props.links} ></Node>)}\r\n            </g>\r\n            <g class=\"nodestext\">\r\n              {this.props.nodes.nodesList.map((node, index) => <NodeLabel data={node} key={index} datasource={this.props.datasource} rs={this.rs} ssn={this.ssn} rsn={this.rsn} facn={this.facn}></NodeLabel>)}\r\n            </g>\r\n            <g class=\"linkstext\">\r\n              {this.props.links.map((link, index) => <LinkLabel data={link} key={index}></LinkLabel>)}\r\n            </g>\r\n            <g class=\"defs\">\r\n              <Marker linksList={this.props.links}/>\r\n            </g>\r\n            <g class=\"tooltips\">\r\n              {rendertooltip()}\r\n            </g>\r\n          </g>\r\n        </svg>        \r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForceGraph","export const thunkCreator = (action) => {\r\n  const { types, promise, ...rest } = action\r\n  const [REQUESTED, RESOLVED, REJECTED] = types\r\n\r\n  return (dispatch) => {\r\n    dispatch({ ...rest, type: REQUESTED })\r\n\r\n    return promise\r\n      .then(result => {\r\n        if (result.error || result.errors) throw new Error(result.error)\r\n        dispatch({ ...rest, type: RESOLVED, result })\r\n        return result\r\n      })\r\n      .catch(error => {\r\n        dispatch({ ...rest, type: REJECTED, error })\r\n        //throw error\r\n      })\r\n  }\r\n}","import { SET_CURRENT_DATASOURCE, TOGGLE_SEARCHALL, TOGGLE_BLOCK_DATASOURCE, DELETE_DATASOURCE, ADD_DATASOURCE } from '../actionTypes'\r\nimport { SET_SELECTED_CLASS, SET_SELECTED_INSTANCE } from '../actionTypes'\r\n\r\nimport { FETCH_CLASSES_REQUEST, FETCH_CLASSES_SUCCESS, FETCH_CLASSES_FAILURE } from '../actionTypes'\r\nimport { FETCH_INSTANCES_OF_CLASS_REQUEST, FETCH_INSTANCES_OF_CLASS_SUCCESS, FETCH_INSTANCES_OF_CLASS_FAILURE } from '../actionTypes'\r\nimport { thunkCreator } from './utils'\r\nimport qs from 'qs'\r\nconst axios = require('axios');\r\n\r\nexport const setCurrentDatasource = (datasource) => {\r\n  return {\r\n    type: SET_CURRENT_DATASOURCE,\r\n    datasource\r\n  }\r\n}\r\n\r\nexport const toggleSearchAll = () => {\r\n  return {\r\n    type: TOGGLE_SEARCHALL\r\n  }\r\n}\r\n\r\nexport const toggleBlockDatasource = (datasource) => {\r\n  return {\r\n    type: TOGGLE_BLOCK_DATASOURCE,\r\n    datasource\r\n  }\r\n}\r\n\r\nexport const deleteDatasource = (datasource) => {\r\n  return {\r\n    type: DELETE_DATASOURCE,\r\n    datasource\r\n  }\r\n}\r\n\r\nexport const addDatasource = (name, endpoint) => {\r\n  return {\r\n    type: ADD_DATASOURCE,\r\n    name,\r\n    endpoint,\r\n  }\r\n}\r\n\r\nexport const fetchClasses = (datasource) => thunkCreator({\r\n  types: [FETCH_CLASSES_REQUEST, FETCH_CLASSES_SUCCESS, FETCH_CLASSES_FAILURE],\r\n  promise: axios({\r\n    method: 'post',\r\n    url: datasource,\r\n    data: qs.stringify({\r\n      action: 'exec',\r\n      queryLn: 'SPARQL',\r\n      ref: 'text',\r\n      query: 'SELECT DISTINCT ?type WHERE {?s a ?type.}',\r\n    }),\r\n    headers: {\r\n      Accept: 'application/sparql-results+json'\r\n    },\r\n\r\n  })\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})\r\n\r\nexport const fetchInstances = (datasource, c) => thunkCreator({\r\n  types: [FETCH_INSTANCES_OF_CLASS_REQUEST, FETCH_INSTANCES_OF_CLASS_SUCCESS, FETCH_INSTANCES_OF_CLASS_FAILURE],\r\n  promise: axios({\r\n    method: 'post',\r\n    url: datasource,\r\n    data: qs.stringify({\r\n      action: 'exec',\r\n      queryLn: 'SPARQL',\r\n      ref: 'text',\r\n      query:\r\n        'PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>' +\r\n        'PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>' +\r\n        'SELECT ?subject ?label WHERE {' +\r\n        '?subject rdf:type <' + c.type.value + '>.' +\r\n        '?subject rdfs:label ?label' +\r\n        '}',\r\n    }),\r\n    headers: {\r\n      Accept: 'application/sparql-results+json'\r\n    },\r\n\r\n  })\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})\r\n\r\nexport const setSelectedClass = (myclass) => {\r\n  return {\r\n    type: SET_SELECTED_CLASS,\r\n    myclass\r\n  }\r\n}\r\n\r\nexport const setSelectedInstance = (instance) => {\r\n  return {\r\n    type: SET_SELECTED_INSTANCE,\r\n    instance\r\n  }\r\n}\r\n\r\n\r\n","import { FETCH_TEST_REQUEST, FETCH_TEST_SUCCESS, FETCH_TEST_FAILURE } from '../actionTypes'\r\nimport { FETCH_SPARQL_REQUEST, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_FAILURE } from '../actionTypes'\r\n\r\nimport { thunkCreator } from './utils'\r\nimport qs from 'qs'\r\n\r\nconst axios = require('axios');\r\n\r\nexport const fetchTest = () => thunkCreator({\r\n  types: [FETCH_TEST_REQUEST, FETCH_TEST_SUCCESS, FETCH_TEST_FAILURE],\r\n  promise: fetch(`https://www.anapioficeandfire.com/api/books`)\r\n    .then(response => response.json())\r\n    .catch(error => { console.log(error) })\r\n\r\n})\r\n\r\nexport const fetchSparql = (query, datasource) => thunkCreator({\r\n  types: [FETCH_SPARQL_REQUEST, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_FAILURE],\r\n  promise: axios({\r\n    method: 'post',\r\n    url: datasource,\r\n    data: qs.stringify({\r\n      action: 'exec',\r\n      queryLn: 'SPARQL',\r\n      ref: 'text',\r\n      query,\r\n    }),\r\n    headers: {\r\n      Accept: 'application/sparql-results+json'\r\n    },\r\n\r\n  })\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})\r\n\r\n","import { SET_SELECTED_NODE, REMOVE_SELECTED_NODE, SET_SELECTED_HISTORYGRAPH } from '../actionTypes'\r\n\r\nimport { FETCH_ABOUT_CLICKED_NODE_REQUEST, FETCH_ABOUT_CLICKED_NODE_SUCCESS, FETCH_ABOUT_CLICKED_NODE_FAILURE } from '../actionTypes'\r\nimport { FETCH_SPARQL_ABOUTSUBJECT_REQUEST, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_FAILURE } from '../actionTypes'\r\nimport { FETCH_HISTORY_GRAPHS_REQUEST, FETCH_HISTORY_GRAPHS_SUCCESS, FETCH_HISTORY_GRAPHS_FAILURE } from '../actionTypes'\r\nimport { FETCH_FROM_HISTORIC_GRAPH_REQUEST, FETCH_FROM_HISTORIC_GRAPH_SUCCESS, FETCH_FROM_HISTORIC_GRAPH_FAILURE } from '../actionTypes'\r\n\r\nimport { thunkCreator } from './utils'\r\nimport qs from 'qs'\r\n\r\nconst axios = require('axios');\r\n\r\nexport const setSelectedNode = (node) => {\r\n  return {\r\n    type: SET_SELECTED_NODE,\r\n    node\r\n  }\r\n}\r\n\r\nexport const removeSelectedNode = (node) => {\r\n  return {\r\n    type: REMOVE_SELECTED_NODE,\r\n  }\r\n}\r\n\r\nexport const setSelectedHistoryGraph = (graph) => {\r\n  return {\r\n    type: SET_SELECTED_HISTORYGRAPH,\r\n    graph\r\n  }\r\n}\r\n\r\nexport const fetchAboutSubject = (query, datasource) => thunkCreator({\r\n  types: [FETCH_SPARQL_ABOUTSUBJECT_REQUEST, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_FAILURE],\r\n  promise: axios({\r\n    method: 'post',\r\n    url: datasource,\r\n    data: qs.stringify({\r\n      action: 'exec',\r\n      queryLn: 'SPARQL',\r\n      ref: 'text',\r\n      query,\r\n    }),\r\n    headers: {\r\n      Accept: 'application/sparql-results+json'\r\n    },\r\n    subject: query.substring(query.lastIndexOf(\"<\") + 1, query.lastIndexOf(\">\")) // get the subject from the querystring\r\n\r\n  })\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})\r\n\r\nexport const fetchAboutClickedNode = (subject, datasource) => thunkCreator({\r\n  types: [FETCH_ABOUT_CLICKED_NODE_REQUEST, FETCH_ABOUT_CLICKED_NODE_SUCCESS, FETCH_ABOUT_CLICKED_NODE_FAILURE],\r\n  promise: axios({\r\n    method: 'post',\r\n    url: datasource.currentDatasource,\r\n    data: qs.stringify({\r\n      action: 'exec',\r\n      queryLn: 'SPARQL',\r\n      ref: 'text',\r\n      query: 'SELECT * ' + 'WHERE { <' + subject + '> ?property ?object }' + 'limit 200'\r\n    }),\r\n    headers: {\r\n      Accept: 'application/sparql-results+json'\r\n    },\r\n    subject: subject\r\n\r\n  })\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})\r\n\r\nexport const fetchHistoryGraphs = (subject, datasource) => thunkCreator({\r\n  types: [FETCH_HISTORY_GRAPHS_REQUEST, FETCH_HISTORY_GRAPHS_SUCCESS, FETCH_HISTORY_GRAPHS_FAILURE],\r\n  promise: axios({\r\n    method: 'post',\r\n    url: datasource.currentDatasource,\r\n    data: qs.stringify({\r\n      action: 'exec',\r\n      queryLn: 'SPARQL',\r\n      ref: 'text',\r\n      query:\r\n      //START \r\n      'PREFIX foaf: <http://xmlns.com/foaf/0.1/> prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> select ?subject ?graph where { graph ?graph {{?subject foaf:page ?object FILTER (regex(?subject, \"' + subject + \r\n      '\", \"i\")) .}}{SELECT ?subject WHERE {<' + subject + '>?predicate ?object } LIMIT 1}}'\r\n      //END\r\n    }),\r\n    headers: {\r\n      Accept: 'application/sparql-results+json'\r\n    },\r\n    subject: subject\r\n\r\n  })\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})\r\n\r\nexport const fetchFromHistoricGraphs = (subject, datasource) => thunkCreator({\r\n  types: [FETCH_FROM_HISTORIC_GRAPH_REQUEST, FETCH_FROM_HISTORIC_GRAPH_SUCCESS, FETCH_FROM_HISTORIC_GRAPH_FAILURE],\r\n  promise: axios({\r\n    method: 'post',\r\n    url: datasource.currentDatasource,\r\n    data: qs.stringify({\r\n      action: 'exec',\r\n      queryLn: 'SPARQL',\r\n      ref: 'text',\r\n      query:\r\n      //START \r\n        'Select * where {Graph <' + subject + '> { ?subject ?property ?object .}}'\r\n\r\n      //END\r\n    }),\r\n    headers: {\r\n      Accept: 'application/sparql-results+json'\r\n    },\r\n    subject: subject\r\n\r\n  })\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})","import { SET_FORCEGRAPH_SETTINGS } from '../actionTypes'\r\n\r\nexport const setForcegraphSettings = (settings) => {\r\n  return {\r\n    type: SET_FORCEGRAPH_SETTINGS,\r\n    settings\r\n  }\r\n}","import { CREATE_ERROR, CLEAR_ERROR } from '../actionTypes'\r\n\r\nexport const createError = (error) => {\r\n  return {\r\n    type: CREATE_ERROR,\r\n    error\r\n\r\n  }\r\n}\r\n\r\nexport const clearError = () => {\r\n  return {\r\n    type: CLEAR_ERROR,\r\n  }\r\n}\r\n\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ForceGraph from '../components/ForceGraph'\r\n\r\nimport { setSelectedNode, removeSelectedNode, fetchAboutClickedNode } from '../redux/actions/index'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    nodes: state.nodes,\r\n    datasource: state.datasource,\r\n    links: state.links,\r\n    data: state.data,\r\n    settings: state.forcegraphsettings,\r\n    history: state.router\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({\r\n    setSelectedNode,\r\n    removeSelectedNode,\r\n    fetchAboutClickedNode\r\n  }, dispatch)\r\n\r\nconst ConnectedForceGraph = connect(mapStateToProps, mapDispatchToProps)(ForceGraph)\r\n\r\nexport default ConnectedForceGraph","import React from 'react'\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\n\r\nclass AddDatasource extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = ({\r\n      show: false,\r\n      name: '',\r\n      endpoint: '',\r\n\r\n    })\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this)\r\n    this.handleEndpointChange = this.handleEndpointChange.bind(this)\r\n  }\r\n  handleModal() {\r\n    this.setState({\r\n      show: !this.state.show,\r\n      name: '',\r\n      endpoint: '',\r\n    })\r\n  }\r\n\r\n  handleNameChange(event) {\r\n    console.log(event.target.value)\r\n    this.setState({ name: event.target.value });\r\n  }\r\n\r\n  handleEndpointChange(event) {\r\n    console.log(event.target.value)\r\n    this.setState({ endpoint: event.target.value });\r\n  }\r\n\r\n  handleSubmitDatasource() {\r\n    console.log('submit datasource')\r\n\r\n    this.props.addDatasource(this.state.name, this.state.endpoint)\r\n\r\n    this.setState({\r\n      show: !this.state.show\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={() => { this.handleModal() }}>\r\n          Databron Toevoegen\r\n      </Button>\r\n\r\n        <Modal\r\n          show={this.state.show}\r\n          onHide={() => this.handleModal()}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Databron Toevoegen: </Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n\r\n            <Form onSubmit={() => this.handleSubmitDatasource()}>\r\n\r\n              <Form.Group controlId=\"formName\">\r\n                <Form.Label>Naam:</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Naam\" onChange={this.handleNameChange} />\r\n\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formEndpoint\">\r\n                <Form.Label>Endpoint:</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Endpoint\" onChange={this.handleEndpointChange} />\r\n              </Form.Group>\r\n            </Form>\r\n\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => { this.handleModal() }}>Sluiten</Button>\r\n            <Button variant=\"primary\" onClick={() => { this.handleSubmitDatasource() }}>Opslaan</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default AddDatasource\r\n\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport AddDatasource from '../components/AddDataSource'\r\n\r\nimport { addDatasource } from '../redux/actions/datasource'\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({\r\n    addDatasource,\r\n  }, dispatch)\r\n\r\nconst ConnectedAddDatasource = connect(mapStateToProps, mapDispatchToProps)(AddDatasource)\r\n\r\nexport default ConnectedAddDatasource","import React from 'react';\r\nimport { ButtonGroup, Button, Dropdown, Row, Col } from 'react-bootstrap'\r\n\r\nimport ConnectedAddDatasource from '../containers/ConnectedAddDatasource'\r\n\r\nclass DataSourceDropdown extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n  render() {\r\n    const renderBlockButton = (item) => {\r\n      if (item.active) {\r\n        return (\r\n          <Button onClick={() => this.props.toggleBlockDatasource(item)}>Block </Button>\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n          <Button onClick={() => this.props.toggleBlockDatasource(item)}>Unblock </Button>\r\n        )\r\n      }\r\n    }\r\n\r\n    const renderDatasourceDropdown = () => {\r\n      if (this.props.datasource.searchAll === 'Uit') {\r\n        return (\r\n          <Dropdown className=\"w-100\">\r\n            <Dropdown.Toggle >Geselecteerde bron: {this.props.datasource.currentDatasource}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              {this.props.datasource.datasources.map((item, key) =>\r\n                <Dropdown.Item key={key} >\r\n                  <Row>\r\n                    <Col>\r\n                      <div onClick={() => this.props.setCurrentDatasource(item)}>{item.name}</div>\r\n                    </Col>\r\n                    <Col>\r\n                      <ButtonGroup className=\"float-right\">\r\n\r\n                        {renderBlockButton(item)}\r\n                        <Button onClick={() => this.props.deleteDatasource(item)}>Remove</Button>\r\n                      </ButtonGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </Dropdown.Item>\r\n              )}\r\n              {<ConnectedAddDatasource />}\r\n            </Dropdown.Menu>\r\n          </Dropdown>)\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div id=\"Datasource\">\r\n        <Row>\r\n          <Col sm={4}>\r\n            <Button className=\"w-100\" onClick={() => this.props.toggleSearchAll()}>Doorzoek alle bronnen: {this.props.datasource.searchAll}</Button>\r\n          </Col>\r\n          <Col sm={8}>\r\n            {renderDatasourceDropdown()}\r\n          </Col>\r\n        </Row>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DataSourceDropdown\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport DataSource from '../components/DataSource'\r\nimport { setCurrentDatasource, toggleSearchAll, toggleBlockDatasource, deleteDatasource } from '../redux/actions/index';\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    datasource: state.datasource\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({\r\n    setCurrentDatasource,\r\n    toggleSearchAll,\r\n    toggleBlockDatasource,\r\n    deleteDatasource,\r\n  }, dispatch)\r\n\r\nconst ConnectedDataSource = connect(mapStateToProps, mapDispatchToProps)(DataSource)\r\n\r\nexport default ConnectedDataSource","import React from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass QueryForm extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      query: \"\",\r\n      //query: \"SELECT * WHERE\" + \"{\" + \"?sub ?pred ?obj .\" + \"}\" + \"LIMIT 10\",\r\n      subject: \"\",\r\n      //subject: \"http://lod.onderwijsregistratie.nl/rio/id/Onderwijsbestuur/100B490\",\r\n    }\r\n\r\n    this.handleQueryChange = this.handleQueryChange.bind(this);\r\n    this.handleQuerySubmit = this.handleQuerySubmit.bind(this);\r\n\r\n    this.handleSubjectChange = this.handleSubjectChange.bind(this)\r\n    this.handleSubjectDetailsQuerySubmit = this.handleSubjectDetailsQuerySubmit.bind(this)\r\n\r\n  }\r\n\r\n  handleQueryChange(event) {\r\n    console.log(event.target.value)\r\n    this.setState({ query: event.target.value });\r\n  }\r\n\r\n  handleQuerySubmit(event) {\r\n    this.props.removeSelectedNode()\r\n    this.props.fetchSparql(this.state.query, this.props.datasource.currentDatasource)\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleSubjectChange(event) {\r\n    console.log(event.target.value)\r\n    this.setState({ subject: event.target.value });\r\n  }\r\n\r\n  handleSubjectDetailsQuerySubmit(event) {\r\n    var uri = this.state.subject\r\n    const query = 'SELECT * ' +\r\n      'WHERE { <' + uri + '> ?property ?object }' +\r\n      'limit 200';\r\n    this.props.removeSelectedNode()\r\n    this.props.fetchAboutSubject(query, this.props.datasource.currentDatasource)\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <div id=\"querysubjectdetails form\">\r\n          <Form onSubmit={this.handleSubjectDetailsQuerySubmit}>\r\n\r\n            <Form.Group controlId=\"SubjectInput\">\r\n              <Form.Label> Vul een URI in:</Form.Label>\r\n              <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"http://lod.onderwijsregistratie.nl/rio/id/Onderwijsbestuur/100B490\" value={this.state.subject} onChange={this.handleSubjectChange} />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n          </Form>\r\n        </div>\r\n\r\n        <div id=\"queryform\">\r\n          <Form onSubmit={this.handleQuerySubmit}>\r\n\r\n            <Form.Group controlId=\"QueryInput\">\r\n              <Form.Label>Vul een query in:</Form.Label>\r\n              <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Input query\" value={this.state.query} onChange={this.handleQueryChange} />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n          </Form>\r\n        </div>\r\n\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default QueryForm\r\n\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport QueryForm from '../components/QueryForm'\r\nimport { fetchTest, fetchSparql, fetchAboutSubject, removeSelectedNode } from '../redux/actions/index'\r\nimport { push } from 'connected-react-router'\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    datasource: state.datasource,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({ \r\n    fetchTest, \r\n    fetchSparql, \r\n    fetchAboutSubject, \r\n    removeSelectedNode,\r\n    push \r\n  }, dispatch)\r\n\r\nconst ConnectedQueryForm = connect(mapStateToProps, mapDispatchToProps)(QueryForm)\r\n\r\nexport default ConnectedQueryForm","import React from 'react'\r\nimport { Button, Card } from 'react-bootstrap'\r\n\r\nclass Example extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      query: \"SELECT * WHERE\" + \"{\" + \"?sub ?pred ?obj .\" + \"}\" + \"LIMIT 10\",\r\n      subject: \"http://lod.onderwijsregistratie.nl/rio/id/Onderwijsbestuur/100B490\",\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        \r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Persoon & relevante adressen</Card.Title>\r\n              <Card.Text>\r\n                Dit voorbeeld laat zien hoe de applicatie een persoon visualiseerd met de bijbehorende relevante adressen</Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Button onClick={() => { \r\n                this.props.removeSelectedNode()\r\n                this.props.fetchTest()\r\n                }}>Bekijk voorbeeld</Button>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Extra gevens opvragen </Card.Title>\r\n              <Card.Text>\r\n                Een blauwe node representeerd een uri, door hierop te klikken kan extra informatie over deze uri worden opgevraagd en toegeveogd aan de visualisatie.</Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Button onClick={() => {\r\n                this.props.removeSelectedNode()\r\n                this.props.fetchAboutSubject('SELECT * ' +\r\n                'WHERE { <http://lod.onderwijsregistratie.nl/rio/id/Onderwijsbestuur/100B490> ?property ?object }' +\r\n                'limit 200', this.props.datasource.currentDatasource)}}>Bekijk voorbeeld</Button>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Zoeken op basis van text input</Card.Title>\r\n              <Card.Text>\r\n                <p>U kunt in de applicatie ook zoeken op basis van text. Hiervoor gaat u naar de tab \"Zoeken\". </p>\r\n                <p>Hierbij kunt u eerst het klasse type waarop u wilt zoeken selecteren door de naam hiervan in te vullen in het klasseveld, en een optie uit de lijst te selecteren.</p>\r\n                <p>Vervolgens kunt u met het 2e zoekveld \"instane\" een instanie van de eerder geselecteerde klasse selecteren.</p>\r\n                <p>Druk nu op de knop \"Laad instance\" en de applicatie doet de rest.</p>\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Example","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Examples from '../components/Examples'\r\nimport { fetchTest, fetchSparql, fetchAboutSubject, removeSelectedNode} from '../redux/actions/index'\r\nimport { push } from 'connected-react-router'\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    datasource: state.datasource,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({ \r\n    fetchTest,\r\n    fetchSparql, \r\n    fetchAboutSubject, \r\n    removeSelectedNode,\r\n    push \r\n  }, dispatch)\r\n\r\nconst ConnectedExamples = connect(mapStateToProps, mapDispatchToProps)(Examples)\r\n\r\nexport default ConnectedExamples","import React from 'react'\r\n\r\nimport ScrollBox from './ScrollBox'\r\nimport styles from './Search.module.scss';\r\n\r\nimport { Button, Form, ListGroup } from 'react-bootstrap'\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      class: '',\r\n      instance: ''\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('comp mounted')\r\n    this.props.fetchClasses(this.props.datasource.currentDatasource)\r\n  }\r\n\r\n  componentDidUpdate(prevprops) {\r\n    if (this.props.datasource.currentDatasource !== prevprops.datasource.currentDatasource) { // check if any data has changed and restart the simulation if so currently based on id in linkreducer\r\n      console.log('datasource has been updated, fetching new classes list')\r\n      this.props.fetchClasses(this.props.datasource.currentDatasource)\r\n    }\r\n    if (this.props.datasource.selectedClass !== prevprops.datasource.selectedClass) {\r\n      console.log('the selected class has changed, fetching new instances list')\r\n      this.props.fetchInstances(this.props.datasource.currentDatasource, this.props.datasource.selectedClass)\r\n    }\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    }, (event) => {\r\n      console.log(this.state)\r\n    })\r\n  }\r\n\r\n  filterClassHelper(c) {\r\n    if (c.type.value.toLowerCase().includes(this.state.class.toLowerCase()) && this.state.class !== '') {\r\n      return true\r\n    }\r\n    else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  filterInstanceHelper(instance) {\r\n    if ((instance.subject.value.toLowerCase().includes(this.state.instance.toLowerCase()) || instance.label.value.toLowerCase().includes(this.state.instance.toLowerCase())) && this.state.instance !== '') {\r\n      return true\r\n    }\r\n    else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  renderKlasseLabel(value, valueName) {\r\n    if(value)\r\n  return <Form.Label>Geselecteerde {valueName}: {value.type.value}</Form.Label>\r\n    else {\r\n      return <Form.Label>Selecteer een {valueName}:</Form.Label>\r\n    }\r\n  }\r\n\r\n  renderInstanceLabel(value, valueName) {\r\n    if(value)\r\n  return <Form.Label>Geselecteerde {valueName}: {value.subject.value}</Form.Label>\r\n    else {\r\n      return <Form.Label>Selecteer een {valueName}:</Form.Label>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.SearchForm}>\r\n      <Form>\r\n      {this.renderKlasseLabel(this.props.datasource.selectedClass, 'klasse')}\r\n        <Form.Control as=\"input\" type=\"text\" placeholder=\"Vul een klassenaam in\" name=\"class\" onChange={this.handleChange}></Form.Control>\r\n        <div id='classSelector'>\r\n          <ScrollBox orientation=\"scrollbox-y\">\r\n            <ListGroup as=\"ul\">\r\n              {this.props.datasource.classes.filter((c) => { return this.filterClassHelper(c) }).map((c, index) => {\r\n                if (this.props.datasource.selectedClass === c) {\r\n                  return (<ListGroup.Item as=\"li\" className={styles.active} key={index} onClick={() => this.props.setSelectedClass(c)}>\r\n                    {c.type.value}\r\n                  </ListGroup.Item>)\r\n                }\r\n                else {\r\n                  return (<ListGroup.Item as=\"li\" key={index} onClick={() => this.props.setSelectedClass(c)}>\r\n                    {c.type.value}\r\n                  </ListGroup.Item>)\r\n                }\r\n              }\r\n              )}\r\n            </ListGroup>\r\n          </ScrollBox>\r\n        </div>\r\n\r\n        {this.renderInstanceLabel(this.props.datasource.selectedInstance, 'instance')}\r\n        <Form.Control as=\"input\" type=\"text\" placeholder=\"Vul een uri of label in\" name=\"instance\" onChange={this.handleChange}></Form.Control>\r\n        <div id='instanceSelector'>\r\n          <ScrollBox>\r\n            <ListGroup as=\"ul\">\r\n              {this.props.datasource.instances.filter((instance) => { return this.filterInstanceHelper(instance) }).map((instance, index) => {\r\n                if (this.props.datasource.selectedInstance === instance) {\r\n                  return (<ListGroup.Item as=\"li\" className={styles.active} key={index} onClick={() => this.props.setSelectedInstance(instance)}>\r\n                    {instance.subject.value}, {instance.label.value}\r\n                  </ListGroup.Item>)\r\n                }\r\n                else {\r\n                  return (<ListGroup.Item as=\"li\" key={index} onClick={() => {\r\n                    this.props.setSelectedInstance(instance)\r\n                    //clear nodes \r\n                    //clear links\r\n                    // fetch data\r\n                  }\r\n                  }>\r\n                    {instance.subject.value}, {instance.label.value}\r\n                  </ListGroup.Item>)\r\n                }\r\n              }\r\n              )}\r\n            </ListGroup>\r\n          </ScrollBox>\r\n        </div>\r\n        <Button onClick={\r\n          () => {\r\n                    //check\r\n                    if(!(this.props.datasource.selectedInstance)){\r\n                    console.log('Selecteer een instane')\r\n                    //dispath an errror\r\n                    var error = {}\r\n                    error.message = 'Geen instance geselecteerd, selecteer een instance'\r\n                    this.props.createError(error)\r\n                    }\r\n                    else{\r\n                      //fetch\r\n                      this.props.removeSelectedNode()\r\n                    this.props.fetchAboutSubject('SELECT * ' +\r\n                    'WHERE { <' + this.props.datasource.selectedInstance.subject.value  + '> ?property ?object }' +\r\n                    'limit 200', this.props.datasource.currentDatasource)  \r\n                    }\r\n                    \r\n                }\r\n                    }\r\n                \r\n                >laad instance\r\n\r\n        </Button>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Search from '../components/Search'\r\n\r\nimport { fetchClasses, fetchInstances, setSelectedClass, setSelectedInstance, fetchAboutSubject, createError, removeSelectedNode } from '../redux/actions/index'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    nodes: state.nodes,\r\n    datasource: state.datasource,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props, state) =>\r\n  bindActionCreators({\r\n    fetchClasses,\r\n    fetchInstances,\r\n    setSelectedClass,\r\n    setSelectedInstance,\r\n    fetchAboutSubject,\r\n    removeSelectedNode,\r\n    createError,\r\n  }, dispatch)\r\n\r\nconst ConnectedSearch = connect(mapStateToProps, mapDispatchToProps)(Search)\r\n\r\nexport default ConnectedSearch","import React from 'react'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nclass Slider extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      linkDistance: {\r\n        min: 0,\r\n        max: 800,\r\n        value: 400,\r\n      },\r\n      forceCharge: {\r\n        min: 0,\r\n        max: 3000,\r\n        value: 3000,\r\n\r\n      }\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.submit = this.applySettings.bind(this)\r\n  }\r\n\r\n  handleChange(event) {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    let min = event.target.min\r\n    let max = event.target.max\r\n    console.log(event)\r\n    this.setState({\r\n      [name]: { min: min, max: max, value: value }\r\n    }, () => {\r\n      this.applySettings();\r\n    });\r\n  }\r\n\r\n  applySettings() {\r\n    this.props.setForcegraphSettings(this.state)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"slidecontainer\">\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>Link distance: {this.state.linkDistance.value}</Form.Label>\r\n            <Form.Control type=\"range\" name='linkDistance' min={this.state.linkDistance.min} max={this.state.linkDistance.max} value={this.state.linkDistance.value} class=\"slider\" id=\"linkDistance\" onChange={this.handleChange} ></Form.Control>\r\n          </Form.Group>\r\n          {/* <Form.Group>\r\n            <Form.Label>attraction: {this.state.forceCharge.value}</Form.Label>\r\n            <Form.Control type=\"range\" name='forceCharge' min={this.state.forceCharge.min} max={this.state.forceCharge.max} value={this.state.forceCharge.value} class=\"slider\" id=\"forceCharge\" onChange={this.handleChange} ></Form.Control>\r\n          </Form.Group> */}\r\n        </Form>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Slider","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ForcegraphSettings from '../components/forcegraphSettings'\r\n\r\nimport { setForcegraphSettings } from '../redux/actions/forcegraphSettings'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    settings: state.forcegraphsettings\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({\r\n    setForcegraphSettings,\r\n  }, dispatch)\r\n\r\nconst ConnectedSlider = connect(mapStateToProps, mapDispatchToProps)(ForcegraphSettings)\r\n\r\nexport default ConnectedSlider","import React from 'react'\r\nimport { isValidHttpUrl } from '../utils/index'\r\n\r\nimport { Form, Table } from 'react-bootstrap'\r\n\r\nimport { fetchFromHistoricGraphs } from '../redux/actions/index'\r\n\r\nclass History extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = ({\r\n      docURI: null,\r\n      data: null\r\n        })\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\nhandleChange(event) {\r\n  \r\n  console.log(event.target.value)\r\n\r\n  this.props.sshg(event.target.value)  \r\n  this.props.ffhg(event.target.value, this.props.datasource)\r\n  \r\n}\r\n\r\n  componentDidMount(){\r\n    if(isValidHttpUrl(this.props.selectedNode.id)){\r\n      // fire query to determine all the graph that exist of the selected node uri\r\n      this.props.fhg(this.props.selectedNode.id, this.props.datasource)\r\n    }\r\n    \r\n  }\r\n\r\n  componentDidUpdate(prevprops){\r\n    if(this.props.selectedNode.id !==  prevprops.selectedNode.id && isValidHttpUrl(this.props.selectedNode.id)){\r\n      // fire query to determine all the graph that exist of the selected node uri when it gets updated\r\n      this.props.fhg(this.props.selectedNode.id, this.props.datasource)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(\"rerender\")\r\n\r\n const renderHistorySelect = () => {\r\n   if(this.props.selectedNode.historyList && this.props.selectedNode.historyList.length > 1){  \r\n   return(\r\n    <>\r\n      <p>History van: {this.props.selectedNode.id}</p>\r\n      <Form>\r\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n          <Form.Label>History opties</Form.Label>\r\n          <Form.Control as=\"select\" onChange={this.handleChange}>\r\n            {this.props.selectedNode.historyList.map((h, i) => {\r\n              return (<option key={i}>{h}</option>) })}\r\n          </Form.Control>\r\n        </Form.Group>\r\n      </Form>\r\n  </>\r\n\r\n   )\r\n   } \r\n   else {\r\n     return(<p>Geen history beschikbaar</p>)\r\n   }\r\n  }\r\n\r\n  const renderHistory = () => {\r\n    \r\n    if(this.props.selectedNode.history){\r\n      return(\r\n        <>\r\n         <Table responsive>\r\n              <tr>\r\n                <th>Subject</th>\r\n                <th>Property</th>\r\n                <th>Value</th>\r\n              </tr>\r\n              \r\n              {this.props.selectedNode.history.map((link, index) => {\r\n                return(\r\n                <tr>\r\n                  <td><a href={link.subject.value}>{link.subject.value}</a></td>\r\n                  <td><a href={link.property.value}>{link.property.value}</a></td>\r\n                  <td>{link.object.value}</td>\r\n                </tr>)})}\r\n            </Table>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n    return(\r\n      <div>\r\n            {renderHistorySelect()}\r\n            {renderHistory()}\r\n            \r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default History","import React from 'react'\r\nimport { isValidHttpUrl } from '../utils/index'\r\n\r\nimport { Tab, Tabs, Table } from 'react-bootstrap'\r\n\r\nimport ConnectedQueryForm from '../containers/ConnectedQueryForm'\r\nimport ConnectedExamples from '../containers/ConnectedExamples';\r\nimport ConnectedSearch from '../containers/ConnectedSearch'\r\nimport ConnectedForcegraphSettings from '../containers/ConnectedForcegraphSettings'\r\nimport History from '../components/History'\r\nimport TableLink from '../components/TableLink'\r\n\r\nclass ForeGraphSidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.fhg = this.props.fetchHistoryGraphs.bind(this)\r\n    this.ffhg = this.props.fetchFromHistoricGraphs.bind(this)\r\n    this.sshg = this.props.setSelectedHistoryGraph.bind(this)\r\n  }\r\n\r\n  render () {\r\n\r\n    const renderlinks = (nodes, links) => {\r\n    return links.map((link, index) => \r\n      {\r\n        return(<TableLink key={index} link={link}></TableLink>)\r\n        \r\n      }\r\n     \r\n     )\r\n  }\r\n    \r\n    const renderNodesandLinksTab = (nodes, links) => {\r\n        return (\r\n          <Tab eventKey=\"Nodes & links\" title=\"Nodes & links\">\r\n            <Table responsive>\r\n              <tr>\r\n                <th>Subject</th>\r\n                <th>Property</th>\r\n                <th>Value</th>\r\n              </tr>\r\n              \r\n              {links.map((link, index) => {return(<tr key={link.source.id}>\r\n                <td>{link.source.id}</td>\r\n                <td>{link.property}</td>\r\n                <td>{link.target.id}</td>\r\n              </tr>)})}\r\n            </Table>\r\n          </Tab>\r\n        )\r\n      \r\n    }\r\n\r\n    const renderHistoryTab = (nodes) => {\r\n      if (nodes.selectedNode !== \"\" && isValidHttpUrl(nodes.selectedNode.id)) {\r\n        return (\r\n          <Tab eventKey=\"History\" title=\"History\">\r\n            <History selectedNode={this.props.nodes.selectedNode} datasource={this.props.datasource} fhg={this.fhg} ffhg={this.ffhg} sshg={this.sshg}></History>\r\n          </Tab>\r\n\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n          null\r\n        )\r\n      }\r\n    }\r\n\r\n    return(\r\n      <Tabs defaultActiveKey=\"Zoeken\" id=\"uncontrolled-tab-example\">\r\n        <Tab eventKey=\"Zoeken\" title=\"Zoeken\">\r\n          <ConnectedSearch></ConnectedSearch>\r\n          <ConnectedQueryForm></ConnectedQueryForm>\r\n        </Tab>\r\n        <Tab eventKey=\"Instellingen\" title=\"Instellingen\">\r\n          <ConnectedForcegraphSettings />\r\n        </Tab>\r\n        <Tab eventKey=\"Voorbeelden\" title=\"Voorbeelden\">\r\n          <ConnectedExamples></ConnectedExamples>\r\n        </Tab>\r\n        {renderNodesandLinksTab(this.props.nodes, this.props.links)}\r\n        {renderHistoryTab(this.props.nodes)}\r\n      </Tabs>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ForeGraphSidebar","import React from 'react'\r\nimport { isValidHttpUrl } from '../utils/index'\r\n\r\nclass TableLink extends React.Component {\r\n\r\n  shouldComponentUpdate(){\r\n // make sure ompoentn updates\r\n  }\r\n\r\n  render() {\r\n\r\n    const renderSubject = () => {\r\n      if (this.props.link.source.type === 'uri' || isValidHttpUrl(this.props.link.target.id)  ){\r\n        return <a href={this.props.link.source.id} target={this.props.link.source.id}>{this.props.link.source.id}</a>\r\n      }\r\n      else {\r\n       return this.props.link.source.id\r\n      }\r\n\r\n    }\r\n\r\n    const renderProperty = () => {\r\n      return <a href={this.props.link.property} target={this.props.link.property}>{this.props.link.property}</a>\r\n    }\r\n\r\n    const renderObject = () => {\r\n      if (this.props.link.property.type === 'uri' || isValidHttpUrl(this.props.link.target.id) ){\r\n        return <a href={this.props.link.target.id} target={this.props.link.target.id}>{this.props.link.target.id}</a>\r\n      }\r\n      else {\r\n        return this.props.link.target.id\r\n      }\r\n    }\r\n\r\n    return (\r\n    <tr>\r\n      <td>\r\n        {renderSubject()}\r\n      </td>\r\n      <td>\r\n        {renderProperty()}\r\n      </td>\r\n      <td>\r\n        {renderObject()}\r\n      </td>\r\n\r\n    </tr>)\r\n  }\r\n}\r\n\r\nexport default TableLink","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ForceGraphSidebar from '../components/ForceGraphSidebar'\r\nimport { setSelectedNode, removeSelectedNode, fetchAboutClickedNode, fetchHistoryGraphs, fetchFromHistoricGraphs, setSelectedHistoryGraph} from '../redux/actions/index'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    data: state.data,\r\n    datasource: state.datasource,\r\n    nodes: state.nodes,\r\n    links: state.links,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({ \r\n    setSelectedNode,\r\n    removeSelectedNode,\r\n    fetchAboutClickedNode,\r\n    fetchHistoryGraphs,\r\n    fetchFromHistoricGraphs,\r\n    setSelectedHistoryGraph,\r\n\r\n  }, dispatch)\r\n\r\nconst ConnectedForceGraphSidebar = connect(mapStateToProps, mapDispatchToProps)(ForceGraphSidebar)\r\n\r\nexport default ConnectedForceGraphSidebar","import React from 'react'\r\n\r\n\r\nimport { Row, Col, } from 'react-bootstrap'\r\n\r\nimport { Container } from 'react-bootstrap'\r\n\r\n\r\nimport ConnectedForceGraph from '../containers/ConnectedForceGraph';\r\nimport ConnectedDataSource from '../containers/ConnectedDataSource'\r\nimport ConnectedForceGraphSidebar from '../containers/ConnectedForceGraphSidebar'\r\n\r\nclass Graph extends React.Component {\r\n  render() {\r\n    console.log(this.props.match.path)\r\n    return (\r\n      <Container fluid id=\"PageContent\">\r\n      <div className=\"Graph\">\r\n        <h2>Graph</h2>\r\n        <Row>\r\n          <Col sm={4}>\r\n          </Col>\r\n          <Col>\r\n            <ConnectedDataSource />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={4}>\r\n            <ConnectedForceGraphSidebar></ConnectedForceGraphSidebar>\r\n          </Col>\r\n          <Col sm={8}><ConnectedForceGraph /></Col>\r\n          </Row>\r\n\r\n          \r\n        \r\n      </div>\r\n      </Container>\r\n      \r\n    )\r\n  }\r\n}\r\nexport default Graph","import React from 'react'\r\n\r\nimport { Container } from 'react-bootstrap'\r\n\r\nclass Contact extends React.Component {\r\n  onSubmit = () => {\r\n    this.props.history.push('/')\r\n  }\r\n  render() {\r\n    return (\r\n      <Container id=\"contact\">\r\n      <div className=\"Contact\">\r\n        <h2>Contact form</h2>\r\n        <form>\r\n          <input placeholder=\"name\" type=\"name\" />\r\n          <input placeholder=\"email\" type=\"email\" />\r\n          <button onClick={this.onSubmit}>Submit</button>\r\n        </form>\r\n      </div>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\nexport default Contact","import React from 'react'\r\n\r\nclass NotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"NotFound\">\r\n        <h1>Not Found...</h1>\r\n        <button onClick={() => this.props.history.push('/home')}>Go home</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default NotFound","import React from 'react'\r\nimport {\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom'\r\n\r\n\r\n\r\n//pages\r\nimport Home from '../pages/Home'\r\nimport Graph from '../pages/Graph'\r\nimport Contact from '../pages/Contact'\r\nimport Notfound from '../pages/NotFound'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nclass PageContent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container id=\"PageContent\">\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/sparql-react-browser/\" component={Home} />\r\n            <Route exact path=\"/sparql-react-browser/home\" component={Home} />\r\n            <Route path=\"/sparql-react-browser/graph\" component={Graph} />\r\n            <Route path=\"/sparql-react-browser/contact\" component={Contact} />\r\n\r\n            <Route component={Notfound} />\r\n          </Switch>\r\n        </div>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PageContent","import React from 'react'\r\n\r\nconst Loading = ({ isLoading }) =>\r\n  isLoading && <span>Loading...</span>\r\n\r\nexport default Loading","import { connect } from 'react-redux'\r\nimport Loading from '../components/Loading'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const { loading } = state\r\n\r\n  const isLoading = Object.keys(loading).reduce((result, requestName) => {\r\n    if (result === true) return true\r\n    if (loading[requestName] > 0) return true\r\n    return false\r\n  }, false)\r\n\r\n  return { isLoading }\r\n}\r\n\r\nconst ConnectedLoading = connect(mapStateToProps)(Loading)\r\n\r\nexport default ConnectedLoading","import React from 'react'\r\n\r\nimport { Modal, Button } from 'react-bootstrap'\r\n\r\nconst Error = ({ message, clearError }) =>\r\n  message\r\n    ? <Modal show={true} onHide={() => clearError()}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Error</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{message}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={() => clearError()}>\r\n            Begrepen\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    : null\r\n\r\nexport default Error","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { clearError } from '../redux/actions/index'\r\n\r\nimport Error from '../components/Error'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    message: state.error && state.error.message\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props, state) =>\r\n  bindActionCreators({\r\n    clearError,\r\n  }, dispatch)\r\n\r\nconst ConnectedError = connect(mapStateToProps, mapDispatchToProps)(Error)\r\n\r\nexport default ConnectedError","import React from 'react';\r\n\r\n//Router\r\nimport { ConnectedRouter } from 'connected-react-router'\r\nimport { history } from './redux/store/middleware'\r\n\r\n//custom stylesheet\r\nimport './css/Custom.scss';\r\n\r\n//devtools\r\nimport DevTools from './containers/DevTools.jsx'\r\n\r\nimport { Provider } from 'react-redux'\r\n\r\nimport configureStore from './redux/store/index'\r\n\r\n// Layout components\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport PageContent from './components/PageContent';\r\nimport ConnectedLoading from './containers/ConnectedLoading'\r\nimport ConnectedError from './containers/ConnectedError'\r\n\r\n//init redux store\r\nconst store = configureStore()\r\n\r\nconsole.log('initializing store: ', store.getState())\r\n\r\n// const unsubscribe = store.subscribe(() => {\r\n//   //console.log('state changed: ', store.getState())\r\n// })\r\n\r\n\r\n\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <div className=\"App\">\r\n      <ConnectedRouter history={history}>\r\n        <Header />\r\n        <PageContent />\r\n        <ConnectedLoading />\r\n        <ConnectedError />\r\n        <Footer />\r\n      </ConnectedRouter>\r\n      {/* exclude devtools in production */}\r\n      {(process.env.NODE_ENV !== 'production') && <DevTools />}\r\n    </div>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"Search_SearchForm__24xnT\",\"active\":\"Search_active__3P13n\"};"],"sourceRoot":""}