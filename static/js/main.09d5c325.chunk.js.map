{"version":3,"sources":["redux/store/middleware.js","components/ForceGraph.js","containers/ConnectedForceGraph.js","components/Search.js","redux/actions/datasource.js","redux/actionTypes.js","redux/actions/utils.js","redux/actions/sparql.js","redux/actions/test.js","containers/ConnectedSearch.js","components/DataSourceDropdown.js","containers/ConnectedDataSourceDropdown.js","containers/DevTools.jsx","redux/reducers/nodes.js","redux/reducers/links.js","redux/reducers/datasource.js","redux/reducers/loading.js","redux/reducers/error.js","redux/reducers/test.js","redux/reducers/index.js","redux/store/index.js","components/Nav.js","components/Header.js","components/Footer.js","pages/Home.js","pages/Graph.js","pages/Contact.js","pages/NotFound.js","components/PageContent.js","components/Loading.js","containers/ConnectedLoading.js","components/Error.js","containers/ConnectedError.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","middleware","applyMiddleware","thunkMiddleware","routerMiddleware","ForceGraph","props","nodes","links","simulation","d3","force","strength","width","height","on","selection","selectAll","data","call","drag","enter","append","text","d","name","merge","attr","x","y","exit","remove","updateNodes","source","target","updateLinks","property","updateLabels","active","alphaTarget","restart","fx","fy","id","style","border","class","React","Component","ConnectedForceGraph","connect","state","dispatch","bindActionCreators","Search","this","datasource","currentDatasource","endpoint","onClick","fetchTest","fetchSPARQL","sparql","setCurrentDatasource","type","thunkCreator","action","types","promise","rest","REQUESTED","RESOLVED","REJECTED","then","result","error","errors","Error","catch","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","console","log","ConnectedSearch","Datasource","className","DataSourceDropdown","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","datasources","map","item","key","ConnectedDataSourceDropdown","DevTools","createDevTools","toggleVisibilityKey","changePositionKey","defaultIsVisible","theme","nodeReducer","linkReducer","datasourceReducer","newState","Object","assign","loadingReducer","endsWith","requestName","replace","counter","errorReducer","testReducer","appReducer","combineReducers","nodesReducer","linkesReducer","loading","test","router","connectRouter","enhancer","compose","instrument","persistState","matches","window","location","href","match","length","getSessionKey","initialState","Navigation","Navbar","expand","fixed","Brand","as","NavLink","activeClassName","to","alt","Toggle","aria-controls","Collapse","Nav","Link","exact","Header","Footer","Container","Row","Col","sm","Date","getYear","Home","Graph","Contact","onSubmit","push","placeholder","NotFound","PageContent","path","component","Notfound","Loading","isLoading","ConnectedLoading","keys","reduce","message","color","ConnectedError","store","createStore","getState","subscribe","App","process","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09d5c325.chunk.js","sourcesContent":["import thunkMiddleware from 'redux-thunk'\r\n\r\nimport { applyMiddleware } from 'redux'\r\nimport { routerMiddleware } from 'connected-react-router'\r\n\r\nimport { createBrowserHistory } from 'history'\r\nexport const history = createBrowserHistory()\r\n\r\nconst middleware = applyMiddleware(\r\n  thunkMiddleware,\r\n  routerMiddleware(history)\r\n)\r\n\r\nexport default middleware","import * as d3 from 'd3'\r\nimport React from 'react'\r\n\r\nvar width = 600, height = 600\r\n\r\nclass ForceGraph extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    var nodes = props.nodes\r\n    var links = props.links\r\n\r\n    //simulation\r\n    var simulation = d3.forceSimulation(nodes)\r\n      .force('charge', d3.forceManyBody().strength(-150))\r\n      .force('center', d3.forceCenter(width / 2, height / 2))\r\n      .force('link', d3.forceLink().links(links))\r\n      .on('tick', ticked);\r\n\r\n    //node properties\r\n    function updateNodes() {\r\n      var selection = d3.select('.nodes')\r\n        .selectAll('text')\r\n        .data(nodes)                        //bind data\r\n        .call(drag(simulation));            //allow dragging  \r\n\r\n      selection.enter()                     //for each row in the data do...\r\n        .append('text')                     //add element\r\n        .text(function (d) {                // add attributes\r\n          return d.name\r\n        })\r\n        .merge(selection)\r\n        .attr('x', function (d) { return d.x })\r\n        .attr('y', function (d) { return d.y })\r\n        .attr('dy', function (d) { return 5 })\r\n      //2nd way of doing the positioning\r\n      // .attr(\"transform\", function (d) {\r\n      //   return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n      // })\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    //link properties\r\n    function updateLinks() {\r\n      var selection = d3.select('.links')\r\n        .selectAll('line')\r\n        .data(links)\r\n\r\n      selection.enter()\r\n        .append('line')\r\n        .merge(selection)\r\n        .attr('x1', function (d) {\r\n          return d.source.x\r\n        })\r\n        .attr('y1', function (d) {\r\n          return d.source.y\r\n        })\r\n        .attr('x2', function (d) {\r\n          return d.target.x\r\n        })\r\n        .attr('y2', function (d) {\r\n          return d.target.y\r\n        })\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    function updateLabels() {\r\n      var selection = d3.select('.labels')\r\n        .selectAll('text')\r\n        .data(links)\r\n\r\n      selection.enter()\r\n        .append('text')\r\n        .text(function (d) {\r\n          return d.property\r\n        })\r\n        .merge(selection)\r\n        .attr('x', function (d) {\r\n          return d.source.x\r\n        })\r\n        .attr('y', function (d) {\r\n          return d.source.y\r\n        })\r\n        .attr('dx', function (d) {\r\n          return d.target.x - d.source.x\r\n        })\r\n        .attr('dy', function (d) {\r\n          return d.target.y - d.source.y\r\n        })\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n\r\n\r\n    //update drawing nodes and links\r\n    function ticked() {\r\n      updateNodes()\r\n      updateLinks()\r\n      updateLabels()\r\n    }\r\n\r\n    // dragging\r\n    const drag = (simulation) => {\r\n      const dragstarted = (d) => {\r\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      };\r\n\r\n      const dragged = (d) => {\r\n        d.fx = d3.event.x;\r\n        d.fy = d3.event.y;\r\n      };\r\n\r\n      const dragended = (d) => {\r\n        if (!d3.event.active) simulation.alphaTarget(0);\r\n        d.fx = null;\r\n        d.fy = null;\r\n      };\r\n\r\n      return d3\r\n        .drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended);\r\n    };\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return <div id=\"content\">\r\n      <svg width={width} height={height} style={{ border: \"1px solid black\" }}>\r\n        <g class=\"links\"></g>\r\n        <g class=\"nodes\"></g>\r\n        <g class=\"labels\"></g>\r\n        <g class=\"linktext\"></g>\r\n      </svg>\r\n    </div >;\r\n  }\r\n}\r\n\r\nexport default ForceGraph","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ForceGraph from '../components/ForceGraph'\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    nodes: state.nodes,\r\n    links: state.links\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({}, dispatch)\r\n\r\nconst ConnectedForceGraph = connect(mapStateToProps, mapDispatchToProps)(ForceGraph)\r\n\r\nexport default ConnectedForceGraph","import React from 'react'\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <p>{this.props.datasource.currentDatasource.endpoint}</p>\r\n        <button onClick={() => this.props.fetchTest()}>Fetch Test</button>\r\n        <button onClick={() => this.props.fetchSPARQL(this.props.datasource.currentDatasource.endpoint)}>Fetch SPARQL</button>\r\n        <button onClick={() => this.props.sparql(this.props.datasource.currentDatasource.endpoint, \"select * {?s ?p ?o.}\")}>Fetch query</button>\r\n\r\n      </div>\r\n\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default Search\r\n\r\n","import { SET_CURRENT_DATASOURCE } from '../actionTypes'\r\n\r\nexport const setCurrentDatasource = (datasource) => {\r\n  return {\r\n    type: SET_CURRENT_DATASOURCE,\r\n    datasource\r\n  }\r\n}\r\n","\r\n//datasource\r\nexport const SET_CURRENT_DATASOURCE = 'SET_CURRENT_DATASOURCE';\r\n\r\n//fetch test\r\nexport const FETCH_TEST_REQUEST = 'FETCH_TEST_REQUEST'\r\nexport const FETCH_TEST_SUCCESS = 'FETCH_TEST_SUCCESS'\r\nexport const FETCH_TEST_FAILURE = 'FETCH_TEST_FAILURE'\r\n\r\n//fetch sparql\r\nexport const FETCH_SPARQL_REQUEST = 'FETCH_SPARQL_REQUEST'\r\nexport const FETCH_SPARQL_SUCCESS = 'FETCH_SPARQL_SUCCESS'\r\nexport const FETCH_SPARQL_FAILURE = 'FETCH_SPARQL_FAILURE'\r\n\r\n\r\nexport const SPARQL_GET_URI_FROM_LABEL_PENDING = 'SPARQL_GET_URI_FROM_LABEL_PENDING';\r\nexport const SPARQL_GET_URI_FROM_LABEL_FULFILLED = 'SPARQL_GET_URI_FROM_LABEL_FULFILLED';\r\nexport const SPARQL_GET_URI_FROM_LABEL_REJECTED = 'SPARQL_GET_URI_FROM_LABEL_REJECTED';\r\nexport const SPARQL_GET_TRIPLES_FROM_URI = 'SPARQL_GET_TRIPLES_FROM_URI';\r\nexport const SPARQL_GET_TRIPLES_FROM_URI_PENDING = 'SPARQL_GET_TRIPLES_FROM_URI_PENDING';\r\nexport const SPARQL_GET_TRIPLES_FROM_URI_FULFILLED = 'SPARQL_GET_TRIPLES_FROM_URI_FULFILLED';\r\nexport const SPARQL_GET_TRIPLES_FROM_URI_REJECTED = 'SPARQL_GET_TRIPLES_FROM_URI_REJECTED';\r\n\r\nexport const SPARQL_PENDING_REQUESTS_LIST = [\r\n  SPARQL_GET_URI_FROM_LABEL_PENDING,\r\n  SPARQL_GET_TRIPLES_FROM_URI_PENDING,\r\n];\r\n\r\nexport const SPARQL_REJECTED_REQUESTS_LIST = [\r\n  SPARQL_GET_URI_FROM_LABEL_REJECTED,\r\n  SPARQL_GET_TRIPLES_FROM_URI_REJECTED,\r\n];","export const thunkCreator = (action) => {\r\n  const { types, promise, ...rest } = action\r\n  const [REQUESTED, RESOLVED, REJECTED] = types\r\n\r\n  return (dispatch) => {\r\n    dispatch({ ...rest, type: REQUESTED })\r\n\r\n    return promise\r\n      .then(result => {\r\n        if (result.error || result.errors) throw new Error(result.error)\r\n        dispatch({ ...rest, type: RESOLVED, result })\r\n        return result\r\n      })\r\n      .catch(error => {\r\n        dispatch({ ...rest, type: REJECTED, error })\r\n        //throw error\r\n      })\r\n  }\r\n}","import { FETCH_SPARQL_REQUEST, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_FAILURE } from '../actionTypes'\r\nimport { thunkCreator } from './utils'\r\n\r\nexport const fetchSPARQL = (endpoint) => thunkCreator({\r\n  types: [FETCH_SPARQL_REQUEST, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_FAILURE],\r\n  promise: fetch({\r\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n    mode: 'cors', // no-cors, *cors, same-origin\r\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: 'same-origin', // include, *same-origin, omit\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    redirect: 'follow', // manual, *follow, error\r\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n    body: JSON.stringify('data') // body data type must match \"Content-Type\" header\r\n  })\r\n    .then(response => response.json())\r\n})\r\n\r\n// import {\r\n//   SPARQL_GET_URI_FROM_LABEL_PENDING,\r\n//   SPARQL_GET_URI_FROM_LABEL_FULFILLED,\r\n//   SPARQL_GET_URI_FROM_LABEL_REJECTED,\r\n//   SPARQL_GET_TRIPLES_FROM_URI\r\n// } from '../actionTypes';\r\n\r\n// import axios from 'axios';\r\n// import store from '../store/index';\r\n// import qs from 'qs';\r\n\r\n// export const startSparqlGetUriFromLabel = () => ({\r\n//   type: SPARQL_GET_URI_FROM_LABEL_PENDING,\r\n// });\r\n\r\n// export const fulfillSparqlGetUriFromLabel = (payload) => ({\r\n//   type: SPARQL_GET_URI_FROM_LABEL_FULFILLED,\r\n//   payload,\r\n// });\r\n\r\n// export const errorSparqlGetUriFromLabel = (payload) => ({\r\n//   type: SPARQL_GET_URI_FROM_LABEL_REJECTED,\r\n//   payload,\r\n// });\r\n\r\n// export const getTriplesFromUri = (uri, endpoint) => {\r\n//   const query = 'SELECT * ' +\r\n//     'WHERE { <' + uri + '> ?property ?object }' +\r\n//     'limit 10';\r\n//   return {\r\n//     type: SPARQL_GET_TRIPLES_FROM_URI,\r\n//     payload: sparqlAxios(query, endpoint),\r\n//     meta: {\r\n//       subject: uri,\r\n//       endpoint,\r\n//     },\r\n//   };\r\n// };\r\n\r\n// export const getUrisFromLabel = (label) => (dispatch => {\r\n//   dispatch(startSparqlGetUriFromLabel());\r\n//   const query = 'SELECT ?subject ' +\r\n//     'WHERE { ' +\r\n//     '?subject <http://www.w3.org/2000/01/rdf-schema#label> \"' + label + '\"@nl' +\r\n//     '} limit 10';\r\n\r\n//   sparqlAxios(query, getCurrentEndpoint())\r\n//     .then(payload => {\r\n//       dispatch(fulfillSparqlGetUriFromLabel(payload));\r\n//       payload.data.results.bindings.forEach(triple => {\r\n//         dispatch(getTriplesFromUri(triple.subject.value,\r\n//           getCurrentEndpoint()));\r\n//       });\r\n//     })\r\n//     .catch(error => {\r\n//       dispatch(errorSparqlGetUriFromLabel(error));\r\n//     });\r\n// });\r\n\r\n// const getCurrentEndpoint = () => {\r\n//   const state = store.getState();\r\n//   const currentDatasource = state.connection.currentDatasource;\r\n//   const endpoint = state.connection.datasources[currentDatasource].endpoint;\r\n//   return endpoint;\r\n// }\r\n\r\n// const sparqlAxios = (query, endpoint) => (axios({\r\n//   method: 'post',\r\n//   url: endpoint,\r\n//   data: qs.stringify({\r\n//     action: 'exec',\r\n//     queryLn: 'SPARQL',\r\n//     ref: 'text',\r\n//     query,\r\n//   }),\r\n//   headers: {\r\n//     Accept: 'application/json',\r\n//     'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n//   },\r\n// }));","import { FETCH_TEST_REQUEST, FETCH_TEST_SUCCESS, FETCH_TEST_FAILURE } from '../actionTypes'\r\nimport { thunkCreator } from './utils'\r\n\r\nexport const fetchTest = () => thunkCreator({\r\n  types: [FETCH_TEST_REQUEST, FETCH_TEST_SUCCESS, FETCH_TEST_FAILURE],\r\n  promise: fetch(`https://www.anapioficeandfire.com/api/books`)\r\n    .then(response => response.json())\r\n    .catch(error => { console.log(error) })\r\n\r\n})\r\n\r\nexport const sparql = (endpoint) => thunkCreator({\r\n  types: [FETCH_TEST_REQUEST, FETCH_TEST_SUCCESS, FETCH_TEST_FAILURE],\r\n  promise: fetch('http://localhost:8080/rdf4j-workbench/repositories/1/query?query=SELECT+%3Fs+%3Fp+%3Fo+%0AWHERE+%0A%7B%0A++%3Fs+%3Fp+%3Fo+.+%0A++FILTER+(regex(%3Fo%2C+%22Verpleegkundige%22))%0A%7D')\r\n    //.then(response => response.text())\r\n    .catch(error => { console.log(error) })\r\n})\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Search from '../components/Search'\r\nimport { fetchTest, fetchSPARQL, sparql } from '../redux/actions/index'\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    nodes: state.nodes,\r\n    links: state.links,\r\n    datasource: state.datasource\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({ fetchTest, fetchSPARQL, sparql, }, dispatch)\r\n\r\nconst ConnectedSearch = connect(mapStateToProps, mapDispatchToProps)(Search)\r\n\r\nexport default ConnectedSearch","import React from 'react';\r\n\r\nconst Datasource = (props) => (\r\n  <button className=\"dropdown-item\" onClick={props.onClick}>\r\n    {props.name}\r\n  </button>\r\n);\r\n\r\nclass DataSourceDropdown extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"setDataSourceDropdown\">\r\n        <div className=\"dropdown show\">\r\n          <button className=\"btn btn-secondary dropdown-toggle\"\r\n            id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n            aria-expanded=\"false\">Specificeer bron: {this.props.datasource.currentDatasource.name}</button>\r\n          <div className=\"\" aria-labelledby=\"dropdownMenuLink\">\r\n            {\r\n              this.props.datasource.datasources.map((item, key) =>\r\n                <Datasource\r\n                  key={key}\r\n                  onClick={() => this.props.setCurrentDatasource(item)}\r\n                  name={item.name}\r\n                />\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DataSourceDropdown\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport DataSourceDropdown from '../components/DataSourceDropdown'\r\nimport { setCurrentDatasource } from '../redux/actions/index';\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    datasource: state.datasource\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({ setCurrentDatasource }, dispatch)\r\n\r\nconst ConnectedDataSourceDropdown = connect(mapStateToProps, mapDispatchToProps)(DataSourceDropdown)\r\n\r\nexport default ConnectedDataSourceDropdown","import React from 'react'\r\n\r\nimport { createDevTools } from 'redux-devtools'\r\n\r\nimport LogMonitor from 'redux-devtools-log-monitor'\r\nimport DockMonitor from 'redux-devtools-dock-monitor'\r\n\r\nconst DevTools = createDevTools(\r\n  <DockMonitor\r\n    toggleVisibilityKey='ctrl-h'\r\n    changePositionKey='ctrl-q'\r\n    defaultIsVisible={true}\r\n  >\r\n    <LogMonitor theme='tomorrow' />\r\n  </DockMonitor>\r\n)\r\n\r\nexport default DevTools","//import { CREATE_POST, EDIT_POST } from '../actionTypes'\r\n\r\nexport default function nodeReducer(state = [\r\n  { name: 'A' },\r\n  { name: 'B' },\r\n  { name: 'C' },\r\n  { name: 'D' },\r\n  { name: 'E' },\r\n  { name: 'F' },\r\n  { name: 'G' },\r\n  { name: 'H' },], action) {\r\n  switch (action.type) {\r\n    // case CREATE_POST: {\r\n    //   const { type, ...post } = action\r\n    //   return [...state, post]\r\n    // }\r\n\r\n    // case EDIT_POST: {\r\n    //   const { type, id, ...newPost } = action\r\n    //   return state.map((oldPost, index) =>\r\n    //     action.id === index\r\n    //       ? { ...oldPost, ...newPost }\r\n    //       : oldPost\r\n    //   )\r\n    // }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","//import { CREATE_POST, EDIT_POST } from '../actionTypes'\r\n\r\nexport default function linkReducer(state = [\r\n  { source: 0, target: 1, property: 'dirk' },\r\n  { source: 0, target: 2, property: 'ryan' },\r\n  //{ source: 0, target: 3 },\r\n  { source: 1, target: 6, property: 'wisse' },\r\n  { source: 3, target: 4, property: 'bart' },\r\n  { source: 3, target: 7, property: 'henk' },\r\n  { source: 4, target: 5, property: 'john' },\r\n  { source: 4, target: 7, property: 'test' }\r\n], action) {\r\n  switch (action.type) {\r\n    //   case CREATE_POST: {\r\n    //     const { type, ...post } = action\r\n    //     return [...state, post]\r\n    //   }\r\n\r\n    //   case EDIT_POST: {\r\n    //     const { type, id, ...newPost } = action\r\n    //     return state.map((oldPost, index) =>\r\n    //       action.id === index\r\n    //         ? { ...oldPost, ...newPost }\r\n    //         : oldPost\r\n    //     )\r\n    //   }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_CURRENT_DATASOURCE } from '../actionTypes';\r\n\r\n\r\nexport default function datasourceReducer(state = {\r\n  currentDatasource: 0,\r\n  datasources: [\r\n    {\r\n      name: 'Onderwijsregistratie',\r\n      endpoint: 'http://localhost:8080/rdf4j-workbench/repositories/rio/query',\r\n    },\r\n    {\r\n      name: 'Basisregistraties',\r\n      endpoint: 'https://data.pdok.nl/sparql',\r\n    },\r\n    {\r\n      name: 'Onderwijsinspectie',\r\n      endpoint: 'http://localhost:8080/rdf4j-workbench/repositories/ivho/query',\r\n    },\r\n    {\r\n      name: 'Kennisnet',\r\n      endpoint: 'http://localhost:8080/rdf4j-workbench/repositories/kennisnet/query',\r\n    },\r\n  ],\r\n}, action) {\r\n  let newState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case SET_CURRENT_DATASOURCE: {\r\n      newState.currentDatasource = action.datasource;\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n","export default function loadingReducer(state = {}, action) {\r\n  if (action.type.endsWith('_REQUEST')) {\r\n    const requestName = action.type.replace('_REQUEST', '')\r\n    const counter = state[requestName] || 0\r\n    return { ...state, [requestName]: counter + 1 }\r\n  }\r\n\r\n  if (action.type.endsWith('_SUCCESS') || action.type.endsWith('_FAILURE')) {\r\n    const requestName = action.type.replace('_SUCCESS', '').replace('_FAILURE', '')\r\n    const counter = state[requestName] || 0\r\n    return { ...state, [requestName]: counter - 1 }\r\n  }\r\n\r\n  return state\r\n}","export default function errorReducer(state = {}, action) {\r\n  if (action.type.endsWith('_FAILURE')) {\r\n    return action.error\r\n  }\r\n  // clear error whensubmitting another request\r\n  if (action.type.endsWith('_REQUEST')) {\r\n    return {}\r\n  }\r\n\r\n  return state\r\n}","import { FETCH_TEST_SUCCESS, FETCH_SPARQL_SUCCESS } from '../actionTypes'\r\n\r\nexport default function testReducer(state = [\r\n], action) {\r\n  switch (action.type) {\r\n    case FETCH_TEST_SUCCESS: {\r\n      return action.result\r\n    }\r\n    case FETCH_SPARQL_SUCCESS: {\r\n      return action.result\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","// Root Reducer, combines all reducers into one single reducer\r\n\r\nimport { combineReducers } from 'redux'\r\n\r\nimport nodesReducer from './nodes'\r\nimport linkesReducer from './links'\r\nimport datasourceReducer from './datasource'\r\nimport loadingReducer from './loading'\r\nimport errorReducer from './error'\r\nimport testReducer from './test'\r\n\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nconst appReducer = (history) => combineReducers({\r\n  nodes: nodesReducer,\r\n  links: linkesReducer,\r\n  datasource: datasourceReducer,\r\n  loading: loadingReducer,\r\n  error: errorReducer,\r\n  test: testReducer,\r\n  router: connectRouter(history)\r\n})\r\n\r\nexport default appReducer","// redux\r\nimport { createStore, compose } from 'redux'\r\n\r\n//root reducer\r\nimport appReducer from '../reducers/index'\r\n\r\n//middleware\r\nimport middleware from './middleware'\r\nimport { history } from './middleware'\r\n\r\n//devtools\r\nimport { persistState } from 'redux-devtools'\r\nimport DevTools from '../../containers/DevTools'\r\n\r\n\r\nconst enhancer = compose(\r\n  middleware,\r\n  DevTools.instrument(),\r\n  persistState(getSessionKey())\r\n)\r\n\r\nfunction getSessionKey() {\r\n  const matches = window.location.href.match(/[?&]debug=([^&#])\\b/)\r\n  return (matches && matches.length > 0)\r\n    ? matches[1]\r\n    : null\r\n}\r\n\r\nexport default function configureStore(initialState) {\r\n  return createStore(appReducer(history), initialState, enhancer)\r\n}","import React from 'react'\r\nimport {\r\n  NavLink,\r\n} from 'react-router-dom'\r\n\r\nimport { Container, Navbar, NavbarBrand, NavDropdown, Form, FormControl, Button, Nav } from 'react-bootstrap'\r\n\r\n//import Logo from '../assets/img/logo.svg'\r\n\r\nclass Navigation extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Navigation\">\r\n        <Navbar expand=\"lg\" fixed=\"top\">\r\n          <Navbar.Brand as={NavLink} activeClassName=\"notactive\" to=\"/\">\r\n            <img\r\n              // src={Logo}\r\n              width=\"100\"\r\n              height=\"100\"\r\n              alt=\"Logo\"\r\n            /><b>React SPARQL Browser</b>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav.Link as={NavLink} exact activeClassName=\"active\" to=\"/\">Home</Nav.Link>\r\n            <Nav.Link as={NavLink} activeClassName=\"active\" to=\"/contact\">Contact</Nav.Link>\r\n            <Nav.Link as={NavLink} activeClassName=\"active\" to=\"/graph\">Graph</Nav.Link>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\n\r\nimport Navigation from './Nav'\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Header\">\r\n        <header>\r\n          <Navigation />\r\n        </header>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"Footer\">\r\n        <Container>\r\n          <Row>\r\n            <Col sm={4}></Col>\r\n            <Col sm={4}><p>© React-SPARQL-Browser {new Date().getYear() + 1900}</p></Col>\r\n            <Col sm={4}></Col>\r\n\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nclass Home extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <h2>home</h2>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Home","import React from 'react'\r\n\r\nimport ConnectedForceGraph from '../containers/ConnectedForceGraph';\r\nimport ConnectedSearch from '../containers/ConnectedSearch'\r\nimport ConnectedDataSourceDropdown from '../containers/ConnectedDataSourceDropdown'\r\n\r\nclass Graph extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Graph\">\r\n        <h2>Graph</h2>\r\n        <ConnectedSearch />\r\n        <ConnectedDataSourceDropdown />\r\n        <ConnectedForceGraph />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Graph","import React from 'react'\r\n\r\nclass Contact extends React.Component {\r\n  onSubmit = () => {\r\n    this.props.history.push('/cocktails')\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Contact\">\r\n        <p>this is the contact form</p>\r\n        <form>\r\n          <input placeholder=\"name\" type=\"name\" />\r\n          <input placeholder=\"email\" type=\"email\" />\r\n          <button onClick={this.onSubmit}>Submit</button>\r\n        </form>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Contact","import React from 'react'\r\n\r\nclass NotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"NotFound\">\r\n        <h1>Not Found...</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default NotFound","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {\r\n  Route,\r\n  NavLink,\r\n  Switch,\r\n} from 'react-router-dom'\r\n\r\n\r\n\r\n//pages\r\nimport Home from '../pages/Home'\r\nimport Graph from '../pages/Graph'\r\nimport Contact from '../pages/Contact'\r\nimport Notfound from '../pages/NotFound'\r\n\r\nclass PageContent extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"PageContent\">\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/home\" component={Home} />\r\n            <Route path=\"/sparql-react-browser/\" component={Home} />\r\n            <Route path=\"/graph\" component={Graph} />\r\n            <Route path=\"/contact\" component={Contact} />\r\n\r\n            <Route component={Notfound} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PageContent","import React from 'react'\r\n\r\nconst Loading = ({ isLoading }) =>\r\n  isLoading && <span>Loading...</span>\r\n\r\nexport default Loading","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Loading from '../components/Loading'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const { loading } = state\r\n\r\n  const isLoading = Object.keys(loading).reduce((result, requestName) => {\r\n    if (result === true) return true\r\n    if (loading[requestName] > 0) return true\r\n    return false\r\n  }, false)\r\n\r\n  return { isLoading }\r\n}\r\n\r\nconst ConnectedLoading = connect(mapStateToProps)(Loading)\r\n\r\nexport default ConnectedLoading","import React from 'react'\r\n\r\nconst Error = ({ message }) =>\r\n  message\r\n    ? <span style={{ color: 'red' }}>Error: {message}</span>\r\n    : null\r\n\r\nexport default Error","import { connect } from 'react-redux'\r\n\r\nimport Error from '../components/Error'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    message: state.error && state.error.message\r\n  }\r\n}\r\n\r\nconst ConnectedError = connect(mapStateToProps)(Error)\r\n\r\nexport default ConnectedError","import React from 'react';\r\n\r\n//Router\r\nimport { ConnectedRouter } from 'connected-react-router'\r\nimport { history } from './redux/store/middleware'\r\n\r\n//bootstrap stylesheet\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n//custom stylesheet\r\nimport './App.scss';\r\n\r\nimport ConnectedForceGraph from './containers/ConnectedForceGraph';\r\nimport ConnectedSearch from './containers/ConnectedSearch'\r\nimport ConnectedDataSourceDropdown from './containers/ConnectedDataSourceDropdown'\r\n\r\n//devtools\r\nimport DevTools from './containers/DevTools.jsx'\r\n\r\nimport { Provider } from 'react-redux'\r\n\r\nimport configureStore from './redux/store/index'\r\n\r\n// Layout components\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport PageContent from './components/PageContent';\r\nimport ConnectedLoading from './containers/ConnectedLoading'\r\nimport ConnectedError from './containers/ConnectedError'\r\n\r\n//init redux store\r\nconst store = configureStore()\r\nconst initialState = store.getState()\r\n\r\nconsole.log('initializing store: ', store.getState())\r\n\r\nconst unsubscribe = store.subscribe(() => {\r\n  //console.log('state changed: ', store.getState())\r\n})\r\n\r\n\r\n\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <div className=\"App\">\r\n      <ConnectedRouter history={history}>\r\n        <Header />\r\n        <PageContent />\r\n        <ConnectedLoading />\r\n        <ConnectedError />\r\n        <Footer />\r\n      </ConnectedRouter>\r\n      {/* exclude devtools in production */}\r\n      {(process.env.NODE_ENV !== 'production') && <DevTools />}\r\n    </div>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n\r\n\r\n{/* <ConnectedSearch />\r\n        <ConnectedDataSourceDropdown />\r\n        <ConnectedForceGraph /> */}\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}