{"version":3,"sources":["redux/store/middleware.js","components/ForceGraph.js","containers/ConnectedForceGraph.js","components/Search.js","redux/actions/datasource.js","redux/actionTypes.js","redux/actions/utils.js","redux/actions/sparql.js","redux/actions/test.js","containers/ConnectedSearch.js","components/DataSourceDropdown.js","containers/ConnectedDataSourceDropdown.js","containers/DevTools.jsx","redux/reducers/nodes.js","redux/reducers/links.js","redux/reducers/axios.js","redux/reducers/datasource.js","redux/reducers/loading.js","redux/reducers/error.js","redux/reducers/test.js","redux/reducers/index.js","redux/store/index.js","components/Nav.js","components/Header.js","components/Footer.js","pages/Home.js","pages/Graph.js","pages/Contact.js","pages/NotFound.js","components/PageContent.js","components/Loading.js","containers/ConnectedLoading.js","components/Error.js","containers/ConnectedError.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","middleware","applyMiddleware","thunkMiddleware","routerMiddleware","ForceGraph","props","console","log","element","document","getElementById","window","addEventListener","removeSVG","createSVG","offsetWidth","offsetHeight","createSimulation","nodes","links","this","removeSimulation","width","height","zoom","d3","scaleExtent","on","currentTransform","transform","svg","attr","append","style","call","selectAll","remove","simulation","force","strength","distance","id","d","selection","data","drag","enter","text","merge","x","y","exit","updateNodesText","alert","updateNodesCircle","property","i","replace","target","source","updateLinks","updateLinksText","linkpropertys","forEach","push","getAllLinkPropertys","String","updateLinkMarkers","React","Component","ConnectedForceGraph","connect","state","router","dispatch","bindActionCreators","Search","query","datasource","currentDatasource","endpoint","onClick","fetchTest","fetchAxiosGet","fetchAxiosPost","fetchSPARQL","sparql","setCurrentDatasource","type","thunkCreator","action","types","promise","rest","REQUESTED","RESOLVED","REJECTED","then","result","error","errors","Error","catch","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","axios","require","get","url","qs","queryLn","ref","Accept","ConnectedSearch","Datasource","className","name","DataSourceDropdown","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","datasources","map","item","key","ConnectedDataSourceDropdown","DevTools","createDevTools","toggleVisibilityKey","changePositionKey","defaultIsVisible","theme","nodeReducer","NewState","Object","assign","templist","link","includes","results","bindings","sub","value","obj","linkReducer","sort","a","b","length","linknum","parseString","xml","err","dir","targetIsURI","binding","$","uri","_","literal","pred","testReducer","datasourceReducer","newState","loadingReducer","endsWith","requestName","counter","errorReducer","appReducer","combineReducers","nodesReducer","linkesReducer","axiosReducer","loading","test","connectRouter","enhancer","compose","instrument","persistState","matches","location","href","match","getSessionKey","initialState","Navigation","Navbar","expand","fixed","Brand","as","NavLink","activeClassName","to","alt","Toggle","aria-controls","Collapse","Nav","Link","exact","Header","Footer","Container","Row","Col","sm","Date","getYear","Home","Graph","Contact","onSubmit","placeholder","NotFound","PageContent","path","component","Notfound","Loading","isLoading","ConnectedLoading","keys","reduce","message","color","ConnectedError","store","createStore","getState","subscribe","App","process","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2cba6e32.chunk.js","sourcesContent":["import thunkMiddleware from 'redux-thunk'\r\n\r\nimport { applyMiddleware } from 'redux'\r\nimport { routerMiddleware } from 'connected-react-router'\r\n\r\nimport { createBrowserHistory } from 'history'\r\nexport const history = createBrowserHistory()\r\n\r\nconst middleware = applyMiddleware(\r\n  thunkMiddleware,\r\n  routerMiddleware(history)\r\n)\r\n\r\nexport default middleware","import * as d3 from 'd3'\r\nimport React from 'react'\r\n\r\nclass ForceGraph extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    console.log('ForceGraph rerendered')\r\n  }\r\n\r\n  componentDidMount() {\r\n    var element = document.getElementById('forcegraph');\r\n\r\n    // Redraw based on the new size whenever the browser window is resized.\r\n    window.addEventListener(\"resize\", () => {\r\n      this.removeSVG()\r\n      this.createSVG(element.offsetWidth, element.offsetHeight)\r\n      this.createSimulation(this.props.nodes, this.props.links, element.offsetWidth, element.offsetHeight)\r\n    });\r\n\r\n    this.createSVG(element.offsetWidth, element.offsetHeight)\r\n    this.createSimulation(this.props.nodes, this.props.links, element.offsetWidth, element.offsetHeight)\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.removeSimulation()\r\n    var element = document.getElementById('forcegraph');\r\n    this.createSimulation(this.props.nodes, this.props.links, element.offsetWidth, element.offsetHeight)\r\n  }\r\n\r\n  createSVG(width, height) {\r\n    console.log('createsvg fired')\r\n\r\n    var zoom = d3.zoom()\r\n      .scaleExtent([1, 10])\r\n      .on(\"zoom\", zoomed);\r\n\r\n    var svg = d3.select(\"#forcegraph\")\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"forcegraph\")\r\n      .style(\"width\", width * 0.8)\r\n      .style(\"height\", height * 0.8)\r\n      .style(\"border\", \"1px solid black\")\r\n      .call(zoom).append(\"g\")\r\n    svg.append(\"g\").attr(\"class\", \"links\")\r\n    svg.append(\"g\").attr(\"class\", \"nodescircle\")\r\n    svg.append(\"g\").attr(\"class\", \"nodestext\")\r\n    svg.append(\"g\").attr(\"class\", \"linkstext\")\r\n    svg.append(\"defs\").attr(\"class\", \"defs\")\r\n\r\n    function zoomed() {\r\n      const currentTransform = d3.event.transform;\r\n      svg.attr(\"transform\", currentTransform);\r\n      //slider.property(\"value\", currentTransform.k);\r\n    }\r\n\r\n    // function slided(d) {\r\n    //   zoom.scaleTo(svg, d3.select(this).property(\"value\"));\r\n    // }\r\n\r\n    // var slider = d3.select(\"#forcegraph\").append(\"p\").append(\"input\")\r\n    //   .datum({})\r\n    //   .attr(\"type\", \"range\")\r\n    //   .attr(\"value\", zoom.scaleExtent()[0])\r\n    //   .attr(\"min\", zoom.scaleExtent()[0])\r\n    //   .attr(\"max\", zoom.scaleExtent()[1])\r\n    //   .attr(\"step\", (zoom.scaleExtent()[1] - zoom.scaleExtent()[0]) / 100)\r\n    //   .on(\"input\", slided);\r\n  }\r\n\r\n  removeSVG() {\r\n    d3.select('#forcegraph').selectAll('svg').remove()\r\n  }\r\n\r\n  removeSimulation() {\r\n    d3.select('.nodestext').selectAll('text').remove();\r\n    d3.select('.nodescircle').selectAll('circle').remove();\r\n    d3.select('.links').selectAll('path').remove();\r\n    d3.select('.linkstext').selectAll('text').remove();\r\n\r\n  }\r\n\r\n  createSimulation(nodes, links, width, height) {\r\n    //simulation\r\n    var simulation = d3.forceSimulation(nodes)\r\n      .force('charge', d3.forceManyBody().strength(-30)) //defaul -30\r\n      // TODO: linkdistance\r\n      .force('center', d3.forceCenter((width * 0.8) / 2, (height * 0.8) / 2))\r\n      .force('link', d3.forceLink().links(links).distance(200).id(function (d) { return d.id; }))\r\n      .on('tick', ticked);\r\n\r\n    //node properties\r\n    function updateNodesText() {\r\n      var selection = d3.select('.nodestext')\r\n        .selectAll('text')\r\n        .data(nodes)                        //bind data\r\n        .call(drag(simulation));            //allow dragging  \r\n\r\n      selection.enter()                     //for each row in the data do...\r\n        .append('text')                     //add element\r\n        .text(function (d) {                // add attributes\r\n          return d.id\r\n        })\r\n        .merge(selection)\r\n        .attr(\"transform\", function (d) {\r\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n        });\r\n      // 2nd way of doing it\r\n      // .attr('x', function (d) { return d.x })\r\n      // .attr('y', function (d) { return d.y })\r\n      // .attr('dy', function (d) { return 5 })\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    function updateNodesCircle() {\r\n      var selection = d3.select('.nodescircle')\r\n        .selectAll('circle')\r\n        .data(nodes)             //bind data\r\n        .call(drag(simulation));            //allow dragging  \r\n\r\n      selection.enter()                     //for each row in the data do...\r\n        .append('circle')\r\n        .on('click', function (d) {\r\n          alert(d.id)\r\n          d3.select(this).style(\"fill\", \"magenta\")\r\n        })\r\n        .attr(\"r\", 20)\r\n        .style(\"fill\", \"#FD8D3C\")\r\n        .merge(selection)\r\n        .attr(\"transform\", function (d) {\r\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n        })\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    //link properties\r\n    function updateLinks() {\r\n      var selection = d3.select('.links')\r\n        .selectAll('path')\r\n        .data(links)\r\n\r\n      selection.enter()\r\n        .append('path')\r\n        .attr(\"class\", function (d) { return \"link\" })\r\n        .attr(\"class\", function (d) { return \"link \" + d.property; })\r\n        .attr(\"id\", function (d, i) { return \"linkId_\" + i; })\r\n        .attr(\"marker-end\", function (d) { return \"url(#\" + d.property.replace(/\\s/g, '') + \")\"; }) //removed to allow matching\r\n        .merge(selection)\r\n        .attr(\"d\", function (d) {\r\n          var dx = d.target.x - d.source.x,\r\n            dy = d.target.y - d.source.y,\r\n            dr = 300 / 1;  //linknum is defined abov TODO: update to use linknum from the links \r\n          return \"M\" + d.source.x + \",\" + d.source.y + \"A\" + dr + \",\" + dr + \" 0 0,1 \" + d.target.x + \",\" + d.target.y;\r\n        })\r\n\r\n\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    function updateLinksText() {\r\n      var selection = d3.select('.linkstext')\r\n        .selectAll('text')\r\n        .data(links)\r\n\r\n      selection.enter()\r\n        .append(\"text\")\r\n        .attr(\"x\", \"100\")\r\n        .attr(\"y\", \"-20\")\r\n        .attr(\"class\", \"linklabel\")\r\n        .append(\"textPath\")\r\n        .attr(\"xlink:href\", function (d, i) { return \"#linkId_\" + i; })\r\n        .text(function (d) {\r\n          return d.property;\r\n        })\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    function updateLinkMarkers() {\r\n      var selection = d3.select('.defs')\r\n        .selectAll('marker')\r\n        .data(getAllLinkPropertys())\r\n\r\n      selection.enter()\r\n        .append(\"marker\")\r\n        .attr(\"id\", String)\r\n        .attr(\"viewBox\", \"0 -5 10 10\")\r\n        .attr(\"refX\", 30) // distance from link\r\n        .attr(\"refY\", 0) //deviation from link linke\r\n        .attr(\"markerWidth\", 6)\r\n        .attr(\"markerHeight\", 6)\r\n        .attr(\"orient\", \"auto\")\r\n        .append(\"svg:path\")\r\n        .attr(\"d\", \"M0,-5L10,0L0,5\");\r\n\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    function getAllLinkPropertys() {\r\n\r\n      var linkpropertys = []\r\n      links.forEach(element => {\r\n        linkpropertys.push(element.property.replace(/\\s/g, ''))\r\n      });\r\n      return linkpropertys\r\n    }\r\n\r\n    //update drawing nodes and links\r\n    function ticked() {\r\n      console.log('ticked')\r\n      updateNodesText()\r\n      updateNodesCircle()\r\n      updateLinks()\r\n      updateLinksText()\r\n      updateLinkMarkers()\r\n    }\r\n\r\n    function linkDeviation(d) {\r\n      var dx = d.target.x - d.source.x,\r\n        dy = d.target.y - d.source.y,\r\n        dr = 150 / 2;  //linknum is defined above\r\n      return \"M\" + d.source.x + \",\" + d.source.y + \"A\" + dr + \",\" + dr + \" 0 0,1 \" + d.target.x + \",\" + d.target.y;\r\n\r\n    }\r\n\r\n    // dragging\r\n    const drag = (simulation) => {\r\n      const dragstarted = (d) => {\r\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      };\r\n\r\n      const dragged = (d) => {\r\n        d.fx = d3.event.x;\r\n        d.fy = d3.event.y;\r\n      };\r\n\r\n      const dragended = (d) => {\r\n        if (!d3.event.active) simulation.alphaTarget(0);\r\n        d.fx = null;\r\n        d.fy = null;\r\n      };\r\n\r\n      return d3\r\n        .drag()\r\n        .on(\"start\", () => console.log('dragstarted'))\r\n        .on(\"drag\", () => console.log('dragging'))\r\n        .on(\"end\", () => console.log('dragended'))\r\n      //.on(\"touchstart\", dragstarted)\r\n      //.on(\"touchmove\", dragged)\r\n    };\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    return <div id=\"forcegraph\">\r\n    </div >;\r\n  }\r\n}\r\n\r\nexport default ForceGraph","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ForceGraph from '../components/ForceGraph'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    nodes: state.nodes,\r\n    links: state.links,\r\n    history: state.router\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({}, dispatch)\r\n\r\nconst ConnectedForceGraph = connect(mapStateToProps, mapDispatchToProps)(ForceGraph)\r\n\r\nexport default ConnectedForceGraph","import React from 'react'\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.query = \"SELECT * WHERE\" + \"{\" + \"?sub ?pred ?obj .\" + \"}\" + \"LIMIT 10\";\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <p>{this.props.datasource.currentDatasource.endpoint}</p>\r\n        <button onClick={() => this.props.fetchTest()}>Fetch Test</button>\r\n        <button onClick={() => this.props.fetchAxiosGet()}>Fetch axios Get</button>\r\n        <button onClick={() => this.props.fetchAxiosPost(this.query, this.props.datasource.currentDatasource)}>Fetch axios Post</button>\r\n        <button onClick={() => this.props.fetchSPARQL()}>Fetch SPARQL</button>\r\n        <button onClick={() => this.props.sparql()}>Fetch query</button>\r\n        <button onClick={() => this.props.push('/graph')}>Ga naar graph</button>\r\n      </div>\r\n\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default Search\r\n\r\n","import { SET_CURRENT_DATASOURCE } from '../actionTypes'\r\n\r\nexport const setCurrentDatasource = (datasource) => {\r\n  return {\r\n    type: SET_CURRENT_DATASOURCE,\r\n    datasource\r\n  }\r\n}\r\n","\r\n//datasource\r\nexport const SET_CURRENT_DATASOURCE = 'SET_CURRENT_DATASOURCE';\r\n\r\n//fetch test\r\nexport const FETCH_TEST_REQUEST = 'FETCH_TEST_REQUEST'\r\nexport const FETCH_TEST_SUCCESS = 'FETCH_TEST_SUCCESS'\r\nexport const FETCH_TEST_FAILURE = 'FETCH_TEST_FAILURE'\r\n\r\n//fetch sparql\r\nexport const FETCH_SPARQL_REQUEST = 'FETCH_SPARQL_REQUEST'\r\nexport const FETCH_SPARQL_SUCCESS = 'FETCH_SPARQL_SUCCESS'\r\nexport const FETCH_SPARQL_FAILURE = 'FETCH_SPARQL_FAILURE'\r\n\r\n//fetch sparql\r\nexport const FETCH_SPARQL_JSON_REQUEST = 'FETCH_SPARQL_JSON_REQUEST'\r\nexport const FETCH_SPARQL_JSON_SUCCESS = 'FETCH_SPARQL_JSON_SUCCESS'\r\nexport const FETCH_SPARQL_JSON_FAILURE = 'FETCH_SPARQL_JSON_FAILURE'\r\n\r\nexport const SPARQL_GET_URI_FROM_LABEL_PENDING = 'SPARQL_GET_URI_FROM_LABEL_PENDING';\r\nexport const SPARQL_GET_URI_FROM_LABEL_FULFILLED = 'SPARQL_GET_URI_FROM_LABEL_FULFILLED';\r\nexport const SPARQL_GET_URI_FROM_LABEL_REJECTED = 'SPARQL_GET_URI_FROM_LABEL_REJECTED';\r\nexport const SPARQL_GET_TRIPLES_FROM_URI = 'SPARQL_GET_TRIPLES_FROM_URI';\r\nexport const SPARQL_GET_TRIPLES_FROM_URI_PENDING = 'SPARQL_GET_TRIPLES_FROM_URI_PENDING';\r\nexport const SPARQL_GET_TRIPLES_FROM_URI_FULFILLED = 'SPARQL_GET_TRIPLES_FROM_URI_FULFILLED';\r\nexport const SPARQL_GET_TRIPLES_FROM_URI_REJECTED = 'SPARQL_GET_TRIPLES_FROM_URI_REJECTED';\r\n\r\nexport const SPARQL_PENDING_REQUESTS_LIST = [\r\n  SPARQL_GET_URI_FROM_LABEL_PENDING,\r\n  SPARQL_GET_TRIPLES_FROM_URI_PENDING,\r\n];\r\n\r\nexport const SPARQL_REJECTED_REQUESTS_LIST = [\r\n  SPARQL_GET_URI_FROM_LABEL_REJECTED,\r\n  SPARQL_GET_TRIPLES_FROM_URI_REJECTED,\r\n];","export const thunkCreator = (action) => {\r\n  const { types, promise, ...rest } = action\r\n  const [REQUESTED, RESOLVED, REJECTED] = types\r\n\r\n  return (dispatch) => {\r\n    dispatch({ ...rest, type: REQUESTED })\r\n\r\n    return promise\r\n      .then(result => {\r\n        if (result.error || result.errors) throw new Error(result.error)\r\n        dispatch({ ...rest, type: RESOLVED, result })\r\n        return result\r\n      })\r\n      .catch(error => {\r\n        dispatch({ ...rest, type: REJECTED, error })\r\n        //throw error\r\n      })\r\n  }\r\n}","import { FETCH_SPARQL_REQUEST, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_FAILURE } from '../actionTypes'\r\nimport { thunkCreator } from './utils'\r\n\r\nexport const fetchSPARQL = (endpoint) => thunkCreator({\r\n  types: [FETCH_SPARQL_REQUEST, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_FAILURE],\r\n  promise: fetch({\r\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n    mode: 'cors', // no-cors, *cors, same-origin\r\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: 'same-origin', // include, *same-origin, omit\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    redirect: 'follow', // manual, *follow, error\r\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n    body: JSON.stringify('data') // body data type must match \"Content-Type\" header\r\n  })\r\n    .then(response => response.json())\r\n})\r\n\r\n// import {\r\n//   SPARQL_GET_URI_FROM_LABEL_PENDING,\r\n//   SPARQL_GET_URI_FROM_LABEL_FULFILLED,\r\n//   SPARQL_GET_URI_FROM_LABEL_REJECTED,\r\n//   SPARQL_GET_TRIPLES_FROM_URI\r\n// } from '../actionTypes';\r\n\r\n// import axios from 'axios';\r\n// import store from '../store/index';\r\n// import qs from 'qs';\r\n\r\n// export const startSparqlGetUriFromLabel = () => ({\r\n//   type: SPARQL_GET_URI_FROM_LABEL_PENDING,\r\n// });\r\n\r\n// export const fulfillSparqlGetUriFromLabel = (payload) => ({\r\n//   type: SPARQL_GET_URI_FROM_LABEL_FULFILLED,\r\n//   payload,\r\n// });\r\n\r\n// export const errorSparqlGetUriFromLabel = (payload) => ({\r\n//   type: SPARQL_GET_URI_FROM_LABEL_REJECTED,\r\n//   payload,\r\n// });\r\n\r\n// export const getTriplesFromUri = (uri, endpoint) => {\r\n//   const query = 'SELECT * ' +\r\n//     'WHERE { <' + uri + '> ?property ?object }' +\r\n//     'limit 10';\r\n//   return {\r\n//     type: SPARQL_GET_TRIPLES_FROM_URI,\r\n//     payload: sparqlAxios(query, endpoint),\r\n//     meta: {\r\n//       subject: uri,\r\n//       endpoint,\r\n//     },\r\n//   };\r\n// };\r\n\r\n// export const getUrisFromLabel = (label) => (dispatch => {\r\n//   dispatch(startSparqlGetUriFromLabel());\r\n//   const query = 'SELECT ?subject ' +\r\n//     'WHERE { ' +\r\n//     '?subject <http://www.w3.org/2000/01/rdf-schema#label> \"' + label + '\"@nl' +\r\n//     '} limit 10';\r\n\r\n//   sparqlAxios(query, getCurrentEndpoint())\r\n//     .then(payload => {\r\n//       dispatch(fulfillSparqlGetUriFromLabel(payload));\r\n//       payload.data.results.bindings.forEach(triple => {\r\n//         dispatch(getTriplesFromUri(triple.subject.value,\r\n//           getCurrentEndpoint()));\r\n//       });\r\n//     })\r\n//     .catch(error => {\r\n//       dispatch(errorSparqlGetUriFromLabel(error));\r\n//     });\r\n// });\r\n\r\n// const getCurrentEndpoint = () => {\r\n//   const state = store.getState();\r\n//   const currentDatasource = state.connection.currentDatasource;\r\n//   const endpoint = state.connection.datasources[currentDatasource].endpoint;\r\n//   return endpoint;\r\n// }\r\n\r\n// const sparqlAxios = (query, endpoint) => (axios({\r\n//   method: 'post',\r\n//   url: endpoint,\r\n//   data: qs.stringify({\r\n//     action: 'exec',\r\n//     queryLn: 'SPARQL',\r\n//     ref: 'text',\r\n//     query,\r\n//   }),\r\n//   headers: {\r\n//     Accept: 'application/json',\r\n//     'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n//   },\r\n// }));","import { FETCH_TEST_REQUEST, FETCH_TEST_SUCCESS, FETCH_TEST_FAILURE } from '../actionTypes'\r\nimport { FETCH_SPARQL_REQUEST, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_FAILURE } from '../actionTypes'\r\nimport { FETCH_SPARQL_JSON_REQUEST, FETCH_SPARQL_JSON_SUCCESS, FETCH_SPARQL_JSON_FAILURE } from '../actionTypes'\r\nimport { thunkCreator } from './utils'\r\nimport qs from 'qs'\r\n\r\nconst axios = require('axios');\r\n\r\nexport const fetchTest = () => thunkCreator({\r\n  types: [FETCH_TEST_REQUEST, FETCH_TEST_SUCCESS, FETCH_TEST_FAILURE],\r\n  promise: fetch(`https://www.anapioficeandfire.com/api/books`)\r\n    .then(response => response.json())\r\n    .catch(error => { console.log(error) })\r\n\r\n})\r\n\r\nexport const fetchAxiosGet = () => thunkCreator({\r\n  types: [FETCH_TEST_REQUEST, FETCH_TEST_SUCCESS, FETCH_TEST_FAILURE],\r\n  promise: axios.get('http://localhost:8080/rdf4j-workbench/repositories/1/query?action=&queryLn=SPARQL&query=SELECT%20%3Fsubject%20%3Fpredicate%20%3Fobject%0AWHERE%20%7B%0A%20%20%20%20%3Chttp%3A%2F%2Flod.onderwijsregistratie.nl%2Frio%2Fid%2FOnderwijsbestuur%2F100B490%3E%20%3Fpredicate%20%3Fobject%20.%0A%7D%20LIMIT%20100&limit_query=100&infer=true&Accept=application/sparql-results%2Bjson')\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})\r\n\r\nexport const fetchAxiosPost = (query, datasource) => thunkCreator({\r\n  types: [FETCH_SPARQL_JSON_REQUEST, FETCH_SPARQL_JSON_SUCCESS, FETCH_SPARQL_JSON_FAILURE],\r\n  promise: axios({\r\n    method: 'post',\r\n    url: datasource,\r\n    data: qs.stringify({\r\n      action: 'exec',\r\n      queryLn: 'SPARQL',\r\n      ref: 'text',\r\n      query,\r\n    }),\r\n    headers: {\r\n      Accept: 'application/sparql-results+json'\r\n    },\r\n\r\n  })\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})\r\n\r\nexport const sparql = (endpoint) => thunkCreator({\r\n  types: [FETCH_TEST_REQUEST, FETCH_TEST_SUCCESS, FETCH_TEST_FAILURE],\r\n  promise: fetch('http://localhost:8080/rdf4j-workbench/repositories/1/query?action=&queryLn=SPARQL&query=SELECT%20*%20%0AWHERE%20%0A%7B%0A%20%20%3Fs%20%3Fp%20%3Fo%20.%20%0A%20%20FILTER%20(regex(%3Fo%2C%20%229202LE%22))%0A%7D&limit_query=100&infer=true&', {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n  })\r\n  //.then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Search from '../components/Search'\r\nimport { fetchTest, fetchAxiosGet, fetchAxiosPost, fetchSPARQL, sparql } from '../redux/actions/index'\r\nimport { push } from 'connected-react-router'\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    nodes: state.nodes,\r\n    links: state.links,\r\n    datasource: state.datasource,\r\n    history: state.router\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({ fetchTest, fetchAxiosGet, fetchAxiosPost, fetchSPARQL, sparql, push }, dispatch)\r\n\r\nconst ConnectedSearch = connect(mapStateToProps, mapDispatchToProps)(Search)\r\n\r\nexport default ConnectedSearch","import React from 'react';\r\n\r\nconst Datasource = (props) => (\r\n  <button className=\"dropdown-item\" onClick={props.onClick}>\r\n    {props.name}\r\n  </button>\r\n);\r\n\r\nclass DataSourceDropdown extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"setDataSourceDropdown\">\r\n        <div className=\"dropdown show\">\r\n          <button className=\"btn btn-secondary dropdown-toggle\"\r\n            id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n            aria-expanded=\"false\">Specificeer bron: {this.props.datasource.currentDatasource.name}</button>\r\n          <div className=\"\" aria-labelledby=\"dropdownMenuLink\">\r\n            {\r\n              this.props.datasource.datasources.map((item, key) =>\r\n                <Datasource\r\n                  key={key}\r\n                  onClick={() => this.props.setCurrentDatasource(item)}\r\n                  name={item.name}\r\n                />\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DataSourceDropdown\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport DataSourceDropdown from '../components/DataSourceDropdown'\r\nimport { setCurrentDatasource } from '../redux/actions/index';\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    datasource: state.datasource\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({ setCurrentDatasource }, dispatch)\r\n\r\nconst ConnectedDataSourceDropdown = connect(mapStateToProps, mapDispatchToProps)(DataSourceDropdown)\r\n\r\nexport default ConnectedDataSourceDropdown","import React from 'react'\r\n\r\nimport { createDevTools } from 'redux-devtools'\r\n\r\nimport LogMonitor from 'redux-devtools-log-monitor'\r\nimport DockMonitor from 'redux-devtools-dock-monitor'\r\n\r\nconst DevTools = createDevTools(\r\n  <DockMonitor\r\n    toggleVisibilityKey='ctrl-h'\r\n    changePositionKey='ctrl-q'\r\n    defaultIsVisible={true}\r\n  >\r\n    <LogMonitor theme='tomorrow' />\r\n  </DockMonitor>\r\n)\r\n\r\nexport default DevTools","import { FETCH_TEST_SUCCESS, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_JSON_SUCCESS } from '../actionTypes'\r\n\r\nexport default function nodeReducer(state = [\r\n  { id: 'John' },\r\n  { id: 'Chip' },\r\n  { id: 'Voetbal' },\r\n], action) {\r\n  let NewState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case FETCH_TEST_SUCCESS: {\r\n\r\n      var links = [\r\n        { source: \"John\", target: 'Fussbal', property: 'plays' },\r\n        { source: \"John\", target: 'Chip', property: 'Heeft vriend' },\r\n        { source: \"Eric\", target: 'Footbal', property: 'Speelt' },\r\n        { source: \"John\", target: 'Golf', property: 'Speelt' },\r\n        { source: \"Eric\", target: 'John', property: 'Heeft vriend' },\r\n        { source: \"Eric\", target: 'Chip', property: 'Heeft vriend' }]\r\n\r\n      NewState = []\r\n\r\n      //distinct nodes\r\n      var templist = []\r\n      links.forEach(link => {\r\n        if (!templist.includes(link.source)) {\r\n          NewState.push({ id: link.source })\r\n        }\r\n        if (!templist.includes(link.target)) {\r\n          NewState.push({ id: link.target })\r\n        }\r\n\r\n        templist.push(link.source)\r\n        templist.push(link.target)\r\n      })\r\n      console.log('node NewState: ' + NewState)\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_SUCCESS: {\r\n      //LINK:\r\n      //{ source: \"John\", target: 'Fussbal', property: 'plays' }\r\n\r\n      //NODE\r\n      //{ id: 'John' }\r\n      // var parseString = require('xml2js').parseString;\r\n      // var xml = action.result.data\r\n      // parseString(xml, function (err, result) {\r\n      //   console.dir(result);\r\n      // });\r\n      return 'ok dan'\r\n    }\r\n    case FETCH_SPARQL_JSON_SUCCESS: {\r\n      //LINK:\r\n      //[{ source: \"John\", target: 'Fussbal', property: 'plays' }]\r\n\r\n      //NODE\r\n      //[{ id: 'John' }]\r\n\r\n      NewState = []\r\n\r\n      //distinct nodes\r\n      var templist = []\r\n      action.result.data.results.bindings.forEach(element => {\r\n\r\n        //add subject and object to templist\r\n        if (!templist.includes(element.sub.value)) {\r\n          NewState.push({ id: element.sub.value, type: element.sub.type })\r\n        }\r\n        if (!templist.includes(element.obj.value)) {\r\n          NewState.push({ id: element.obj.value, type: element.obj.type })\r\n        }\r\n\r\n        templist.push(element.sub.value)\r\n        templist.push(element.obj.value)\r\n      })\r\n      return NewState\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","import { FETCH_TEST_SUCCESS, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_JSON_SUCCESS } from '../actionTypes'\r\n\r\nexport default function linkReducer(state = [\r\n  { source: \"John\", target: \"Voetbal\", property: \"Speelt\" },\r\n  { source: \"Voetbal\", target: \"John\", property: \"Gespeeld door\" },\r\n  { source: \"John\", target: \"Chip\", property: \"Heeft vriend\" },\r\n  { source: \"Chip\", target: \"Voetbal\", property: \"Speelt\" }\r\n], action) {\r\n  let NewState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case FETCH_TEST_SUCCESS: {\r\n\r\n      NewState = [\r\n        { source: \"John\", target: 'Fussbal', property: 'plays' },\r\n        { source: \"John\", target: 'Chip', property: 'Heeft vriend' },\r\n        { source: \"Eric\", target: 'Footbal', property: 'Speelt' },\r\n        { source: \"John\", target: 'Golf', property: 'Speelt' },\r\n        { source: \"Eric\", target: 'John', property: 'Heeft vriend' },\r\n        { source: \"Eric\", target: 'Chip', property: 'Heeft vriend' }]\r\n\r\n      //sort links by source then target --> sorteert goed.\r\n      NewState.sort(function (a, b) {\r\n        if (a.source > b.source) { return 1; }\r\n        else if (a.source < b.source) { return -1; }\r\n        else {\r\n          if (a.target > b.target) { return 1; }\r\n          if (a.target < b.target) { return -1; }\r\n          else { return 0; }\r\n        }\r\n      })\r\n\r\n      // set linknum for every link --> wordt in path gebruikt om duplicate links te kunnen leggen\r\n      for (var i = 0; i < NewState.length; i++) {\r\n        if (i != 0 &&\r\n          NewState[i].source == NewState[i - 1].source &&\r\n          NewState[i].target == NewState[i - 1].target) {\r\n          NewState[i].linknum = NewState[i - 1].linknum + 1;\r\n        }\r\n        else { NewState[i].linknum = 1; };\r\n      };\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_SUCCESS: {\r\n      //LINK:\r\n      //{ source: \"John\", target: 'Fussbal', property: 'plays' }\r\n\r\n      //NODE\r\n      //{ id: 'John' }\r\n      var parseString = require('xml2js').parseString;\r\n      var xml = action.result.data\r\n      parseString(xml, function (err, result) {\r\n        console.dir(result);\r\n        NewState = []\r\n        result.sparql.results[0].result.forEach(result => { //element is a single result.\r\n\r\n          // 0 = p, 1 = s 2 = t\r\n          var obj = {\r\n            source: 'null',\r\n            target: 'null',\r\n            property: 'null',\r\n            targetIsURI: 'null',\r\n          }\r\n          result.binding.forEach(binding => {\r\n\r\n            switch (binding.$.name) {\r\n              case 'subject':\r\n                obj.source = binding.uri[0]\r\n                console.log('source: ' + obj.source)\r\n                break;\r\n              case 'predicate':\r\n                obj.property = binding.uri[0]._\r\n                //console.log('property: ' + obj.property)\r\n                break;\r\n              case 'object':\r\n                console.log(binding)\r\n\r\n                if (binding.literal) {\r\n                  console.log('literal')\r\n                }\r\n                if (binding.uri) {\r\n                  console.log('uri')\r\n                }\r\n\r\n                break;\r\n              default:\r\n              // code block\r\n            }\r\n\r\n            if (obj.source == 'null') {\r\n              obj.source = 'http://lod.onderwijsregistratie.nl/rio/id/Onderwijsbestuur/100B490'\r\n            }\r\n\r\n\r\n          })\r\n          NewState.push(obj)\r\n        });\r\n      });\r\n\r\n\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_JSON_SUCCESS: {\r\n      //LINK:\r\n      //[{ source: \"John\", target: 'Fussbal', property: 'plays' }]\r\n\r\n      //NODE\r\n      //[{ id: 'John' }]\r\n\r\n      NewState = []\r\n\r\n      action.result.data.results.bindings.forEach(element => {\r\n        //console.log(element)\r\n        var source = element.sub\r\n        var target = element.obj\r\n        var property = element.pred\r\n        var link = {}\r\n        link.source = source.value\r\n        link.target = target.value\r\n        link.property = property.value\r\n        NewState.push(link)\r\n      });\r\n      return NewState\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","import { FETCH_TEST_SUCCESS, FETCH_SPARQL_SUCCESS } from '../actionTypes'\r\n\r\nexport default function testReducer(state = [\r\n], action) {\r\n  switch (action.type) {\r\n    case FETCH_SPARQL_SUCCESS: {\r\n      //return action.result.data\r\n\r\n      // example of the type of object i want\r\n\r\n      //LINK:\r\n      //{ source: \"John\", target: 'Fussbal', property: 'plays' }\r\n\r\n      //NODE\r\n      //{ id: 'John' }\r\n      // var parseString = require('xml2js').parseString;\r\n      // var xml = action.result.data\r\n      // parseString(xml, function (err, result) {\r\n      //   console.dir(result);\r\n      // });\r\n      return 'ok dan'\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_CURRENT_DATASOURCE } from '../actionTypes';\r\n\r\n\r\nexport default function datasourceReducer(state = {\r\n  currentDatasource: 'https://lod.onderwijsregistratie.nl/rio/sparql',\r\n  datasources: [\r\n    {\r\n      name: 'Onderwijsregistratie',\r\n      endpoint: 'http://localhost:8080/rdf4j-workbench/repositories/rio/query',\r\n    },\r\n    {\r\n      name: 'Basisregistraties',\r\n      endpoint: 'https://data.pdok.nl/sparql',\r\n    },\r\n    {\r\n      name: 'Onderwijsinspectie',\r\n      endpoint: 'http://localhost:8080/rdf4j-workbench/repositories/ivho/query',\r\n    },\r\n    {\r\n      name: 'Kennisnet',\r\n      endpoint: 'http://localhost:8080/rdf4j-workbench/repositories/kennisnet/query',\r\n    },\r\n  ],\r\n}, action) {\r\n  let newState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case SET_CURRENT_DATASOURCE: {\r\n      newState.currentDatasource = action.datasource;\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n","export default function loadingReducer(state = {}, action) {\r\n  if (action.type.endsWith('_REQUEST')) {\r\n    const requestName = action.type.replace('_REQUEST', '')\r\n    const counter = state[requestName] || 0\r\n    return { ...state, [requestName]: counter + 1 }\r\n  }\r\n\r\n  if (action.type.endsWith('_SUCCESS') || action.type.endsWith('_FAILURE')) {\r\n    const requestName = action.type.replace('_SUCCESS', '').replace('_FAILURE', '')\r\n    const counter = state[requestName] || 0\r\n    return { ...state, [requestName]: counter - 1 }\r\n  }\r\n\r\n  return state\r\n}","export default function errorReducer(state = {}, action) {\r\n  if (action.type.endsWith('_FAILURE')) {\r\n    return action.error\r\n  }\r\n  // clear error whensubmitting another request\r\n  if (action.type.endsWith('_REQUEST')) {\r\n    return {}\r\n  }\r\n\r\n  return state\r\n}","import { FETCH_TEST_SUCCESS, FETCH_SPARQL_SUCCESS } from '../actionTypes'\r\n\r\nexport default function testReducer(state = [\r\n], action) {\r\n  switch (action.type) {\r\n    case FETCH_TEST_SUCCESS: {\r\n      return action.result\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","// Root Reducer, combines all reducers into one single reducer\r\n\r\nimport { combineReducers } from 'redux'\r\n\r\nimport nodesReducer from './nodes'\r\nimport linkesReducer from './links'\r\nimport axiosReducer from './axios'\r\nimport datasourceReducer from './datasource'\r\nimport loadingReducer from './loading'\r\nimport errorReducer from './error'\r\nimport testReducer from './test'\r\n\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nconst appReducer = (history) => combineReducers({\r\n  nodes: nodesReducer,\r\n  links: linkesReducer,\r\n  axios: axiosReducer,\r\n  datasource: datasourceReducer,\r\n  loading: loadingReducer,\r\n  error: errorReducer,\r\n  test: testReducer,\r\n  router: connectRouter(history)\r\n})\r\n\r\nexport default appReducer","// redux\r\nimport { createStore, compose } from 'redux'\r\n\r\n//root reducer\r\nimport appReducer from '../reducers/index'\r\n\r\n//middleware\r\nimport middleware from './middleware'\r\nimport { history } from './middleware'\r\n\r\n//devtools\r\nimport { persistState } from 'redux-devtools'\r\nimport DevTools from '../../containers/DevTools'\r\n\r\n\r\nconst enhancer = compose(\r\n  middleware,\r\n  DevTools.instrument(),\r\n  persistState(getSessionKey())\r\n)\r\n\r\nfunction getSessionKey() {\r\n  const matches = window.location.href.match(/[?&]debug=([^&#])\\b/)\r\n  return (matches && matches.length > 0)\r\n    ? matches[1]\r\n    : null\r\n}\r\n\r\nexport default function configureStore(initialState) {\r\n  return createStore(appReducer(history), initialState, enhancer)\r\n}","import React from 'react'\r\nimport {\r\n  NavLink,\r\n} from 'react-router-dom'\r\n\r\nimport { Container, Navbar, NavbarBrand, NavDropdown, Form, FormControl, Button, Nav } from 'react-bootstrap'\r\n\r\n//import Logo from '../assets/img/logo.svg'\r\n\r\nclass Navigation extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Navigation\">\r\n        <Navbar expand=\"lg\" fixed=\"top\">\r\n          <Navbar.Brand as={NavLink} activeClassName=\"notactive\" to=\"/\">\r\n            <img\r\n              // src={Logo}\r\n              width=\"100\"\r\n              height=\"100\"\r\n              alt=\"Logo\"\r\n            /><b>React SPARQL Browser</b>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav.Link as={NavLink} exact activeClassName=\"active\" to=\"/\">Home</Nav.Link>\r\n            <Nav.Link as={NavLink} activeClassName=\"active\" to=\"/contact\">Contact</Nav.Link>\r\n            <Nav.Link as={NavLink} activeClassName=\"active\" to=\"/graph\">Graph</Nav.Link>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\n\r\nimport Navigation from './Nav'\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Header\">\r\n        <header>\r\n          <Navigation />\r\n        </header>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"Footer\">\r\n        <Container>\r\n          <Row>\r\n            <Col sm={4}></Col>\r\n            <Col sm={4}><p>© React-SPARQL-Browser {new Date().getYear() + 1900}</p></Col>\r\n            <Col sm={4}></Col>\r\n\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport ConnectedSearch from '../containers/ConnectedSearch'\r\n\r\nclass Home extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <h2>home</h2>\r\n        <ConnectedSearch />\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Home","import React from 'react'\r\n\r\nimport ConnectedForceGraph from '../containers/ConnectedForceGraph';\r\nimport ConnectedSearch from '../containers/ConnectedSearch'\r\nimport ConnectedDataSourceDropdown from '../containers/ConnectedDataSourceDropdown'\r\n\r\nclass Graph extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Graph\">\r\n        <h2>Graph</h2>\r\n        <ConnectedSearch />\r\n        <ConnectedDataSourceDropdown />\r\n        <ConnectedForceGraph />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Graph","import React from 'react'\r\n\r\nclass Contact extends React.Component {\r\n  onSubmit = () => {\r\n    this.props.history.push('/cocktails')\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Contact\">\r\n        <h2>Contact form</h2>\r\n        <form>\r\n          <input placeholder=\"name\" type=\"name\" />\r\n          <input placeholder=\"email\" type=\"email\" />\r\n          <button onClick={this.onSubmit}>Submit</button>\r\n        </form>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Contact","import React from 'react'\r\n\r\nclass NotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"NotFound\">\r\n        <h1>Not Found...</h1>\r\n        <button onClick={() => this.props.history.push('/home')}>Go home</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default NotFound","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {\r\n  Route,\r\n  NavLink,\r\n  Switch,\r\n} from 'react-router-dom'\r\n\r\n\r\n\r\n//pages\r\nimport Home from '../pages/Home'\r\nimport Graph from '../pages/Graph'\r\nimport Contact from '../pages/Contact'\r\nimport Notfound from '../pages/NotFound'\r\n\r\nclass PageContent extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"PageContent\">\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/home\" component={Home} />\r\n            <Route path=\"/sparql-react-browser/\" component={Home} />\r\n            <Route path=\"/graph\" component={Graph} />\r\n            <Route path=\"/contact\" component={Contact} />\r\n\r\n            <Route component={Notfound} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PageContent","import React from 'react'\r\n\r\nconst Loading = ({ isLoading }) =>\r\n  isLoading && <span>Loading...</span>\r\n\r\nexport default Loading","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Loading from '../components/Loading'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const { loading } = state\r\n\r\n  const isLoading = Object.keys(loading).reduce((result, requestName) => {\r\n    if (result === true) return true\r\n    if (loading[requestName] > 0) return true\r\n    return false\r\n  }, false)\r\n\r\n  return { isLoading }\r\n}\r\n\r\nconst ConnectedLoading = connect(mapStateToProps)(Loading)\r\n\r\nexport default ConnectedLoading","import React from 'react'\r\n\r\nconst Error = ({ message }) =>\r\n  message\r\n    ? <span style={{ color: 'red' }}>Error: {message}</span>\r\n    : null\r\n\r\nexport default Error","import { connect } from 'react-redux'\r\n\r\nimport Error from '../components/Error'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    message: state.error && state.error.message\r\n  }\r\n}\r\n\r\nconst ConnectedError = connect(mapStateToProps)(Error)\r\n\r\nexport default ConnectedError","import React from 'react';\r\n\r\n//Router\r\nimport { ConnectedRouter } from 'connected-react-router'\r\nimport { history } from './redux/store/middleware'\r\n\r\n//bootstrap stylesheet\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n//custom stylesheet\r\nimport './App.scss';\r\n\r\nimport ConnectedForceGraph from './containers/ConnectedForceGraph';\r\nimport ConnectedSearch from './containers/ConnectedSearch'\r\nimport ConnectedDataSourceDropdown from './containers/ConnectedDataSourceDropdown'\r\n\r\n//devtools\r\nimport DevTools from './containers/DevTools.jsx'\r\n\r\nimport { Provider } from 'react-redux'\r\n\r\nimport configureStore from './redux/store/index'\r\n\r\n// Layout components\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport PageContent from './components/PageContent';\r\nimport ConnectedLoading from './containers/ConnectedLoading'\r\nimport ConnectedError from './containers/ConnectedError'\r\n\r\n//init redux store\r\nconst store = configureStore()\r\nconst initialState = store.getState()\r\n\r\nconsole.log('initializing store: ', store.getState())\r\n\r\nconst unsubscribe = store.subscribe(() => {\r\n  //console.log('state changed: ', store.getState())\r\n})\r\n\r\n\r\n\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <div className=\"App\">\r\n      <ConnectedRouter history={history}>\r\n        <Header />\r\n        <PageContent />\r\n        <ConnectedLoading />\r\n        <ConnectedError />\r\n        <Footer />\r\n      </ConnectedRouter>\r\n      {/* exclude devtools in production */}\r\n      {(process.env.NODE_ENV !== 'production') && <DevTools />}\r\n    </div>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n\r\n\r\n{/* <ConnectedSearch />\r\n        <ConnectedDataSourceDropdown />\r\n        <ConnectedForceGraph /> */}\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}