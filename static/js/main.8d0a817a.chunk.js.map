{"version":3,"sources":["components/ScrollBox.module.scss","redux/store/middleware.js","containers/DevTools.jsx","redux/reducers/data.js","redux/actionTypes.js","redux/reducers/nodes.js","redux/reducers/utils.js","redux/reducers/links.js","redux/reducers/datasource.js","redux/reducers/forcegraphSettings.js","redux/reducers/loading.js","redux/reducers/error.js","redux/reducers/index.js","redux/store/index.js","components/Nav.js","components/Header.js","components/Footer.js","pages/Home.js","redux/actions/utils.js","redux/actions/datasource.js","redux/actions/sparql.js","redux/actions/nodes.js","redux/actions/forcegraphSettings.js","components/Tooltip.js","containers/ConnectedTooltip.js","components/Node.js","components/NodeLabel.js","components/Link.js","components/LinkLabel.js","components/Marker.js","components/forcegraphSettings.js","containers/ConnectedForcegraphSettings.js","components/AddDataSource.js","containers/ConnectedAddDatasource.js","components/DataSource.js","containers/ConnectedDataSource.js","components/ScrollBox.js","components/Search.js","containers/ConnectedSearch.js","components/ForceGraph.js","components/D3NodeGenerator.js","components/D3LinkGenerator.js","containers/ConnectedForceGraph.js","components/ForceGraphOld.js","components/YasguiClass.js","components/QueryFormOld.js","components/QueryForm.js","containers/ConnectedQueryForm.js","components/Examples.js","containers/ConnectedExamples.js","pages/Graph.js","pages/Contact.js","pages/NotFound.js","components/PageContent.js","components/Loading.js","containers/ConnectedLoading.js","components/Error.js","containers/ConnectedError.js","App.js","index.js","components/Search.module.scss"],"names":["module","exports","history","createBrowserHistory","middleware","applyMiddleware","thunkMiddleware","routerMiddleware","DevTools","createDevTools","toggleVisibilityKey","changePositionKey","defaultIsVisible","theme","dataReducer","state","id","action","NewState","Object","assign","type","nodeReducer","selectedNode","nodesList","node","links","source","value","target","property","templist","forEach","link","includes","push","console","log","vars","result","data","head","results","bindings","element","config","subject","split","some","sortBy","field","a","b","setLinkNum","i","length","linknum","linkReducer","sort","datasourceReducer","searchAll","currentDatasource","datasources","name","endpoint","active","classes","selectedClass","instances","selectedInstance","newState","datasource","index","indexOf","splice","myclass","instance","forcegraphSettingsReducer","linkDistance","min","max","forceCharge","settings","loadingReducer","endsWith","requestName","replace","counter","errorReducer","error","appReducer","combineReducers","nodes","nodesReducer","linkesReducer","forcegraphsettings","loading","router","connectRouter","enhancer","compose","instrument","persistState","matches","window","location","href","match","getSessionKey","initialState","Navigation","Navbar","expand","Container","Brand","as","NavLink","activeClassName","to","width","height","alt","Toggle","aria-controls","Collapse","Nav","Link","exact","React","Component","Header","className","Footer","Date","getYear","Home","Jumbotron","Button","variant","onClick","props","thunkCreator","types","promise","rest","REQUESTED","RESOLVED","REJECTED","dispatch","then","errors","Error","catch","axios","require","setCurrentDatasource","toggleSearchAll","toggleBlockDatasource","deleteDatasource","addDatasource","fetchClasses","method","url","qs","stringify","queryLn","ref","query","headers","Accept","fetchInstances","c","setSelectedClass","setSelectedInstance","fetchTest","fetch","response","json","fetchSparql","fetchAboutSubject","substring","lastIndexOf","setSelectedNode","removeSelectedNode","fetchAboutClickedNode","setForcegraphSettings","Marker","sn","find","selected","x","y","renderTooltip","ConnectedTooltip","connect","bindActionCreators","Tooltip","Node","enterNode","selection","select","on","d","ssn","facn","attr","classed","call","drag","simulation","d3","selectAll","remove","rs","fx","fy","this","d3Node","ReactDOM","findDOMNode","datum","NodeLabel","enterNodeLabel","text","nodeURL","join","merge","enterLink","dr","d3Link","marker-end","LinkLabel","enterLinkLabel","open","linkpropertys","linksList","viewBox","refX","refY","orient","fill","stroke","markerWidth","markerHeight","cx","cy","r","Slider","handleChange","bind","submit","applySettings","event","setState","Form","Group","Label","Control","class","onChange","ConnectedSlider","ForcegraphSettings","AddDatasource","show","handleNameChange","handleEndpointChange","handleModal","Modal","onHide","closeButton","Title","Body","onSubmit","handleSubmitDatasource","controlId","placeholder","ConnectedAddDatasource","DataSourceDropdown","Row","Col","sm","Dropdown","Menu","map","item","key","Item","ButtonGroup","renderBlockButton","renderDatasourceDropdown","ConnectedDataSource","DataSource","ScrollBox","styles","scrollbox","children","Search","prevprops","toLowerCase","label","SearchForm","ListGroup","filter","filterClassHelper","filterInstanceHelper","ConnectedSearch","ForceGraph","restartSimulation","rsn","document","getElementById","addEventListener","initializeSVG","offsetWidth","offsetHeight","forceLink","distance","forceCenter","strength","force","stop","zoom","scaleExtent","currentTransform","transform","svg","style","alpha","restart","ConnectedForcegraphSettings","forcegraphSettings","ConnectedForceGraph","Gui","yasgui","submitquery","Yasgui","prop","requestConfig","persistencyExpire","copyEndpointOnNewTab","persistentConfig","storageId","tab","tabElements","_selectedTab","selectedtab","_tabs","persistentJson","yasqe","QueryForm","handleQueryChange","handleQuerySubmit","handleSubjectChange","handleSubjectDetailsQuerySubmit","preventDefault","rows","ConnectedQueryForm","QueryFormOld","Example","CardDeck","Card","Text","ConnectedExamples","Examples","Graph","path","defaultActiveKey","component","Contact","NotFound","PageContent","Notfound","Loading","isLoading","ConnectedLoading","keys","reduce","message","color","ConnectedError","store","createStore","getState","App","process","render","StrictMode"],"mappings":"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","file":"static/js/main.8d0a817a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollbox\":\"ScrollBox_scrollbox__309q-\"};","import thunkMiddleware from 'redux-thunk'\r\n\r\nimport { applyMiddleware } from 'redux'\r\nimport { routerMiddleware } from 'connected-react-router'\r\n\r\nimport { createBrowserHistory } from 'history'\r\nexport const history = createBrowserHistory()\r\n\r\nconst middleware = applyMiddleware(\r\n  thunkMiddleware,\r\n  routerMiddleware(history)\r\n)\r\n\r\nexport default middleware","import React from 'react'\r\n\r\nimport { createDevTools } from 'redux-devtools'\r\n\r\nimport LogMonitor from 'redux-devtools-log-monitor'\r\nimport DockMonitor from 'redux-devtools-dock-monitor'\r\n\r\nconst DevTools = createDevTools(\r\n  <DockMonitor\r\n    toggleVisibilityKey='ctrl-h'\r\n    changePositionKey='ctrl-q'\r\n    defaultIsVisible={true}\r\n  >\r\n    <LogMonitor theme='tomorrow' />\r\n  </DockMonitor>\r\n)\r\n\r\nexport default DevTools","import { FETCH_TEST_SUCCESS, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS, FETCH_ABOUT_CLICKED_NODE_SUCCESS } from '../actionTypes'\r\n\r\nexport default function dataReducer(state = {\r\n  id: 1,\r\n\r\n},\r\n  action) {\r\n  let NewState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case FETCH_TEST_SUCCESS: {\r\n      NewState.id = state.id + 1\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_SUCCESS: {\r\n      NewState.id = state.id + 1\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_ABOUTSUBJECT_SUCCESS: {\r\n      NewState.id = state.id + 1\r\n      return NewState\r\n    }\r\n    case FETCH_ABOUT_CLICKED_NODE_SUCCESS: {\r\n      NewState.id = state.id + 1\r\n      return NewState\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","\r\n//datasource\r\nexport const SET_CURRENT_DATASOURCE = 'SET_CURRENT_DATASOURCE';\r\nexport const TOGGLE_SEARCHALL = 'TOGGLE_SEARCHALL'\r\nexport const TOGGLE_BLOCK_DATASOURCE = 'TOGGLE_BLOCK_DATASOURCE'\r\nexport const DELETE_DATASOURCE = 'DELETE_DATASOURCE'\r\nexport const ADD_DATASOURCE = 'ADD_DATASOURCE'\r\n\r\n//forcegraph settings\r\nexport const SET_FORCEGRAPH_SETTINGS = 'SET_FORCEGRAPH_SETTINGS'\r\n\r\n//classes\r\nexport const FETCH_CLASSES_REQUEST = 'FETCH_CLASSES_REQUEST'\r\nexport const FETCH_CLASSES_SUCCESS = 'FETCH_CLASSES_SUCCESS'\r\nexport const FETCH_CLASSES_FAILURE = 'FETCH_CLASSES_FAILURE'\r\n\r\nexport const SET_SELECTED_CLASS = 'SET_SELECTED_CLASS'\r\n\r\n// instance from class\r\nexport const FETCH_INSTANCES_OF_CLASS_REQUEST = 'FETCH_INSTANCES_OF_CLASS_REQUEST'\r\nexport const FETCH_INSTANCES_OF_CLASS_SUCCESS = 'FETCH_INSTANCES_OF_CLASS_SUCCESS'\r\nexport const FETCH_INSTANCES_OF_CLASS_FAILURE = 'FETCH_INSTANCES_OF_CLASS_FAILURE'\r\n\r\nexport const SET_SELECTED_INSTANCE = 'SET_SELECTED_INSTANCE'\r\n\r\n// nodes\r\nexport const SET_SELECTED_NODE = 'SET_SELECTED_NODE'\r\nexport const REMOVE_SELECTED_NODE = 'REMOVE_SELECTED_NODE'\r\n\r\n\r\n//fetch test\r\nexport const FETCH_TEST_REQUEST = 'FETCH_TEST_REQUEST'\r\nexport const FETCH_TEST_SUCCESS = 'FETCH_TEST_SUCCESS'\r\nexport const FETCH_TEST_FAILURE = 'FETCH_TEST_FAILURE'\r\n\r\n//fetch sparql\r\nexport const FETCH_SPARQL_REQUEST = 'FETCH_SPARQL_REQUEST'\r\nexport const FETCH_SPARQL_SUCCESS = 'FETCH_SPARQL_SUCCESS'\r\nexport const FETCH_SPARQL_FAILURE = 'FETCH_SPARQL_FAILURE'\r\n\r\n//fetch sparql about subject\r\nexport const FETCH_SPARQL_ABOUTSUBJECT_REQUEST = 'FETCH_SPARQL_ABOUTSUBJECT_REQUEST'\r\nexport const FETCH_SPARQL_ABOUTSUBJECT_SUCCESS = 'FETCH_SPARQL_ABOUTSUBJECT_SUCCESS'\r\nexport const FETCH_SPARQL_ABOUTSUBJECT_FAILURE = 'FETCH_SPARQL_ABOUTSUBJECT_FAILURE'\r\n\r\n//fetch about clicked nodes\r\nexport const FETCH_ABOUT_CLICKED_NODE_REQUEST = 'FETCH_ABOUT_CLICKED_NODE_REQUEST'\r\nexport const FETCH_ABOUT_CLICKED_NODE_SUCCESS = 'FETCH_ABOUT_CLICKED_NODE_SUCCESS'\r\nexport const FETCH_ABOUT_CLICKED_NODE_FAILURE = 'FETCH_ABOUT_CLICKED_NODE_FAILURE'\r\n\r\n","import { SET_SELECTED_NODE, REMOVE_SELECTED_NODE } from '../actionTypes'\r\nimport { FETCH_TEST_SUCCESS, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS, FETCH_ABOUT_CLICKED_NODE_SUCCESS } from '../actionTypes'\r\n\r\nexport default function nodeReducer(state = {\r\n  selectedNode: null,\r\n  nodesList: [\r\n    { id: 'Subject', type: 'literal' },\r\n    { id: 'Object', type: 'literal' },\r\n  ]\r\n}, action) {\r\n  let NewState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case SET_SELECTED_NODE: {\r\n      const node = action.node\r\n      NewState.selectedNode = node\r\n      return NewState\r\n    }\r\n    case REMOVE_SELECTED_NODE: {\r\n      NewState.selectedNode = null\r\n      return NewState\r\n    }\r\n\r\n    case FETCH_TEST_SUCCESS: {\r\n\r\n      var links = [\r\n        { source: { value: \"http://example.nl/persoon/Wisse\", type: \"uri\" }, target: { value: \"http://example.nl/bedrijf/DUO\", type: \"uri\" }, property: \"http://example.nl/Is stagair bij\" },\r\n        { source: { value: \"http://example.nl/persoon/Wisse\", type: \"uri\" }, target: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, property: \"http://example.nl/Heeft Woonadres\" },\r\n        { source: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, target: { value: \"7913TH\", type: \"literal\" }, property: \"http://example.nl/Postcode\" },\r\n        { source: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, target: { value: \"25\", type: \"literal\" }, property: \"http://example.nl/Nummer\" },\r\n        { source: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, target: { value: \"Zuideropgaande\", type: \"literal\" }, property: \"http://example.nl/Straatnaam\" },\r\n        { source: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, target: { value: \"Hollandscheveld\", type: \"literal\" }, property: \"http://example.nl/Plaatsnaam\" },\r\n        { source: { value: \"http://example.nl/bedrijf/DUO\", type: \"uri\" }, target: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, property: \"http://example.nl/Heeft adres\" },\r\n        { source: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, target: { value: \"9722TB\", type: \"literal\" }, property: \"http://example.nl/Postcode\" },\r\n        { source: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, target: { value: \"12\", type: \"literal\" }, property: \"http://example.nl/Nummer\" },\r\n        { source: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, target: { value: \"Kempkensberg\", type: \"literal\" }, property: \"http://example.nl/Straatnaam\" },\r\n        { source: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, target: { value: \"Groningen\", type: \"literal\" }, property: \"Plaatsnaam\" },\r\n        { source: { value: \"http://example.nl/persoon/Wisse\", type: \"uri\" }, target: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, property: \"Werkadres\" },\r\n      ]\r\n\r\n      NewState.nodesList = []\r\n\r\n      //distinct nodes\r\n      var templist = []\r\n      links.forEach(link => {\r\n        if (!templist.includes(link.source.value)) {\r\n          NewState.nodesList.push({ id: link.source.value, type: link.source.type })\r\n        }\r\n        if (!templist.includes(link.target.value)) {\r\n          NewState.nodesList.push({ id: link.target.value, type: link.target.type })\r\n        }\r\n\r\n        templist.push(link.source.value)\r\n        templist.push(link.target.value)\r\n      })\r\n      console.log('node NewState: ' + NewState)\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_SUCCESS: {\r\n      NewState.nodesList = []\r\n\r\n      //distinct nodes\r\n      var templist = []\r\n\r\n      //var names from the result\r\n      var vars = action.result.data.head.vars\r\n\r\n\r\n      action.result.data.results.bindings.forEach(element => {\r\n\r\n        //add subject and object to templist\r\n        if (!templist.includes(element[vars[0]].value)) {\r\n          NewState.nodesList.push({ id: element[vars[0]].value, type: element[vars[0]].type })\r\n        }\r\n        if (!templist.includes(element[vars[2]].value)) {\r\n          NewState.nodesList.push({ id: element[vars[2]].value, type: element[vars[2]].type })\r\n        }\r\n\r\n        templist.push(element[vars[0]].value)\r\n        templist.push(element[vars[2]].value)\r\n      })\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_ABOUTSUBJECT_SUCCESS: {\r\n\r\n      NewState.nodesList = []\r\n\r\n      //distinct nodes\r\n      var templist = []\r\n\r\n      // add main subject to nodeslist\r\n      NewState.nodesList.push({ id: action.result.config.subject, type: 'uri' })\r\n\r\n      //var names from the result\r\n      var vars = action.result.data.head.vars\r\n\r\n      // for each triple\r\n      action.result.data.results.bindings.forEach(element => {\r\n        console.log('hier: ')\r\n        console.log(element[action.result.data.head.vars[1]]['xml:lang'])\r\n\r\n        //check if property comes from the same base URL as the subject\r\n        if (element[vars[0]].value.split('/')[2] === action.result.config.subject.split('/')[2]) {\r\n\r\n          //add targets to nodeslist\r\n          if (!templist.includes(element[vars[1]].value)) {\r\n\r\n            //xml lang set\r\n            if (element[action.result.data.head.vars[1]]['xml:lang'] && (element[action.result.data.head.vars[1]]['xml:lang'] === 'en' || element[action.result.data.head.vars[1]]['xml:lang'] === 'nl')) {\r\n              NewState.nodesList.push({ id: element[action.result.data.head.vars[1]].value, type: element[vars[1]].type })\r\n            }\r\n            //xml lang not set\r\n            if (!element[action.result.data.head.vars[1]]['xml:lang']) {\r\n              NewState.nodesList.push({ id: element[action.result.data.head.vars[1]].value, type: element[vars[1]].type })\r\n            }\r\n\r\n          }\r\n          templist.push(element[vars[1]].value)\r\n        }\r\n      })\r\n      return NewState\r\n    }\r\n    case FETCH_ABOUT_CLICKED_NODE_SUCCESS: {\r\n      NewState.nodesList = state.nodesList\r\n\r\n      //distinct nodes\r\n      \r\n      //var names from the result\r\n      var vars = action.result.data.head.vars\r\n\r\n      // for each triple\r\n      action.result.data.results.bindings.forEach(element => {\r\n\r\n        //check if property comes from the same base URL as the subject\r\n        if (element[vars[0]].value.split('/')[2] === action.result.config.subject.split('/')[2]) {\r\n\r\n\r\n\r\n\r\n          //add targets to nodeslist\r\n          const contains = (node) => node.id === element[action.result.data.head.vars[1]].value\r\n          if (!NewState.nodesList.some(contains)) {\r\n            console.log('didnotcontain')\r\n\r\n            //xml lang set\r\n            if (element[action.result.data.head.vars[1]]['xml:lang'] && (element[action.result.data.head.vars[1]]['xml:lang'] === 'en' || element[action.result.data.head.vars[1]]['xml:lang'] === 'nl')) {\r\n              NewState.nodesList.push({ id: element[action.result.data.head.vars[1]].value, type: element[vars[1]].type })\r\n            }\r\n            //xml lang not set\r\n            if (!element[action.result.data.head.vars[1]]['xml:lang']) {\r\n              NewState.nodesList.push({ id: element[action.result.data.head.vars[1]].value, type: element[vars[1]].type })\r\n            }\r\n\r\n          }\r\n        }\r\n      })\r\n      return NewState\r\n\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","export const sortBy = function sortBy(field) {\r\n  return function (a, b) {\r\n        if (a.[field] > b.[field]) { return 1; }\r\n        else if (a.[field] < b.[field]) { return -1; }\r\n        else {\r\n          if (a.[field] > b.[field]) { return 1; }\r\n          if (a.[field] < b.[field]) { return -1; }\r\n          else { return 0; }\r\n        }\r\n      };\r\n}\r\n\r\nexport const setLinkNum = function setLinkNum(NewState){\r\n  for (var i = 0; i < NewState.length; i++) {\r\n        if (i !== 0 &&\r\n          NewState[i].source === NewState[i - 1].source &&\r\n          NewState[i].target === NewState[i - 1].target) {\r\n          NewState[i].linknum = NewState[i - 1].linknum + 1;\r\n        }\r\n        else { NewState[i].linknum = 1; };\r\n      };\r\n      return NewState\r\n}","import { FETCH_TEST_SUCCESS, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS, FETCH_ABOUT_CLICKED_NODE_SUCCESS } from '../actionTypes'\r\n\r\nimport { sortBy, setLinkNum } from './utils'\r\n\r\nexport default function linkReducer(state = [\r\n  { source: \"Subject\", target: \"Object\", property: \"http://example.nl/property\" },\r\n], action) {\r\n  let NewState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case FETCH_TEST_SUCCESS: {\r\n\r\n      NewState = [\r\n        { source: \"http://example.nl/persoon/Wisse\", target: \"http://example.nl/bedrijf/DUO\", property: \"http://example.nl/Is stagair bij\" },\r\n        { source: \"http://example.nl/persoon/Wisse\", target: \"http://example.nl/adres/Adres1\", property: \"http://example.nl/Heeft Woonadres\" },\r\n        { source: \"http://example.nl/persoon/Wisse\", target: \"http://example.nl/adres/Adres1\", property: \"http://example.nl/dit hierzo\" },\r\n        { source: \"http://example.nl/adres/Adres1\", target: \"7913TH\", property: \"http://example.nl/Postcode\" },\r\n        { source: \"http://example.nl/adres/Adres1\", target: \"25\", property: \"http://example.nl/Nummer\" },\r\n        { source: \"http://example.nl/adres/Adres1\", target: \"Zuideropgaande\", property: \"http://example.nl/Straatnaam\" },\r\n        { source: \"http://example.nl/adres/Adres1\", target: \"Hollandscheveld\", property: \"http://example.nl/Plaatsnaam\" },\r\n        { source: \"http://example.nl/bedrijf/DUO\", target: \"http://example.nl/adres/Adres2\", property: \"http://example.nl/Heeft adres\" },\r\n        { source: \"http://example.nl/adres/Adres2\", target: \"9722TB\", property: \"http://example.nl/Postcode\" },\r\n        { source: \"http://example.nl/adres/Adres2\", target: \"12\", property: \"http://example.nl/Nummer\" },\r\n        { source: \"http://example.nl/adres/Adres2\", target: \"Kempkensberg\", property: \"http://example.nl/Straatnaam\" },\r\n        { source: \"http://example.nl/adres/Adres2\", target: \"Groningen\", property: \"http://example.nl/Plaatsnaam\" },\r\n        { source: \"http://example.nl/persoon/Wisse\", target: \"http://example.nl/adres/Adres2\", property: \"http://example.nl/Werkadres\" },\r\n      ]\r\n\r\n      NewState.sort(sortBy('source'))\r\n\r\n\r\n      NewState = setLinkNum(NewState)\r\n      \r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_SUCCESS: {\r\n      \r\n      NewState = []\r\n\r\n      action.result.data.results.bindings.forEach(element => {\r\n        //console.log(element)\r\n        var source = element[action.result.data.head.vars[0]]\r\n        var target = element[action.result.data.head.vars[2]]\r\n        var property = element[action.result.data.head.vars[1]]\r\n        var link = {}\r\n        link.source = source.value\r\n        link.target = target.value\r\n        link.property = property.value\r\n        NewState.push(link)\r\n\r\n        NewState.sort(sortBy('source'))\r\n\r\n        NewState = setLinkNum(NewState)\r\n\r\n      });\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_ABOUTSUBJECT_SUCCESS: {\r\n      NewState = []\r\n\r\n      action.result.data.results.bindings.forEach(element => {\r\n\r\n        var link = {}\r\n\r\n        link.source = action.result.config.subject\r\n        link.target = element[action.result.data.head.vars[1]].value\r\n        link.property = element[action.result.data.head.vars[0]].value\r\n\r\n        //check if property comes from the same base URL as the subject\r\n        if (element[action.result.data.head.vars[0]].value.split('/')[2] === action.result.config.subject.split('/')[2]) {\r\n\r\n          // add links to linklist\r\n          //xml lang set --> used to set language of a literal\r\n          if (element[action.result.data.head.vars[1]]['xml:lang'] && (element[action.result.data.head.vars[1]]['xml:lang'] === 'en' || element[action.result.data.head.vars[1]]['xml:lang'] === 'nl')) {\r\n            NewState.push(link)\r\n          }\r\n          //xml lang not set\r\n          if (!element[action.result.data.head.vars[1]]['xml:lang']) {\r\n            NewState.push(link)\r\n          }\r\n        }\r\n\r\n        NewState.sort(sortBy('source'))\r\n\r\n        NewState = setLinkNum(NewState)\r\n\r\n      });\r\n      return NewState\r\n    }\r\n    case FETCH_ABOUT_CLICKED_NODE_SUCCESS: {\r\n      NewState = state\r\n\r\n      action.result.data.results.bindings.forEach(element => {\r\n\r\n        var link = {}\r\n\r\n        link.source = action.result.config.subject\r\n        link.target = element[action.result.data.head.vars[1]].value\r\n        link.property = element[action.result.data.head.vars[0]].value\r\n\r\n        //check if property comes from the same base URL as the subject\r\n        if (element[action.result.data.head.vars[0]].value.split('/')[2] === action.result.config.subject.split('/')[2]) {\r\n\r\n          // add links to linklist\r\n          //xml lang set --> used to set language of a literal\r\n          if (element[action.result.data.head.vars[1]]['xml:lang'] && (element[action.result.data.head.vars[1]]['xml:lang'] === 'en' || element[action.result.data.head.vars[1]]['xml:lang'] === 'nl')) {\r\n            NewState.push(link)\r\n          }\r\n          //xml lang not set\r\n          if (!element[action.result.data.head.vars[1]]['xml:lang']) {\r\n            NewState.push(link)\r\n          }\r\n        }\r\n\r\n        NewState.sort(sortBy('source'))\r\n\r\n        NewState = setLinkNum(NewState)\r\n\r\n      });\r\n      return NewState\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  SET_CURRENT_DATASOURCE, TOGGLE_SEARCHALL, TOGGLE_BLOCK_DATASOURCE, DELETE_DATASOURCE, ADD_DATASOURCE,\r\n  FETCH_CLASSES_SUCCESS, FETCH_INSTANCES_OF_CLASS_SUCCESS,\r\n  SET_SELECTED_CLASS, SET_SELECTED_INSTANCE\r\n} from '../actionTypes';\r\n\r\n\r\nexport default function datasourceReducer(state = {\r\n  searchAll: 'Uit',\r\n  currentDatasource: 'https://lod.onderwijsregistratie.nl/rio/sparql',\r\n  datasources: [\r\n    {\r\n      name: 'Onderwijsregistratie',\r\n      endpoint: 'https://lod.onderwijsregistratie.nl/rio/sparql',\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'dbpedia',\r\n      endpoint: 'http://dbpedia.org/sparql',\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'Basisregistratie adressen en gebouwen (alle voorkomens)',\r\n      endpoint: 'https://bag.basisregistraties.overheid.nl/sparql',\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'Basisregistratie adressen en gebouwen (nu geldige voorkomens)',\r\n      endpoint: 'https://bag.basisregistraties.overheid.nl/sparql/now',\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'Basisregistratie Kadaster - Digitale Kadastrale Kaart',\r\n      endpoint: 'https://brk.basisregistraties.overheid.nl/sparql',\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'Basisregitratie Topografie - Top10NL',\r\n      endpoint: 'https://brt.basisregistraties.overheid.nl/sparql',\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'Cultuurhistorische objecten',\r\n      endpoint: 'https://linkeddata.cultureelerfgoed.nl/sparql',\r\n      active: true,\r\n    },\r\n  ],\r\n  classes: [],\r\n  selectedClass: '',\r\n  instances: [],\r\n  selectedInstance: '',\r\n}, action) {\r\n  let newState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case SET_CURRENT_DATASOURCE: {\r\n      newState.currentDatasource = action.datasource.endpoint;\r\n      return newState;\r\n    }\r\n    case TOGGLE_SEARCHALL: {\r\n      if (state.searchAll === 'Aan') {\r\n        newState.searchAll = 'Uit'\r\n      }\r\n      if (state.searchAll === 'Uit') {\r\n        newState.searchAll = 'Aan'\r\n      }\r\n\r\n      return newState\r\n    }\r\n    case TOGGLE_BLOCK_DATASOURCE: {\r\n      var index = state.datasources.indexOf(action.datasource)\r\n      newState.datasources[index].active = !newState.datasources[index].active\r\n\r\n      return newState\r\n    }\r\n    case DELETE_DATASOURCE: {\r\n      const name = action.datasource.name\r\n      var index = state.datasources.indexOf(action.datasource)\r\n      newState.datasources.splice(index, 1)\r\n      return newState\r\n    }\r\n    case ADD_DATASOURCE: {\r\n      const name = action.name\r\n      const endpoint = action.endpoint\r\n      newState.datasources.push({\r\n        name: name,\r\n        endpoint: endpoint,\r\n        active: true,\r\n      })\r\n      return newState\r\n    }\r\n    case FETCH_CLASSES_SUCCESS: {\r\n      newState.classes = action.result.data.results.bindings\r\n      return newState\r\n    }\r\n    case SET_SELECTED_CLASS: {\r\n      newState.selectedClass = action.myclass\r\n      return newState\r\n    }\r\n    case SET_SELECTED_INSTANCE: {\r\n      newState.selectedInstance = action.instance\r\n      return newState\r\n    }\r\n    case FETCH_INSTANCES_OF_CLASS_SUCCESS: {\r\n      newState.instances = action.result.data.results.bindings\r\n      return newState\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n","import { SET_FORCEGRAPH_SETTINGS } from '../actionTypes'\r\n\r\nexport default function forcegraphSettingsReducer(state = {\r\n  linkDistance: {\r\n    min: 0,\r\n    max: 800,\r\n    value: 400,\r\n  },\r\n  forceCharge: {\r\n    min: -3000,\r\n    max: 0,\r\n    value: -3000,\r\n\r\n  }\r\n},\r\n  action) {\r\n  let NewState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case SET_FORCEGRAPH_SETTINGS: {\r\n\r\n      return action.settings\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","export default function loadingReducer(state = {}, action) {\r\n  if (action.type.endsWith('_REQUEST')) {\r\n    const requestName = action.type.replace('_REQUEST', '')\r\n    const counter = state[requestName] || 0\r\n    return { ...state, [requestName]: counter + 1 }\r\n  }\r\n\r\n  if (action.type.endsWith('_SUCCESS') || action.type.endsWith('_FAILURE')) {\r\n    const requestName = action.type.replace('_SUCCESS', '').replace('_FAILURE', '')\r\n    const counter = state[requestName] || 0\r\n    return { ...state, [requestName]: counter - 1 }\r\n  }\r\n\r\n  return state\r\n}","export default function errorReducer(state = {}, action) {\r\n  if (action.type.endsWith('_FAILURE')) {\r\n    return action.error\r\n  }\r\n  // clear error whensubmitting another request\r\n  if (action.type.endsWith('_REQUEST')) {\r\n    return {}\r\n  }\r\n\r\n  return state\r\n}","// Root Reducer, combines all reducers into one single reducer\r\n\r\nimport { combineReducers } from 'redux'\r\n\r\n\r\n// reducer for updating forcegraph based on meaningfull changes.\r\nimport dataReducer from './data'\r\n\r\n//sparql endpoint data reducers\r\nimport nodesReducer from './nodes'\r\nimport linkesReducer from './links'\r\n\r\n\r\nimport datasourceReducer from './datasource'\r\nimport forcegraphSettingsReducer from './forcegraphSettings'\r\n\r\n//utility reducers\r\nimport loadingReducer from './loading'\r\nimport errorReducer from './error'\r\n\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nconst appReducer = (history) => combineReducers({\r\n  data: dataReducer,\r\n  nodes: nodesReducer,\r\n  links: linkesReducer,\r\n  datasource: datasourceReducer,\r\n  forcegraphsettings: forcegraphSettingsReducer,\r\n  loading: loadingReducer,\r\n  error: errorReducer,\r\n  router: connectRouter(history)\r\n})\r\n\r\nexport default appReducer","// redux\r\nimport { createStore, compose } from 'redux'\r\n\r\n//root reducer\r\nimport appReducer from '../reducers/index'\r\n\r\n//middleware\r\nimport middleware from './middleware'\r\nimport { history } from './middleware'\r\n\r\n//devtools\r\nimport { persistState } from 'redux-devtools'\r\nimport DevTools from '../../containers/DevTools'\r\n\r\n\r\nconst enhancer = compose(\r\n  middleware,\r\n  DevTools.instrument(),\r\n  persistState(getSessionKey())\r\n)\r\n\r\nfunction getSessionKey() {\r\n  const matches = window.location.href.match(/[?&]debug=([^&#])\\b/)\r\n  return (matches && matches.length > 0)\r\n    ? matches[1]\r\n    : null\r\n}\r\n\r\nexport default function configureStore(initialState) {\r\n  return createStore(appReducer(history), initialState, enhancer)\r\n}","import React from 'react'\r\nimport {\r\n  NavLink,\r\n} from 'react-router-dom'\r\n\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\n\r\n//import Logo from '../assets/img/logo.svg'\r\n\r\nclass Navigation extends React.Component {\r\n  render() {\r\n    return (\r\n      <Navbar id=\"main-navigation\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand as={NavLink} activeClassName=\"notactive\" to=\"/\">\r\n            <img\r\n              // src={Logo}\r\n              width=\"100\"\r\n              height=\"100\"\r\n              alt=\"Logo\"\r\n            /><b>React SPARQL Browser</b>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav.Link as={NavLink} exact activeClassName=\"active\" to=\"/\">Home</Nav.Link>\r\n            <Nav.Link as={NavLink} activeClassName=\"active\" to=\"/sparql-react-browser/contact\">Contact</Nav.Link>\r\n            <Nav.Link as={NavLink} activeClassName=\"active\" to=\"/sparql-react-browser/graph/examples\">Graph</Nav.Link>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\n\r\nimport Navigation from './Nav'\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Header\">\r\n        <header>\r\n          <Navigation />\r\n        </header>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer id=\"Footer\">\r\n        <p>© React-SPARQL-Browser {new Date().getYear() + 1900}</p>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass Home extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <Jumbotron>\r\n          <h1>Sparql-React-Browser</h1>\r\n          <p>\r\n            Welkom bij de Sparql-React-Browser. Via deze applicatie kunt u open onderwijsdata opvragen en visualiseren. Met onderstaande zoekmogelijkheid komt u snel bij de data die u zoekt. Data wordt weergegeven in een graph JSON. Het gaat om open informatie.\r\n          </p>\r\n          <p>\r\n            <Button variant=\"primary\" onClick={() => this.props.history.push('/sparql-react-browser/graph/examples')}>Probeer uit!</Button>\r\n          </p>\r\n        </Jumbotron>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Home","export const thunkCreator = (action) => {\r\n  const { types, promise, ...rest } = action\r\n  const [REQUESTED, RESOLVED, REJECTED] = types\r\n\r\n  return (dispatch) => {\r\n    dispatch({ ...rest, type: REQUESTED })\r\n\r\n    return promise\r\n      .then(result => {\r\n        if (result.error || result.errors) throw new Error(result.error)\r\n        dispatch({ ...rest, type: RESOLVED, result })\r\n        return result\r\n      })\r\n      .catch(error => {\r\n        dispatch({ ...rest, type: REJECTED, error })\r\n        //throw error\r\n      })\r\n  }\r\n}","import { SET_CURRENT_DATASOURCE, TOGGLE_SEARCHALL, TOGGLE_BLOCK_DATASOURCE, DELETE_DATASOURCE, ADD_DATASOURCE } from '../actionTypes'\r\nimport { SET_SELECTED_CLASS, SET_SELECTED_INSTANCE } from '../actionTypes'\r\n\r\nimport { FETCH_CLASSES_REQUEST, FETCH_CLASSES_SUCCESS, FETCH_CLASSES_FAILURE } from '../actionTypes'\r\nimport { FETCH_INSTANCES_OF_CLASS_REQUEST, FETCH_INSTANCES_OF_CLASS_SUCCESS, FETCH_INSTANCES_OF_CLASS_FAILURE } from '../actionTypes'\r\nimport { thunkCreator } from './utils'\r\nimport qs from 'qs'\r\nconst axios = require('axios');\r\n\r\nexport const setCurrentDatasource = (datasource) => {\r\n  return {\r\n    type: SET_CURRENT_DATASOURCE,\r\n    datasource\r\n  }\r\n}\r\n\r\nexport const toggleSearchAll = () => {\r\n  return {\r\n    type: TOGGLE_SEARCHALL\r\n  }\r\n}\r\n\r\nexport const toggleBlockDatasource = (datasource) => {\r\n  return {\r\n    type: TOGGLE_BLOCK_DATASOURCE,\r\n    datasource\r\n  }\r\n}\r\n\r\nexport const deleteDatasource = (datasource) => {\r\n  return {\r\n    type: DELETE_DATASOURCE,\r\n    datasource\r\n  }\r\n}\r\n\r\nexport const addDatasource = (name, endpoint) => {\r\n  return {\r\n    type: ADD_DATASOURCE,\r\n    name,\r\n    endpoint,\r\n  }\r\n}\r\n\r\nexport const fetchClasses = (datasource) => thunkCreator({\r\n  types: [FETCH_CLASSES_REQUEST, FETCH_CLASSES_SUCCESS, FETCH_CLASSES_FAILURE],\r\n  promise: axios({\r\n    method: 'post',\r\n    url: datasource,\r\n    data: qs.stringify({\r\n      action: 'exec',\r\n      queryLn: 'SPARQL',\r\n      ref: 'text',\r\n      query: 'SELECT DISTINCT ?type WHERE {?s a ?type.}',\r\n    }),\r\n    headers: {\r\n      Accept: 'application/sparql-results+json'\r\n    },\r\n\r\n  })\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})\r\n\r\nexport const fetchInstances = (datasource, c) => thunkCreator({\r\n  types: [FETCH_INSTANCES_OF_CLASS_REQUEST, FETCH_INSTANCES_OF_CLASS_SUCCESS, FETCH_INSTANCES_OF_CLASS_FAILURE],\r\n  promise: axios({\r\n    method: 'post',\r\n    url: datasource,\r\n    data: qs.stringify({\r\n      action: 'exec',\r\n      queryLn: 'SPARQL',\r\n      ref: 'text',\r\n      query:\r\n        'PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>' +\r\n        'PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>' +\r\n        'SELECT ?subject ?label WHERE {' +\r\n        '?subject rdf:type <' + c.type.value + '>.' +\r\n        '?subject rdfs:label ?label' +\r\n        '}',\r\n    }),\r\n    headers: {\r\n      Accept: 'application/sparql-results+json'\r\n    },\r\n\r\n  })\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})\r\n\r\nexport const setSelectedClass = (myclass) => {\r\n  return {\r\n    type: SET_SELECTED_CLASS,\r\n    myclass\r\n  }\r\n}\r\n\r\nexport const setSelectedInstance = (instance) => {\r\n  return {\r\n    type: SET_SELECTED_INSTANCE,\r\n    instance\r\n  }\r\n}\r\n\r\n\r\n","import { FETCH_TEST_REQUEST, FETCH_TEST_SUCCESS, FETCH_TEST_FAILURE } from '../actionTypes'\r\nimport { FETCH_SPARQL_REQUEST, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_FAILURE } from '../actionTypes'\r\nimport { FETCH_SPARQL_ABOUTSUBJECT_REQUEST, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_FAILURE } from '../actionTypes'\r\nimport { thunkCreator } from './utils'\r\nimport qs from 'qs'\r\n\r\nconst axios = require('axios');\r\n\r\nexport const fetchTest = () => thunkCreator({\r\n  types: [FETCH_TEST_REQUEST, FETCH_TEST_SUCCESS, FETCH_TEST_FAILURE],\r\n  promise: fetch(`https://www.anapioficeandfire.com/api/books`)\r\n    .then(response => response.json())\r\n    .catch(error => { console.log(error) })\r\n\r\n})\r\n\r\nexport const fetchSparql = (query, datasource) => thunkCreator({\r\n  types: [FETCH_SPARQL_REQUEST, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_FAILURE],\r\n  promise: axios({\r\n    method: 'post',\r\n    url: datasource,\r\n    data: qs.stringify({\r\n      action: 'exec',\r\n      queryLn: 'SPARQL',\r\n      ref: 'text',\r\n      query,\r\n    }),\r\n    headers: {\r\n      Accept: 'application/sparql-results+json'\r\n    },\r\n\r\n  })\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})\r\n\r\nexport const fetchAboutSubject = (query, datasource) => thunkCreator({\r\n  types: [FETCH_SPARQL_ABOUTSUBJECT_REQUEST, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_FAILURE],\r\n  promise: axios({\r\n    method: 'post',\r\n    url: datasource,\r\n    data: qs.stringify({\r\n      action: 'exec',\r\n      queryLn: 'SPARQL',\r\n      ref: 'text',\r\n      query,\r\n    }),\r\n    headers: {\r\n      Accept: 'application/sparql-results+json'\r\n    },\r\n    subject: query.substring(query.lastIndexOf(\"<\") + 1, query.lastIndexOf(\">\")) // get the subject from the querystring\r\n\r\n  })\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})","import { SET_SELECTED_NODE, REMOVE_SELECTED_NODE } from '../actionTypes'\r\n\r\nimport { FETCH_ABOUT_CLICKED_NODE_REQUEST, FETCH_ABOUT_CLICKED_NODE_SUCCESS, FETCH_ABOUT_CLICKED_NODE_FAILURE } from '../actionTypes'\r\n\r\nimport { thunkCreator } from './utils'\r\nimport qs from 'qs'\r\n\r\nconst axios = require('axios');\r\n\r\nexport const setSelectedNode = (node) => {\r\n  return {\r\n    type: SET_SELECTED_NODE,\r\n    node\r\n  }\r\n}\r\n\r\nexport const removeSelectedNode = (node) => {\r\n  return {\r\n    type: REMOVE_SELECTED_NODE,\r\n  }\r\n}\r\n\r\nexport const fetchAboutClickedNode = (subject, datasource) => thunkCreator({\r\n  types: [FETCH_ABOUT_CLICKED_NODE_REQUEST, FETCH_ABOUT_CLICKED_NODE_SUCCESS, FETCH_ABOUT_CLICKED_NODE_FAILURE],\r\n  promise: axios({\r\n    method: 'post',\r\n    url: datasource.currentDatasource,\r\n    data: qs.stringify({\r\n      action: 'exec',\r\n      queryLn: 'SPARQL',\r\n      ref: 'text',\r\n      query: 'SELECT * ' + 'WHERE { <' + subject + '> ?property ?object }' + 'limit 200'\r\n    }),\r\n    headers: {\r\n      Accept: 'application/sparql-results+json'\r\n    },\r\n    subject: subject\r\n\r\n  })\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})","import { SET_FORCEGRAPH_SETTINGS } from '../actionTypes'\r\n\r\nexport const setForcegraphSettings = (settings) => {\r\n  return {\r\n    type: SET_FORCEGRAPH_SETTINGS,\r\n    settings\r\n  }\r\n}","import * as d3 from 'd3'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Marker extends React.Component {\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  render() {\r\n\r\n    const renderTooltip = () => {\r\n      if(this.props.nodes.selectedNode){\r\n\r\n        function selectedNode(node) { \r\n          return node.selected === true;\r\n        }\r\n\r\n        var sn = this.props.nodes.nodesList.find(selectedNode)\r\n        console.log(sn)\r\n\r\n        \r\n        return (\r\n          <foreignObject x={this.props.nodes.selectedNode.x} y={this.props.nodes.selectedNode.y} width=\"60\" height=\"40\">\r\n          <div>\r\n            <title>hallo</title>\r\n            <p>selected node</p>\r\n          \r\n          </div>\r\n        </foreignObject>\r\n        )\r\n      } else {\r\n        return(\r\n          <foreignObject x=\"0\" y=\"0\" width=\"60\" height=\"40\">\r\n          <div><p>no selected node</p>          \r\n          </div>\r\n        </foreignObject>\r\n        )\r\n      }\r\n    }\r\n        return (\r\n          <>\r\n          {renderTooltip()}\r\n          </>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Marker\r\n\r\n  \r\n\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Tooltip from '../components/Tooltip'\r\n\r\nimport { fetchClasses, fetchInstances, setSelectedClass, setSelectedInstance, fetchAboutSubject } from '../redux/actions/index'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    nodes: state.nodes,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props, state) =>\r\n  bindActionCreators({\r\n    }, dispatch)\r\n\r\nconst ConnectedTooltip = connect(mapStateToProps, mapDispatchToProps)(Tooltip)\r\n\r\nexport default ConnectedTooltip","import * as d3 from 'd3'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { setSelectedNode, removeSelectedNode, fetchAboutClickedNode } from '../redux/actions/index'\r\n\r\nimport ConnectedTooltip from '../containers/ConnectedTooltip'\r\n\r\nclass Node extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    // dragging\r\n    this.drag = (simulation) => {\r\n      const dragstarted = (d) => {\r\n        d3.select(\"#forcegraph\").selectAll(\".tooltip\").remove()\r\n        this.props.rs()\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      };\r\n\r\n      const dragged = (d) => {\r\n        d.fx = d3.event.x;\r\n        d.fy = d3.event.y;\r\n      };\r\n\r\n      const dragended = (d) => {\r\n        //if (!d3.event.active) simulation.alphaTarget(0);\r\n        d.fx = null;\r\n        d.fy = null;\r\n      };\r\n\r\n      return d3\r\n        .drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended)\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.d3Node = d3.select(ReactDOM.findDOMNode(this))\r\n      .datum(this.props.data)\r\n      .call(this.enterNode);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.d3Node.datum(this.props.data)\r\n      .call(this.enterNode);\r\n  }\r\n\r\n  enterNode = (selection) => {\r\n    selection.select(\"ellipse\")\r\n      .on('click', (d) => {\r\n        console.log('igotclicked')\r\n        this.props.ssn(d)\r\n        //this.props.rsn()\r\n        if (d.type === 'uri') {\r\n          this.props.facn(d.id, this.props.datasource)\r\n        }\r\n        \r\n      })\r\n      .on(\"mouseover\", function (d) {\r\n        console.log('mouseover')\r\n      })\r\n      .on(\"mouseout\", function (d) {\r\n        console.log('mouseout')\r\n      })\r\n      .on(\"mousedown\", function (d) {\r\n        console.log('mousedown')\r\n      })\r\n      .on(\"mouseup\", function (d) {\r\n        console.log('mouseup')\r\n      })\r\n      .attr(\"rx\", function (d) { return 30 }) //d.id.length\r\n      .attr(\"ry\", function (d) { return 30 }) //d.id.length\r\n      .attr(\"transform\", (d) => \"translate(\" + d.x + \",\" + d.y + \")\")\r\n      .attr(\"class\", \"ellipse\")\r\n      .classed('uri', function (d) { return d.type === 'uri' })\r\n      .classed('literal', function (d) { return d.type === 'literal' || d.type === 'typed-literal' })\r\n      .call(this.drag(this.simulation))\r\n\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <g>\r\n        <ellipse className='ellipse' />\r\n        <ConnectedTooltip />\r\n      </g>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Node\r\n\r\n// {\r\n//   <svg width='1110' height='800'>\r\n//   {this.props.nodes.nodesList.map((node, index) => <Node data={node} key={index} datasource={this.props.datasource} rs={this.rs} ssn={this.ssn} rsn={this.rsn} facn={this.facn}></Node>)}\r\n//   {this.props.links.map((link, index) => <Link data={link} key={index}></Link>)}\r\n\r\n// </svg>}","import * as d3 from 'd3'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass NodeLabel extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    // dragging\r\n    this.drag = (simulation) => {\r\n      const dragstarted = (d) => {\r\n        d3.select(\"#forcegraph\").selectAll(\".tooltip\").remove()\r\n        this.props.rs()\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      };\r\n\r\n      const dragged = (d) => {\r\n        d.fx = d3.event.x;\r\n        d.fy = d3.event.y;\r\n      };\r\n\r\n      const dragended = (d) => {\r\n        //if (!d3.event.active) simulation.alphaTarget(0);\r\n        d.fx = null;\r\n        d.fy = null;\r\n      };\r\n\r\n      return d3\r\n        .drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended)\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.d3Node = d3.select(ReactDOM.findDOMNode(this))\r\n      .datum(this.props.data)\r\n      .call(this.enterNodeLabel);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.d3Node.datum(this.props.data)\r\n      .call(this.enterNodeLabel);\r\n  }\r\n\r\n  enterNodeLabel = (selection) => {\r\n    selection.select('text')\r\n      .on('click', function (d) {\r\n      })\r\n      .on(\"mouseover\", function (d) {\r\n        console.log('mouseover')\r\n      })\r\n      .on(\"mouseout\", function (d) {\r\n        console.log('mouseout')\r\n      })\r\n      .on(\"mousedown\", function (d) {\r\n        console.log('mousedown')\r\n      })\r\n      .on(\"mouseup\", function (d) {\r\n        console.log('mouseup')\r\n      })\r\n      .text(function (d) {\r\n        if (d.type === 'uri') {\r\n          var nodeURL = d.id.split('/')\r\n          nodeURL.splice(0, 3)\r\n          nodeURL = nodeURL.join('/')\r\n          console.log('nodeURL: ' + nodeURL)\r\n          return nodeURL;\r\n        }\r\n        return d.id;\r\n      })\r\n      .merge(selection)\r\n      .attr(\"transform\", function (d) {\r\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n      });\r\n    // 2nd way of doing it\r\n    // .attr('x', function (d) { return d.x })\r\n    // .attr('y', function (d) { return d.y })\r\n    // .attr('dy', function (d) { return 5 })\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <g>\r\n        <text/>\r\n      </g>\r\n    );\r\n  }\r\n};\r\n\r\nexport default NodeLabel\r\n\r\n// {\r\n//   <svg width='1110' height='800'>\r\n//   {this.props.nodes.nodesList.map((node, index) => <Node data={node} key={index} datasource={this.props.datasource} rs={this.rs} ssn={this.ssn} rsn={this.rsn} facn={this.facn}></Node>)}\r\n//   {this.props.links.map((link, index) => <Link data={link} key={index}></Link>)}\r\n\r\n// </svg>}","import * as d3 from 'd3'\r\nimport React from 'react'\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Link extends React.Component {\r\n  componentDidMount() {\r\n    this.d3Link = d3.select(ReactDOM.findDOMNode(this))\r\n      .datum(this.props.data)\r\n      .call(this.enterLink);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.d3Link.datum(this.props.data)\r\n      .call(this.enterLink);\r\n  }\r\n\r\n  enterLink = (selection) => {\r\n    selection\r\n    .attr(\"class\", function (d) { return \"link\" })\r\n      .attr(\"class\", function (d) { return \"link \" + d.property; })\r\n      .attr(\"id\", function (d, i) { return \"linkId_\" + i; })\r\n      .attr(\"marker-end\", function (d) { return \"url(#black-arrow)\"; }) //removed to allow matching\r\n      .merge(selection)\r\n      .attr(\"d\", function (d) {\r\n        var dx = d.target.x - d.source.x\r\n        var dy = d.target.y - d.source.y\r\n        if (d.linknum) {\r\n          var dr = d.linknum * 150 - 150;\r\n        }\r\n        else {\r\n          var dr = 0\r\n        }\r\n\r\n        return \"M\" + d.source.x + \",\" + d.source.y + \"A\" + dr + \",\" + dr + \" 0 0,1 \" + d.target.x + \",\" + d.target.y;\r\n      })\r\n  };\r\n\r\n  render() {\r\n    return (<path className='link' marker-end=\"url(#black-arrow)\"/>);\r\n  }\r\n}\r\n\r\nexport default Link\r\n\r\n","import * as d3 from 'd3'\r\nimport React from 'react'\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass LinkLabel extends React.Component {\r\n  componentDidMount() {\r\n    this.d3Link = d3.select(ReactDOM.findDOMNode(this))\r\n      .datum(this.props.data)\r\n      .call(this.enterLinkLabel);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.d3Link.datum(this.props.data)\r\n      .call(this.enterLinkLabel);\r\n  }\r\n\r\n  getAllLinkPropertys() {\r\n    var linkpropertys = []\r\n    this.props.linksList.forEach(element => {\r\n      linkpropertys.push(element.property.replace(/\\s/g, ''))\r\n    });\r\n    return linkpropertys\r\n  }\r\n\r\n  enterLinkLabel = (selection) => {\r\n    selection\r\n      .on('click', function (d) {\r\n        //window.location.href = d.id // opens in the same page\r\n        window.open(d.id)           // opens in a new page\r\n      })\r\n      .text(function (d) {\r\n        var text = d.property.split('/')\r\n        text.splice(0, 3)\r\n        text = text.join('/')\r\n        return text;\r\n      })\r\n      .attr(\"transform\", function (d) {\r\n        return \"translate(\" + ((d.source.x + d.target.x) / 2) + \",\" + ((d.source.y + d.target.y) / 2 ) + \")\";\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (<text/>);\r\n  }\r\n}\r\n\r\nexport default LinkLabel\r\n\r\n","import * as d3 from 'd3'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Marker extends React.Component {\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  render() {\r\n        return (\r\n        <defs>\r\n      <marker id=\"red-chevron\"\r\n      viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" orient=\"auto\" >\r\n         <path d=\"M 0 0 L 10 5 L 0 10\" fill=\"none\" stroke=\"red\" />\r\n      </marker>\r\n\r\n      <marker id=\"black-arrow\"\r\n      viewBox=\"0 0 10 10\" refX=\"40\" refY=\"5\" orient=\"auto\" markerWidth=\"6\" markerHeight=\"6\">\r\n         <path d=\"M 0 0 L 10 5 L 0 10 z\" />\r\n      </marker>\r\n\r\n      <marker id=\"red-circle\"\r\n      viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" orient=\"auto\" >\r\n         <circle fill=\"red\" cx=\"5\" cy=\"5\" r=\"5\" />\r\n      </marker>\r\n  </defs>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Marker\r\n\r\n  \r\n\r\n","import React from 'react'\r\nimport { Container, Row, Col, Form } from 'react-bootstrap'\r\n\r\nclass Slider extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      linkDistance: {\r\n        min: 0,\r\n        max: 800,\r\n        value: 400,\r\n      },\r\n      forceCharge: {\r\n        min: 0,\r\n        max: 3000,\r\n        value: 3000,\r\n\r\n      }\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.submit = this.applySettings.bind(this)\r\n  }\r\n\r\n  handleChange(event) {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    let min = event.target.min\r\n    let max = event.target.max\r\n    console.log(event)\r\n    this.setState({\r\n      [name]: { min: min, max: max, value: value }\r\n    }, () => {\r\n      this.applySettings();\r\n    });\r\n  }\r\n\r\n  applySettings() {\r\n    this.props.setForcegraphSettings(this.state)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"slidecontainer\">\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>Link distance: {this.state.linkDistance.value}</Form.Label>\r\n            <Form.Control type=\"range\" name='linkDistance' min={this.state.linkDistance.min} max={this.state.linkDistance.max} value={this.state.linkDistance.value} class=\"slider\" id=\"linkDistance\" onChange={this.handleChange} ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>attraction: {this.state.forceCharge.value}</Form.Label>\r\n            <Form.Control type=\"range\" name='forceCharge' min={this.state.forceCharge.min} max={this.state.forceCharge.max} value={this.state.forceCharge.value} class=\"slider\" id=\"forceCharge\" onChange={this.handleChange} ></Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Slider","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ForcegraphSettings from '../components/forcegraphSettings'\r\n\r\nimport { setForcegraphSettings } from '../redux/actions/forcegraphSettings'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    settings: state.forcegraphsettings\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({\r\n    setForcegraphSettings,\r\n  }, dispatch)\r\n\r\nconst ConnectedSlider = connect(mapStateToProps, mapDispatchToProps)(ForcegraphSettings)\r\n\r\nexport default ConnectedSlider","import React from 'react'\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\nimport useState from 'react'\r\nimport { addDatasource } from '../redux/actions/datasource';\r\n\r\nclass AddDatasource extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = ({\r\n      show: false,\r\n      name: '',\r\n      endpoint: '',\r\n\r\n    })\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this)\r\n    this.handleEndpointChange = this.handleEndpointChange.bind(this)\r\n  }\r\n  handleModal() {\r\n    this.setState({\r\n      show: !this.state.show,\r\n      name: '',\r\n      endpoint: '',\r\n    })\r\n  }\r\n\r\n  handleNameChange(event) {\r\n    console.log(event.target.value)\r\n    this.setState({ name: event.target.value });\r\n  }\r\n\r\n  handleEndpointChange(event) {\r\n    console.log(event.target.value)\r\n    this.setState({ endpoint: event.target.value });\r\n  }\r\n\r\n  handleSubmitDatasource() {\r\n    console.log('submit datasource')\r\n\r\n    this.props.addDatasource(this.state.name, this.state.endpoint)\r\n\r\n    this.setState({\r\n      show: !this.state.show\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={() => { this.handleModal() }}>\r\n          Databron Toevoegen\r\n      </Button>\r\n\r\n        <Modal\r\n          show={this.state.show}\r\n          onHide={() => this.handleModal()}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Databron Toevoegen: </Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n\r\n            <Form onSubmit={() => this.handleSubmitDatasource()}>\r\n\r\n              <Form.Group controlId=\"formName\">\r\n                <Form.Label>Naam:</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Naam\" onChange={this.handleNameChange} />\r\n\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formEndpoint\">\r\n                <Form.Label>Endpoint:</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Endpoint\" onChange={this.handleEndpointChange} />\r\n              </Form.Group>\r\n            </Form>\r\n\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => { this.handleModal() }}>Sluiten</Button>\r\n            <Button variant=\"primary\" onClick={() => { this.handleSubmitDatasource() }}>Opslaan</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default AddDatasource\r\n\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport AddDatasource from '../components/AddDataSource'\r\n\r\nimport { addDatasource } from '../redux/actions/datasource'\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({\r\n    addDatasource,\r\n  }, dispatch)\r\n\r\nconst ConnectedAddDatasource = connect(mapStateToProps, mapDispatchToProps)(AddDatasource)\r\n\r\nexport default ConnectedAddDatasource","import React from 'react';\r\nimport { ButtonGroup, Button, Dropdown, Row, Col } from 'react-bootstrap'\r\n\r\nimport ConnectedAddDatasource from '../containers/ConnectedAddDatasource'\r\n\r\nclass DataSourceDropdown extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n  render() {\r\n    const renderBlockButton = (item) => {\r\n      if (item.active) {\r\n        return (\r\n          <Button onClick={() => this.props.toggleBlockDatasource(item)}>Block </Button>\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n          <Button onClick={() => this.props.toggleBlockDatasource(item)}>Unblock </Button>\r\n        )\r\n      }\r\n    }\r\n\r\n    const renderDatasourceDropdown = () => {\r\n      if (this.props.datasource.searchAll === 'Uit') {\r\n        return (\r\n          <Dropdown className=\"w-100\">\r\n            <Dropdown.Toggle >Geselecteerde bron: {this.props.datasource.currentDatasource}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              {this.props.datasource.datasources.map((item, key) =>\r\n                <Dropdown.Item key={key} >\r\n                  <Row>\r\n                    <Col>\r\n                      <div onClick={() => this.props.setCurrentDatasource(item)}>{item.name}</div>\r\n                    </Col>\r\n                    <Col>\r\n                      <ButtonGroup className=\"float-right\">\r\n\r\n                        {renderBlockButton(item)}\r\n                        <Button onClick={() => this.props.deleteDatasource(item)}>Remove</Button>\r\n                      </ButtonGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </Dropdown.Item>\r\n              )}\r\n              {<ConnectedAddDatasource />}\r\n            </Dropdown.Menu>\r\n          </Dropdown>)\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div id=\"Datasource\">\r\n        <Row>\r\n          <Col sm={4}>\r\n            <Button className=\"w-100\" onClick={() => this.props.toggleSearchAll()}>Doorzoek alle bronnen: {this.props.datasource.searchAll}</Button>\r\n          </Col>\r\n          <Col sm={8}>\r\n            {renderDatasourceDropdown()}\r\n          </Col>\r\n        </Row>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DataSourceDropdown\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport DataSource from '../components/DataSource'\r\nimport { setCurrentDatasource, toggleSearchAll, toggleBlockDatasource, deleteDatasource } from '../redux/actions/index';\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    datasource: state.datasource\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({\r\n    setCurrentDatasource,\r\n    toggleSearchAll,\r\n    toggleBlockDatasource,\r\n    deleteDatasource,\r\n  }, dispatch)\r\n\r\nconst ConnectedDataSource = connect(mapStateToProps, mapDispatchToProps)(DataSource)\r\n\r\nexport default ConnectedDataSource","import React from 'react'\r\nimport styles from './ScrollBox.module.scss';\r\n\r\nclass ScrollBox extends React.Component {\r\n  render() {\r\n    return <div className={styles.scrollbox}>\r\n      {this.props.children}\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default ScrollBox","import React from 'react'\r\n\r\nimport ScrollBox from './ScrollBox'\r\nimport styles from './Search.module.scss';\r\n\r\nimport { Button, Form, ListGroup } from 'react-bootstrap'\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      class: '',\r\n      instance: ''\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('comp mounted')\r\n    this.props.fetchClasses(this.props.datasource.currentDatasource)\r\n  }\r\n\r\n  componentDidUpdate(prevprops) {\r\n    if (this.props.datasource.currentDatasource !== prevprops.datasource.currentDatasource) { // check if any data has changed and restart the simulation if so currently based on id in linkreducer\r\n      console.log('datasource has been updated, fetching new classes list')\r\n      this.props.fetchClasses(this.props.datasource.currentDatasource)\r\n    }\r\n    if (this.props.datasource.selectedClass !== prevprops.datasource.selectedClass) {\r\n      console.log('the selected class has changed, fetching new instances list')\r\n      this.props.fetchInstances(this.props.datasource.currentDatasource, this.props.datasource.selectedClass)\r\n    }\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    }, (event) => {\r\n      console.log(this.state)\r\n    })\r\n  }\r\n\r\n  filterClassHelper(c) {\r\n    if (c.type.value.toLowerCase().includes(this.state.class.toLowerCase()) && this.state.class !== '') {\r\n      return true\r\n    }\r\n    else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  filterInstanceHelper(instance) {\r\n    if ((instance.subject.value.toLowerCase().includes(this.state.instance.toLowerCase()) || instance.label.value.toLowerCase().includes(this.state.instance.toLowerCase())) && this.state.instance !== '') {\r\n      return true\r\n    }\r\n    else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  setSelectedClass() {\r\n    console.log('i got clicked')\r\n  }\r\n\r\n  fetchAboutSubject() {\r\n    this.props.fetchAboutSubject('SELECT * ' +\r\n                'WHERE { <' + this.props.datasource.selectedInstance.subject.value  + '> ?property ?object }' +\r\n                'limit 200', this.props.datasource.currentDatasource)\r\n  }\r\n\r\n  render() {\r\n    console.log('rendering')\r\n\r\n    return (\r\n      <div className={styles.SearchForm}>\r\n      <Form>\r\n        <Form.Label>Zoek Classe:</Form.Label>\r\n        <Form.Control as=\"input\" type=\"text\" placeholder=\"zoek classen\" name=\"class\" onChange={this.handleChange}></Form.Control>\r\n        <div id='classSelector'>\r\n          <ScrollBox>\r\n            <ListGroup as=\"ul\">\r\n              {this.props.datasource.classes.filter((c) => { return this.filterClassHelper(c) }).map((c, index) => {\r\n                if (this.props.datasource.selectedClass === c) {\r\n                  return (<ListGroup.Item as=\"li\" className={styles.active} key={index} onClick={() => this.props.setSelectedClass(c)}>\r\n                    {c.type.value}\r\n                  </ListGroup.Item>)\r\n                }\r\n                else {\r\n                  return (<ListGroup.Item as=\"li\" key={index} onClick={() => this.props.setSelectedClass(c)}>\r\n                    {c.type.value}\r\n                  </ListGroup.Item>)\r\n                }\r\n              }\r\n              )}\r\n            </ListGroup>\r\n          </ScrollBox>\r\n        </div>\r\n\r\n        <Form.Label>zoek Instance:</Form.Label>\r\n        <Form.Control as=\"input\" type=\"text\" placeholder=\"zoek instance\" name=\"instance\" onChange={this.handleChange}></Form.Control>\r\n        <div id='instanceSelector'>\r\n          <ScrollBox>\r\n            <ListGroup as=\"ul\">\r\n              {this.props.datasource.instances.filter((instance) => { return this.filterInstanceHelper(instance) }).map((instance, index) => {\r\n                if (this.props.datasource.selectedInstance === instance) {\r\n                  return (<ListGroup.Item as=\"li\" className={styles.active} key={index} onClick={() => this.props.setSelectedInstance(instance)}>\r\n                    {instance.subject.value}, {instance.label.value}\r\n                  </ListGroup.Item>)\r\n                }\r\n                else {\r\n                  return (<ListGroup.Item as=\"li\" key={index} onClick={() => {\r\n                    this.props.setSelectedInstance(instance)\r\n                    //clear nodes \r\n                    //clear links\r\n                    // fetch data\r\n                  }\r\n                  }>\r\n                    {instance.subject.value}, {instance.label.value}\r\n                  </ListGroup.Item>)\r\n                }\r\n              }\r\n              )}\r\n            </ListGroup>\r\n          </ScrollBox>\r\n        </div>\r\n        <Button onClick={() => this.props.fetchAboutSubject('SELECT * ' +\r\n                'WHERE { <' + this.props.datasource.selectedInstance.subject.value  + '> ?property ?object }' +\r\n                'limit 200', this.props.datasource.currentDatasource)}>laad instance</Button>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Search from '../components/Search'\r\n\r\nimport { fetchClasses, fetchInstances, setSelectedClass, setSelectedInstance, fetchAboutSubject } from '../redux/actions/index'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    nodes: state.nodes,\r\n    datasource: state.datasource,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props, state) =>\r\n  bindActionCreators({\r\n    fetchClasses,\r\n    fetchInstances,\r\n    setSelectedClass,\r\n    setSelectedInstance,\r\n    fetchAboutSubject,\r\n  }, dispatch)\r\n\r\nconst ConnectedSearch = connect(mapStateToProps, mapDispatchToProps)(Search)\r\n\r\nexport default ConnectedSearch","import * as d3 from 'd3'\r\nimport React from 'react'\r\n\r\nimport Node from './Node'\r\nimport NodeLabel from './NodeLabel'\r\nimport Link from './Link'\r\nimport LinkLabel from './LinkLabel'\r\nimport Marker from './Marker'\r\n\r\nimport ConnectedTooltip from '../containers/ConnectedTooltip'\r\n\r\n\r\nimport { Row, Col, } from 'react-bootstrap'\r\n\r\nimport ConnectedForcegraphSettings from '../containers/ConnectedForcegraphSettings'\r\nimport ConnectedDataSource from '../containers/ConnectedDataSource'\r\nimport ConnectedSearch from  '../containers/ConnectedSearch'\r\n\r\nimport D3NodeGenerator from './D3NodeGenerator'\r\nimport D3LinkGenerator from './D3LinkGenerator'\r\n\r\nclass ForceGraph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nodes: props.nodes,\r\n      links: props.links\r\n    };\r\n\r\n    this.rs = this.restartSimulation.bind(this)\r\n    this.ssn = this.props.setSelectedNode.bind(this)\r\n    this.rsn = this.props.removeSelectedNode.bind(this)\r\n    this.facn = this.props.fetchAboutClickedNode.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('componentDidMount')\r\n    var element = document.getElementById('forcegraph');\r\n\r\n    // Redraw based on the new size whenever the browser window is resized.\r\n    window.addEventListener(\"resize\", () => {\r\n      this.initializeSVG(element.offsetWidth, element.offsetHeight)\r\n      this.restartSimulation()\r\n    });\r\n\r\n    //initial forcegraph\r\n    this.initializeSVG(element.offsetWidth, element.offsetHeight)\r\n\r\n    //initial forces\r\n    this.forceLink = d3.forceLink()\r\n      .links(this.props.links)\r\n      .distance(this.props.settings.linkDistance.value).id(function (d) { return d.id; })\r\n    this.forceCenter = d3.forceCenter((element.offsetWidth * 1) / 2, (element.offsetHeight * 1) / 2)\r\n    this.forceCharge = d3.forceManyBody()\r\n      .strength(this.props.settings.forceCharge.value) //defaul -30\r\n\r\n    //simulation --> simulation gets updated upon interaction\r\n    this.simulation = d3.forceSimulation(this.props.nodes.nodesList)\r\n      .force('center', this.forceCenter)\r\n      .force('charge', this.forceCharge)\r\n      .force('link', this.forceLink)\r\n\r\n    this.simulation.on('tick', () => {\r\n      console.log('tick')\r\n      this.setState({\r\n        //call this.setstate to rerender with react.\r\n      })\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevprops) {\r\n    if (this.props.data.id !== prevprops.data.id) { // check if any data has changed and restart the simulation with new nodes and links\r\n      \r\n      this.simulation.nodes(this.props.nodes.nodesList) // load new nodes\r\n      this.simulation.force('link').links(this.props.links) // load new links\r\n      this.restartSimulation()\r\n    }\r\n\r\n    if (this.props.settings !== prevprops.settings) { // check if settings have changed\r\n      \r\n      //apply new linkDistance\r\n      this.simulation.force(\"link\")\r\n        .distance(this.props.settings.linkDistance.value)\r\n\r\n      this.restartSimulation()\r\n    }\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.simulation.stop();\r\n  }\r\n\r\n  initializeSVG(width, height) {\r\n    var zoom = d3.zoom()\r\n      .scaleExtent([.5, 10])\r\n      .on(\"zoom\", zoomed);\r\n\r\n    var svg = d3.select(\"#forcegraph\").select(\"svg\")\r\n      .attr(\"class\", \"forcegraph\")\r\n      .style(\"width\", width * 1)   // set size of svg in relation to parent\r\n      .style(\"height\", height * 1) // set size of svg in relation to parent\r\n      .style(\"border\", \"1px solid black\")\r\n      .call(zoom).select(\"g\").attr(\"transform\", \"\")\r\n    \r\n    function zoomed() {\r\n      const currentTransform = d3.event.transform;\r\n      svg.attr(\"transform\", currentTransform);\r\n      //slider.property(\"value\", currentTransform.k);\r\n    }\r\n\r\n    // function slided(d) {\r\n    //   zoom.scaleTo(svg, d3.select(this).property(\"value\"));\r\n    // }\r\n\r\n    // var slider = d3.select(\"#forcegraph\").append(\"p\").append(\"input\")\r\n    //   .datum({})\r\n    //   .attr(\"type\", \"range\")\r\n    //   .attr(\"value\", zoom.scaleExtent()[0])\r\n    //   .attr(\"min\", zoom.scaleExtent()[0])\r\n    //   .attr(\"max\", zoom.scaleExtent()[1])\r\n    //   .attr(\"step\", (zoom.scaleExtent()[1] - zoom.scaleExtent()[0]) / 100)\r\n    //   .on(\"input\", slided);\r\n  }\r\n\r\n\r\n  restartSimulation() {\r\n    this.simulation.alpha(1).restart()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col sm={2}>\r\n          </Col>\r\n          <Col>\r\n            <ConnectedDataSource />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={2}>\r\n            <ConnectedForcegraphSettings />\r\n            <ConnectedSearch></ConnectedSearch>\r\n          </Col>\r\n          <Col>\r\n            <div id=\"forcegraph\">\r\n              <svg>\r\n                  <g class=\"zoom\"> \r\n                      <g class=\"links\">\r\n                        {this.props.links.map((link, index) => <Link data={link} key={index}></Link>)}\r\n                      </g>\r\n                      <g class=\"nodesellipse\">\r\n                        {this.props.nodes.nodesList.map((node, index) => <Node data={node} key={index} datasource={this.props.datasource} rs={this.rs} ssn={this.ssn} rsn={this.rsn} facn={this.facn}></Node>)}\r\n                      </g>\r\n                      <g class=\"nodestext\">\r\n                        {this.props.nodes.nodesList.map((node, index) => <NodeLabel data={node} key={index} datasource={this.props.datasource} rs={this.rs} ssn={this.ssn} rsn={this.rsn} facn={this.facn}></NodeLabel>)}\r\n                      </g>\r\n                      <g class=\"linkstext\">\r\n                        {this.props.links.map((link, index) => <LinkLabel data={link} key={index} forcegraphSettings={this.props.settings}></LinkLabel>)}\r\n                      </g>\r\n                      <g class=\"defs\">\r\n                        <Marker linksList={this.props.links}/>\r\n                      </g>\r\n                      <g class=\"tt\">\r\n                        <ConnectedTooltip/>\r\n                      </g>\r\n                      \r\n                  </g>\r\n              </svg>\r\n              \r\n            </div >\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForceGraph\r\n\r\n{/* <D3NodeGenerator nodesList={this.props.nodes.nodesList} datasource={this.props.datasource} rs={this.rs} ssn={this.ssn} rsn={this.rsn} facn={this.facn}></D3NodeGenerator>\r\n              <D3LinkGenerator linksList={this.props.links} forcegraphSettings={this.props.settings} action={this.rs} ssn={this.ssn}></D3LinkGenerator> */}","import * as d3 from 'd3'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nclass D3NodeGenerator extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    // dragging\r\n    this.drag = (simulation) => {\r\n      const dragstarted = (d) => {\r\n        d3.select(\"#forcegraph\").selectAll(\".tooltip\").remove()\r\n        this.props.rs()\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      };\r\n\r\n      const dragged = (d) => {\r\n        d.fx = d3.event.x;\r\n        d.fy = d3.event.y;\r\n      };\r\n\r\n      const dragended = (d) => {\r\n        //if (!d3.event.active) simulation.alphaTarget(0);\r\n        d.fx = null;\r\n        d.fy = null;\r\n      };\r\n\r\n      return d3\r\n        .drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended)\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  renderNodeEllipse() {\r\n    var selection = d3.select('.nodesellipse')\r\n      .selectAll('ellipse')\r\n      .data(this.props.nodesList)             //bind data\r\n      .call(this.drag(this.simulation));            //allow dragging  \r\n\r\n    selection.enter()                     //for each row in the data do...\r\n      .append('ellipse')\r\n      .on('click', (d) => {\r\n        this.props.ssn(d.id)\r\n        this.props.rsn()\r\n        if (d.type === 'uri') {\r\n          this.props.facn(d.id, this.props.datasource)\r\n        }\r\n      })\r\n      .on(\"mouseover\", function (d) {\r\n        console.log('mouseover')\r\n        console.log(d)\r\n        console.log(this)\r\n\r\n      })\r\n      .on(\"mouseout\", function (d) {\r\n        console.log('mouseout')\r\n      })\r\n      .on(\"mousedown\", function (d) {\r\n        console.log('mousedown')\r\n      })\r\n      .on(\"mouseup\", function (d) {\r\n        console.log('mouseup')\r\n      })\r\n      .attr(\"rx\", function (d) { return 30 }) //d.id.length\r\n      .attr(\"ry\", function (d) { return 30 }) //d.id.length\r\n      .attr(\"class\", \"ellipse\")\r\n      .classed('uri', function (d) { return d.type === 'uri' })\r\n      .classed('literal', function (d) { return d.type === 'literal' || d.type === 'typed-literal' })\r\n      //.style(\"fill\", \"#FD8D3C\")\r\n      .merge(selection)\r\n      .attr(\"transform\", function (d) {\r\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n      })\r\n\r\n    selection.exit().remove()\r\n  }\r\n\r\n  renderNodeText() {\r\n    var selection = d3.select('.nodestext')\r\n      .selectAll('text')\r\n      .data(this.props.nodesList)                        //bind data\r\n      .call(this.drag(this.simulation));            //allow dragging  \r\n\r\n    selection.enter()                     //for each row in the data do...\r\n      .append('text')\r\n\r\n      .on('click', function (d) {\r\n        var div = d3.select(\"#forcegraph\")\r\n          .append(\"div\")\r\n          .attr(\"class\", \"tooltip dropdown\")\r\n          .style(\"opacity\", 0)\r\n          .style(\"left\", (d3.event.pageX + 28) + \"px\")\r\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n\r\n        var button = d3.select(\"#forcegraph\").selectAll(\".tooltip\")\r\n          .append(\"button\")\r\n          .attr(\"class\", \"btn btn-secondary dropdown-toggle\")\r\n          .attr(\"type\", \"button\")\r\n          .attr(\"id\", \"dropdownMenuButton\")\r\n          .attr(\"data-toggle\", \"dropdown\")\r\n          .attr(\"aria-haspopup\", \"true\")\r\n          .attr(\"aria-expanded\", \"false\")\r\n          .text(d.id)\r\n\r\n        var dropdownMenu = d3.select(\"#forcegraph\").selectAll(\".tooltip\")\r\n          .append(\"div\")\r\n          .attr(\"class\", \"dropdown-menu\")\r\n          .attr(\"aria-labelledby\", \"dropdownMenuButton\")\r\n\r\n        if (d.type === \"uri\") {\r\n          dropdownMenu.append(\"a\")\r\n            .attr(\"class\", \"dropdown-item\")\r\n            .attr(\"href\", d.id)\r\n            .text(\"go to uri\")\r\n        }\r\n        dropdownMenu.append(\"a\")\r\n          .attr(\"class\", \"dropdown-item\")\r\n        dropdownMenu.append(\"a\")\r\n          .attr(\"class\", \"dropdown-item\")\r\n\r\n\r\n        d3.select(\".tooltip\").transition()\r\n          .duration(200)\r\n          .style(\"opacity\", .9)\r\n          .style(\"left\", (d3.event.pageX + 28) + \"px\")\r\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n        // if (d.type === 'uri') {\r\n        //   //window.location.href = d.id // opens in the same page\r\n        //   window.open(d.id)           // opens in a new page\r\n        // }\r\n      })\r\n      .on(\"mouseover\", function (d) {\r\n        console.log('mouseover')\r\n\r\n\r\n\r\n\r\n      })\r\n      .on(\"mouseout\", function (d) {\r\n        console.log('mouseout')\r\n      })\r\n      .on(\"mousedown\", function (d) {\r\n        console.log('mousedown')\r\n      })\r\n      .on(\"mouseup\", function (d) {\r\n        console.log('mouseup')\r\n      })\r\n      .text(function (d) {\r\n        if (d.type === 'uri') {\r\n          var nodeURL = d.id.split('/')\r\n          nodeURL.splice(0, 3)\r\n          nodeURL = nodeURL.join('/')\r\n          console.log('nodeURL: ' + nodeURL)\r\n          return nodeURL;\r\n        }\r\n        return d.id;\r\n      })\r\n      .merge(selection)\r\n      .attr(\"transform\", function (d) {\r\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n      });\r\n    // 2nd way of doing it\r\n    // .attr('x', function (d) { return d.x })\r\n    // .attr('y', function (d) { return d.y })\r\n    // .attr('dy', function (d) { return 5 })\r\n\r\n    selection.exit().remove()\r\n  }\r\n\r\n  render() {\r\n    this.renderNodeEllipse()\r\n    this.renderNodeText()\r\n\r\n\r\n\r\n    return (\r\n      null\r\n    )\r\n  }\r\n}\r\nexport default D3NodeGenerator","import * as d3 from 'd3'\r\nimport React from 'react'\r\nimport reactDom from 'react-dom'\r\n\r\nclass D3LinkGenerator extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    // dragging\r\n    this.drag = (simulation) => {\r\n      const dragstarted = (d) => {\r\n        d3.select(\"#forcegraph\").selectAll(\".tooltip\").remove()\r\n        this.props.action()\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      };\r\n\r\n      const dragged = (d) => {\r\n        d.fx = d3.event.x;\r\n        d.fy = d3.event.y;\r\n      };\r\n\r\n      const dragended = (d) => {\r\n        //if (!d3.event.active) simulation.alphaTarget(0);\r\n        d.fx = null;\r\n        d.fy = null;\r\n      };\r\n\r\n      return d3\r\n        .drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended)\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  getAllLinkPropertys() {\r\n    var linkpropertys = []\r\n    this.props.linksList.forEach(element => {\r\n      linkpropertys.push(element.property.replace(/\\s/g, ''))\r\n    });\r\n    return linkpropertys\r\n  }\r\n\r\n  render() {\r\n    var selection = d3.select('.links')\r\n      .selectAll('path')\r\n      .data(this.props.linksList)\r\n\r\n    selection.enter()\r\n      .append('path')\r\n      .attr(\"class\", function (d) { return \"link\" })\r\n      .attr(\"class\", function (d) { return \"link \" + d.property; })\r\n      .attr(\"id\", function (d, i) { return \"linkId_\" + i; })\r\n      .attr(\"marker-end\", function (d) { return \"url(#\" + d.property.replace(/\\s/g, '') + \")\"; }) //removed to allow matching\r\n      .merge(selection)\r\n      .attr(\"d\", function (d) {\r\n        var dx = d.target.x - d.source.x\r\n        var dy = d.target.y - d.source.y\r\n        if (d.linknum) {\r\n          var dr = d.linknum * 150 - 150;\r\n        }\r\n        else {\r\n          var dr = 0\r\n        }\r\n\r\n        return \"M\" + d.source.x + \",\" + d.source.y + \"A\" + dr + \",\" + dr + \" 0 0,1 \" + d.target.x + \",\" + d.target.y;\r\n      })\r\n\r\n\r\n\r\n    selection.exit().remove()\r\n\r\n    var selection = d3.select('.linkstext')\r\n      .selectAll('text')\r\n      .data(this.props.linksList)\r\n\r\n    selection.enter()\r\n      .append(\"text\")\r\n      .on('click', function (d) {\r\n        //window.location.href = d.id // opens in the same page\r\n        window.open(d.id)           // opens in a new page\r\n      })\r\n      .attr(\"x\", (d) => this.props.forcegraphSettings.linkDistance.value / 2)\r\n      .attr(\"class\", \"linklabel\")\r\n      .append(\"textPath\")\r\n      .attr(\"xlink:href\", function (d, i) { return \"#linkId_\" + i; })\r\n      .text(function (d) {\r\n        var text = d.property.split('/')\r\n        text.splice(0, 3)\r\n        text = text.join('/')\r\n        return text;\r\n      })\r\n\r\n    selection.exit().remove()\r\n\r\n    var selection = d3.select('.defs')\r\n      .selectAll('marker')\r\n      .data(this.getAllLinkPropertys())\r\n\r\n    selection.enter()\r\n      .append(\"marker\")\r\n      .attr(\"id\", String)\r\n      .attr(\"viewBox\", \"0 -5 10 10\")\r\n      .attr(\"refX\", 40) // distance from link\r\n      .attr(\"refY\", 0) //deviation from link linke\r\n      .attr(\"markerWidth\", 6)\r\n      .attr(\"markerHeight\", 6)\r\n      .attr(\"orient\", \"auto\")\r\n      .append(\"svg:path\")\r\n      .attr(\"d\", \"M0,-5L10,0L0,5\");\r\n\r\n\r\n    selection.exit().remove()\r\n\r\n    return (\r\n      null\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default D3LinkGenerator","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ForceGraph from '../components/ForceGraph'\r\nimport ForceGraphOld from '../components/ForceGraphOld'\r\n\r\nimport { setSelectedNode, removeSelectedNode, fetchAboutClickedNode } from '../redux/actions/index'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    nodes: state.nodes,\r\n    datasource: state.datasource,\r\n    links: state.links,\r\n    data: state.data,\r\n    settings: state.forcegraphsettings,\r\n    history: state.router\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({\r\n    setSelectedNode,\r\n    removeSelectedNode,\r\n    fetchAboutClickedNode\r\n  }, dispatch)\r\n\r\nconst ConnectedForceGraph = connect(mapStateToProps, mapDispatchToProps)(ForceGraph)\r\n\r\nexport default ConnectedForceGraph","import * as d3 from 'd3'\r\nimport React from 'react'\r\n\r\nclass ForceGraph extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    console.log('ForceGraph rerendered')\r\n  }\r\n\r\n  componentDidMount() {\r\n    var element = document.getElementById('forcegraph');\r\n\r\n    // Redraw based on the new size whenever the browser window is resized.\r\n    window.addEventListener(\"resize\", () => {\r\n      this.removeSVG()\r\n      this.createSVG(element.offsetWidth, element.offsetHeight)\r\n      this.createSimulation(this.props.nodes, this.props.links, element.offsetWidth, element.offsetHeight)\r\n    });\r\n\r\n    this.createSVG(element.offsetWidth, element.offsetHeight)\r\n    this.createSimulation(this.props.nodes, this.props.links, element.offsetWidth, element.offsetHeight)\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.removeSimulation()\r\n    var element = document.getElementById('forcegraph');\r\n    this.createSimulation(this.props.nodes, this.props.links, element.offsetWidth, element.offsetHeight)\r\n  }\r\n\r\n  createSVG(width, height) {\r\n    console.log('createsvg')\r\n\r\n    var zoom = d3.zoom()\r\n      .scaleExtent([.5, 10])\r\n      .on(\"zoom\", zoomed);\r\n\r\n    var svg = d3.select(\"#forcegraph\")\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"forcegraph\")\r\n      .style(\"width\", width * 1)   // set size of svg in relation to parent\r\n      .style(\"height\", height * 1) // set size of svg in relation to parent\r\n      .style(\"border\", \"1px solid black\")\r\n      .call(zoom).append(\"g\")\r\n    svg.append(\"g\").attr(\"class\", \"links\")\r\n    svg.append(\"g\").attr(\"class\", \"nodesellipse\")\r\n    svg.append(\"g\").attr(\"class\", \"nodestext\")\r\n    svg.append(\"g\").attr(\"class\", \"linkstext\")\r\n    svg.append(\"defs\").attr(\"class\", \"defs\")\r\n\r\n    function zoomed() {\r\n      const currentTransform = d3.event.transform;\r\n      svg.attr(\"transform\", currentTransform);\r\n      //slider.property(\"value\", currentTransform.k);\r\n    }\r\n\r\n    // function slided(d) {\r\n    //   zoom.scaleTo(svg, d3.select(this).property(\"value\"));\r\n    // }\r\n\r\n    // var slider = d3.select(\"#forcegraph\").append(\"p\").append(\"input\")\r\n    //   .datum({})\r\n    //   .attr(\"type\", \"range\")\r\n    //   .attr(\"value\", zoom.scaleExtent()[0])\r\n    //   .attr(\"min\", zoom.scaleExtent()[0])\r\n    //   .attr(\"max\", zoom.scaleExtent()[1])\r\n    //   .attr(\"step\", (zoom.scaleExtent()[1] - zoom.scaleExtent()[0]) / 100)\r\n    //   .on(\"input\", slided);\r\n  }\r\n\r\n  removeSVG() {\r\n    d3.select('#forcegraph').selectAll('svg').remove()\r\n  }\r\n\r\n  removeSimulation() {\r\n    d3.select('.nodestext').selectAll('text').remove();\r\n    d3.select('.nodesellipse').selectAll('ellipse').remove();\r\n    d3.select('.links').selectAll('path').remove();\r\n    d3.select('.linkstext').selectAll('text').remove();\r\n\r\n  }\r\n\r\n  createSimulation(nodes, links, width, height) {\r\n    //simulation\r\n\r\n    var forceLink = d3.forceLink().links(links).distance(400).id(function (d) { return d.id; })\r\n    var forceCenter = d3.forceCenter((width * 1) / 2, (height * 1) / 2)\r\n    var forceCharge = d3.forceManyBody().strength(-1000) //defaul -30\r\n\r\n    var simulation = d3.forceSimulation(nodes)\r\n      .force('center', forceCenter)\r\n      .force('charge', forceCharge)\r\n      .force('link', forceLink)\r\n      .on('tick', ticked);\r\n\r\n    //node properties\r\n    function updateNodesText() {\r\n      var selection = d3.select('.nodestext')\r\n        .selectAll('text')\r\n        .data(nodes)                        //bind data\r\n        .call(drag(simulation));            //allow dragging  \r\n\r\n      selection.enter()                     //for each row in the data do...\r\n        .append('text')\r\n        .on('click', function (d) {\r\n          //alert(d.id)\r\n          //d3.select(this).style(\"fill\", \"magenta\")\r\n        })\r\n        .on(\"mouseover\", function (d) {\r\n          set_highlight(d, get_connectedNodes(d), get_connectedLinks(d));\r\n        })\r\n        .on(\"mouseout\", function (d) {\r\n          exit_highlight(d);\r\n          exit_fade(d)\r\n        })\r\n        .on(\"mousedown\", function (d) {\r\n          console.log('d nodetext:' + d.id)\r\n          set_fade(d, get_connectedNodes(d));\r\n\r\n        })\r\n        .on(\"mouseup\", function (d) {\r\n          console.log('mouseup')\r\n        })                    //add element\r\n        .text(function (d) {                // add attributes\r\n          return d.id\r\n        })\r\n        .merge(selection)\r\n        .attr(\"transform\", function (d) {\r\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n        });\r\n      // 2nd way of doing it\r\n      // .attr('x', function (d) { return d.x })\r\n      // .attr('y', function (d) { return d.y })\r\n      // .attr('dy', function (d) { return 5 })\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    function updateNodesellipse() {\r\n      var selection = d3.select('.nodesellipse')\r\n        .selectAll('ellipse')\r\n        .data(nodes)             //bind data\r\n        .call(drag(simulation));            //allow dragging  \r\n\r\n      selection.enter()                     //for each row in the data do...\r\n        .append('ellipse')\r\n        .on('click', function (d) {\r\n          //alert(d.id)\r\n          //d3.select(this).style(\"fill\", \"magenta\")\r\n        })\r\n        .on(\"mouseover\", function (d) {\r\n          set_highlight(d, get_connectedNodes(d), get_connectedLinks(d));\r\n        })\r\n        .on(\"mouseout\", function (d) {\r\n          exit_highlight(d);\r\n          exit_fade(d);\r\n        })\r\n        .on(\"mousedown\", function (d) {\r\n          console.log('d nodeellipse:' + d.id)\r\n          set_fade(d, get_connectedNodes(d));\r\n        })\r\n        .on(\"mouseup\", function (d) {\r\n          console.log('mouseup')\r\n        })\r\n        .attr(\"rx\", function (d) { return 30 }) //d.id.length\r\n        .attr(\"ry\", function (d) { return 30 }) //d.id.length\r\n        .attr(\"class\", \"ellipse\")\r\n        .classed('uri', function (d) { return d.type === 'uri' })\r\n        .classed('literal', function (d) { return d.type === 'literal' })\r\n        //.style(\"fill\", \"#FD8D3C\")\r\n        .merge(selection)\r\n        .attr(\"transform\", function (d) {\r\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n        })\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    //link properties\r\n    function updateLinks() {\r\n      var selection = d3.select('.links')\r\n        .selectAll('path')\r\n        .data(links)\r\n\r\n      selection.enter()\r\n        .append('path')\r\n        .attr(\"class\", function (d) { return \"link\" })\r\n        .attr(\"class\", function (d) { return \"link \" + d.property; })\r\n        .attr(\"id\", function (d, i) { return \"linkId_\" + i; })\r\n        .attr(\"marker-end\", function (d) { return \"url(#\" + d.property.replace(/\\s/g, '') + \")\"; }) //removed to allow matching\r\n        .merge(selection)\r\n        .attr(\"d\", function (d) {\r\n          var dx = d.target.x - d.source.x\r\n          var dy = d.target.y - d.source.y\r\n          if (d.linknum) {\r\n            var dr = d.linknum * 150 - 150;\r\n          }\r\n          else {\r\n            var dr = 0\r\n          }\r\n\r\n          return \"M\" + d.source.x + \",\" + d.source.y + \"A\" + dr + \",\" + dr + \" 0 0,1 \" + d.target.x + \",\" + d.target.y;\r\n        })\r\n\r\n\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    function updateLinksText() {\r\n      var selection = d3.select('.linkstext')\r\n        .selectAll('text')\r\n        .data(links)\r\n\r\n      selection.enter()\r\n        .append(\"text\")\r\n        .attr(\"x\", \"200\")\r\n        .attr(\"class\", \"linklabel\")\r\n        .append(\"textPath\")\r\n        .attr(\"xlink:href\", function (d, i) { return \"#linkId_\" + i; })\r\n        .text(function (d) {\r\n          return d.property;\r\n        })\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    function updateLinkMarkers() {\r\n      var selection = d3.select('.defs')\r\n        .selectAll('marker')\r\n        .data(getAllLinkPropertys())\r\n\r\n      selection.enter()\r\n        .append(\"marker\")\r\n        .attr(\"id\", String)\r\n        .attr(\"viewBox\", \"0 -5 10 10\")\r\n        .attr(\"refX\", 40) // distance from link\r\n        .attr(\"refY\", 0) //deviation from link linke\r\n        .attr(\"markerWidth\", 6)\r\n        .attr(\"markerHeight\", 6)\r\n        .attr(\"orient\", \"auto\")\r\n        .append(\"svg:path\")\r\n        .attr(\"d\", \"M0,-5L10,0L0,5\");\r\n\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    function getAllLinkPropertys() {\r\n\r\n      var linkpropertys = []\r\n      links.forEach(element => {\r\n        linkpropertys.push(element.property.replace(/\\s/g, ''))\r\n      });\r\n      return linkpropertys\r\n    }\r\n\r\n    //update drawing nodes and links\r\n    function ticked() {\r\n      console.log('ticked')\r\n      updateNodesText()\r\n      updateNodesellipse()\r\n      updateLinks()\r\n      updateLinksText()\r\n      updateLinkMarkers()\r\n    }\r\n\r\n    // dragging\r\n    const drag = (simulation) => {\r\n      const dragstarted = (d) => {\r\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      };\r\n\r\n      const dragged = (d) => {\r\n        d.fx = d3.event.x;\r\n        d.fy = d3.event.y;\r\n      };\r\n\r\n      const dragended = (d) => {\r\n        if (!d3.event.active) simulation.alphaTarget(0);\r\n        d.fx = null;\r\n        d.fy = null;\r\n      };\r\n\r\n      return d3\r\n        .drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended)\r\n    };\r\n\r\n    function get_connectedNodes(d) {\r\n      //get connected nodes of d\r\n      var connectedNodes = []\r\n\r\n      connectedNodes.push(d.id) //add the node that is being hoverd so that it is also highlighted\r\n\r\n      links.forEach(link => {\r\n        if (link.source.id === d.id) {\r\n          if (!connectedNodes.includes(link.target.id)) connectedNodes.push(link.target.id)\r\n        }\r\n        if (link.target.id === d.id) {\r\n          if (!connectedNodes.includes(link.source.id)) connectedNodes.push(link.source.id)\r\n        }\r\n      });\r\n      console.log('connectedNodes: ')\r\n      console.log(connectedNodes)\r\n      return connectedNodes\r\n    }\r\n\r\n    function get_connectedLinks(d) {\r\n      //get connected links of d\r\n      var connectedLinks = []\r\n\r\n      links.forEach(link => {\r\n        if (link.source.id === d.id || link.target.id === d.id) {\r\n          connectedLinks.push({ source: link.source.id, target: link.target.id })\r\n        }\r\n      });\r\n      console.log('connectedLinks: ')\r\n      console.log(connectedLinks)\r\n      return connectedLinks\r\n    }\r\n\r\n    function set_highlight(d, connectedNodes) {\r\n      // filter based on connectednodes\r\n      d3.select('.nodesellipse').selectAll('ellipse')\r\n        .filter(function (ellipses) {\r\n          if (connectedNodes.includes(ellipses.id)) { return true }\r\n          else { return false }\r\n        })\r\n        // set class\r\n        .classed('ellipse_highlight', true);\r\n    }\r\n\r\n    function exit_highlight(d) {\r\n      //remove all highlights\r\n      d3.select('.nodesellipse').selectAll('ellipse')\r\n        .filter(function (d) { return true })\r\n        .classed('ellipse_highlight', false);\r\n    }\r\n\r\n    function set_fade(d, connectedNodes) {\r\n      console.log('setting fade')\r\n      d3.select('.nodesellipse').selectAll('ellipse')\r\n        .filter(function (ellipses) {\r\n          if (!(connectedNodes.includes(ellipses.id))) { return true }\r\n          else { return false }\r\n        })\r\n        // set class\r\n        .classed('faded', true);\r\n\r\n\r\n      d3.select('.nodestext').selectAll('text')\r\n        .filter(function (ellipses) {\r\n          if (!(connectedNodes.includes(ellipses.id))) { return true }\r\n          else { return false }\r\n        })\r\n        // set class\r\n        .classed('faded', true);\r\n\r\n\r\n    }\r\n    function exit_fade(d) {\r\n      //remove all highlights\r\n      d3.select('.nodesellipse').selectAll('ellipse')\r\n        .filter(function (d) { return true })\r\n        .classed('faded', false);\r\n\r\n      d3.select('.nodestext').selectAll('text')\r\n        .filter(function (d) { return true })\r\n        .classed('faded', false);\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return <div id=\"forcegraph\">\r\n    </div >;\r\n  }\r\n}\r\n\r\nexport default ForceGraph","\r\nimport React, { useEffect } from 'react';\r\n\r\nimport Yasgui from \"@triply/yasgui\";\r\nimport \"@triply/yasgui/build/yasgui.min.css\";\r\n\r\nclass Gui extends React.Component {\r\n  constructor(props) {\r\n    super()\r\n\r\n    this.yasgui = null\r\n\r\n    this.submitquery = this.submitquery.bind(this)\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.yasgui = new Yasgui(document.getElementById(this.props.prop), {\r\n      requestConfig: { endpoint: \"https://lod.onderwijsregistratie.nl/rio/sparql\" }, // this is not used\r\n      persistencyExpire: 0,\r\n      copyEndpointOnNewTab: false,\r\n      persistentConfig: {\r\n        storageId: \"yagui__config\" + this.props.prop\r\n      }\r\n\r\n    })\r\n\r\n    this.yasgui.on(\"tabChange\", (instance: Yasgui, tab: Tab) => {\r\n      console.log('the tab has changed')\r\n      var selectedtab = this.yasgui.tabElements._selectedTab\r\n      //this.yasgui._tabs[selectedtab].yasqe.on(\"change\", () => { console.log('ok man') });\r\n    });\r\n\r\n    console.log(this)\r\n  }\r\n\r\n  submitquery() {\r\n    var selectedtab = this.yasgui.tabElements._selectedTab\r\n    var query = this.yasgui._tabs[selectedtab].persistentJson.yasqe.value\r\n    console.log(query)\r\n    this.props.action(query, this.props.datasource)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id={this.props.prop}></div>\r\n        <button onClick={() => this.submitquery()}>button</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Gui","import React from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass QueryForm extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      query: \"SELECT * WHERE\" + \"{\" + \"?sub ?pred ?obj .\" + \"}\" + \"LIMIT 10\",\r\n      subject: \"http://lod.onderwijsregistratie.nl/rio/id/Onderwijsbestuur/100B490\",\r\n    }\r\n\r\n    this.handleQueryChange = this.handleQueryChange.bind(this);\r\n    this.handleQuerySubmit = this.handleQuerySubmit.bind(this);\r\n\r\n    this.handleSubjectChange = this.handleSubjectChange.bind(this)\r\n    this.handleSubjectDetailsQuerySubmit = this.handleSubjectDetailsQuerySubmit.bind(this)\r\n\r\n  }\r\n\r\n  handleQueryChange(event) {\r\n    console.log(event.target.value)\r\n    this.setState({ query: event.target.value });\r\n  }\r\n\r\n  handleQuerySubmit(event) {\r\n    this.props.fetchSparql(this.state.query, this.props.datasource.currentDatasource)\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleSubjectChange(event) {\r\n    console.log(event.target.value)\r\n    this.setState({ subject: event.target.value });\r\n  }\r\n\r\n  handleSubjectDetailsQuerySubmit(event) {\r\n    var uri = this.state.subject\r\n    const query = 'SELECT * ' +\r\n      'WHERE { <' + uri + '> ?property ?object }' +\r\n      'limit 200';\r\n    this.props.fetchAboutSubject(query, this.props.datasource.currentDatasource)\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <div id=\"queryform\">\r\n          <Form onSubmit={this.handleQuerySubmit}>\r\n\r\n            <Form.Group controlId=\"QueryInput\">\r\n              <Form.Label>Query input:</Form.Label>\r\n              <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Input query\" value={this.state.query} onChange={this.handleQueryChange} />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n          </Form>\r\n        </div>\r\n\r\n        <div id=\"querysubjectdetails form\">\r\n          <Form onSubmit={this.handleSubjectDetailsQuerySubmit}>\r\n\r\n            <Form.Group controlId=\"SubjectInput\">\r\n              <Form.Label>Query input:</Form.Label>\r\n              <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Input subject\" value={this.state.subject} onChange={this.handleSubjectChange} />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n          </Form>\r\n        </div>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default QueryForm\r\n\r\n","import React from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Gui from './YasguiClass'\r\n\r\nclass QueryForm extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"queryform\">\r\n          <Gui prop={1} action={this.props.fetchSparql} datasource={this.props.datasource.currentDatasource} />\r\n        </div>\r\n        <div id=\"querysubjectdetails form\">\r\n          <Gui prop={2} action={this.props.fetchAboutSubject} datasource={this.props.datasource.currentDatasource} />\r\n        </div>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default QueryForm\r\n\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport QueryForm from '../components/QueryForm'\r\nimport QueryFormOld from '../components/QueryFormOld'\r\nimport { fetchTest, fetchSparql, fetchAboutSubject } from '../redux/actions/index'\r\nimport { push } from 'connected-react-router'\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    datasource: state.datasource,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({ fetchTest, fetchSparql, fetchAboutSubject, push }, dispatch)\r\n\r\nconst ConnectedQueryForm = connect(mapStateToProps, mapDispatchToProps)(QueryFormOld)\r\n\r\nexport default ConnectedQueryForm","import React from 'react'\r\nimport { Button, Card, CardDeck } from 'react-bootstrap'\r\n\r\nclass Example extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      query: \"SELECT * WHERE\" + \"{\" + \"?sub ?pred ?obj .\" + \"}\" + \"LIMIT 10\",\r\n      subject: \"http://lod.onderwijsregistratie.nl/rio/id/Onderwijsbestuur/100B490\",\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <CardDeck>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Persoon & relevante adressen</Card.Title>\r\n              <Card.Text>\r\n                Dit voorbeeld laat zien hoe de applicatie een persoon visualiseerd met de bijbehorende relevante adressen</Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Button onClick={() => this.props.fetchTest()}>Bekijk voorbeeld</Button>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Extra gevens opvragen </Card.Title>\r\n              <Card.Text>\r\n                Een blauwe node representeerd een uri, door hierop te klikken kan extra informatie over deze uri worden opgevraagd en toegeveogd aan de visualisatie.</Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Button onClick={() => this.props.fetchAboutSubject('SELECT * ' +\r\n                'WHERE { <http://lod.onderwijsregistratie.nl/rio/id/Onderwijsbestuur/100B490> ?property ?object }' +\r\n                'limit 200', this.props.datasource.currentDatasource)}>Bekijk voorbeeld</Button>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>zoeken op basis van text input</Card.Title>\r\n              <Card.Text>\r\n                Dit voorbeeld laat zien hoe je in de applicatie kunt zoeken naar bepaalde klasses.</Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Button onClick={() => this.props.fetchTest()}>Bekijk voorbeeld</Button>\r\n            </Card.Footer>\r\n          </Card>\r\n\r\n        </CardDeck>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Example","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Examples from '../components/Examples'\r\nimport { fetchTest, fetchSparql, fetchAboutSubject } from '../redux/actions/index'\r\nimport { push } from 'connected-react-router'\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    datasource: state.datasource,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({ fetchTest, fetchSparql, fetchAboutSubject, push }, dispatch)\r\n\r\nconst ConnectedExamples = connect(mapStateToProps, mapDispatchToProps)(Examples)\r\n\r\nexport default ConnectedExamples","import React from 'react'\r\n\r\nimport {\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom'\r\n\r\nimport { Nav } from 'react-bootstrap'\r\n\r\nimport {\r\n  NavLink,\r\n} from 'react-router-dom'\r\n\r\n\r\nimport ConnectedForceGraph from '../containers/ConnectedForceGraph';\r\nimport ConnectedQueryForm from '../containers/ConnectedQueryForm'\r\nimport ConnectedDataSource from '../containers/ConnectedDataSource'\r\nimport ConnectedExamples from '../containers/ConnectedExamples';\r\n\r\nclass Graph extends React.Component {\r\n  render() {\r\n    console.log(this.props.match.path)\r\n    return (\r\n      <div className=\"Graph\">\r\n        <h2>Graph</h2>\r\n        \r\n        <Nav fill variant=\"tabs\" defaultActiveKey=\"/sparql-react-browser/graph/examples\">\r\n          <Nav.Item>\r\n            <Nav.Link as={NavLink} activeClassName=\"active\" to=\"/sparql-react-browser/graph/examples\">Voorbeelden</Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link as={NavLink} activeClassName=\"active\" to=\"/sparql-react-browser/graph/queryform\">Queryform</Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n\r\n        <Switch>\r\n          <Route exact path={`${this.props.match.path}/examples`} component={ConnectedExamples} />\r\n          <Route exact path={`${this.props.match.path}/queryform`} component={ConnectedQueryForm} />\r\n        </Switch>\r\n        <ConnectedForceGraph />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Graph","import React from 'react'\r\n\r\nclass Contact extends React.Component {\r\n  onSubmit = () => {\r\n    this.props.history.push('/')\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Contact\">\r\n        <h2>Contact form</h2>\r\n        <form>\r\n          <input placeholder=\"name\" type=\"name\" />\r\n          <input placeholder=\"email\" type=\"email\" />\r\n          <button onClick={this.onSubmit}>Submit</button>\r\n        </form>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Contact","import React from 'react'\r\n\r\nclass NotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"NotFound\">\r\n        <h1>Not Found...</h1>\r\n        <button onClick={() => this.props.history.push('/home')}>Go home</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default NotFound","import React from 'react'\r\nimport {\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom'\r\n\r\n\r\n\r\n//pages\r\nimport Home from '../pages/Home'\r\nimport Graph from '../pages/Graph'\r\nimport Contact from '../pages/Contact'\r\nimport Notfound from '../pages/NotFound'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nclass PageContent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container id=\"PageContent\">\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/sparql-react-browser/\" component={Home} />\r\n            <Route exact path=\"/sparql-react-browser/home\" component={Home} />\r\n            <Route path=\"/sparql-react-browser/graph\" component={Graph} />\r\n            <Route path=\"/sparql-react-browser/contact\" component={Contact} />\r\n\r\n            <Route component={Notfound} />\r\n          </Switch>\r\n        </div>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PageContent","import React from 'react'\r\n\r\nconst Loading = ({ isLoading }) =>\r\n  isLoading && <span>Loading...</span>\r\n\r\nexport default Loading","import { connect } from 'react-redux'\r\nimport Loading from '../components/Loading'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const { loading } = state\r\n\r\n  const isLoading = Object.keys(loading).reduce((result, requestName) => {\r\n    if (result === true) return true\r\n    if (loading[requestName] > 0) return true\r\n    return false\r\n  }, false)\r\n\r\n  return { isLoading }\r\n}\r\n\r\nconst ConnectedLoading = connect(mapStateToProps)(Loading)\r\n\r\nexport default ConnectedLoading","import React from 'react'\r\n\r\nconst Error = ({ message }) =>\r\n  message\r\n    ? <span style={{ color: 'red' }}>Error: {message}</span>\r\n    : null\r\n\r\nexport default Error","import { connect } from 'react-redux'\r\n\r\nimport Error from '../components/Error'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    message: state.error && state.error.message\r\n  }\r\n}\r\n\r\nconst ConnectedError = connect(mapStateToProps)(Error)\r\n\r\nexport default ConnectedError","import React from 'react';\r\n\r\n//Router\r\nimport { ConnectedRouter } from 'connected-react-router'\r\nimport { history } from './redux/store/middleware'\r\n\r\n//custom stylesheet\r\nimport './css/Custom.scss';\r\n\r\n//devtools\r\nimport DevTools from './containers/DevTools.jsx'\r\n\r\nimport { Provider } from 'react-redux'\r\n\r\nimport configureStore from './redux/store/index'\r\n\r\n//Bootrap components\r\nimport Container from 'react-bootstrap/Container'\r\n\r\n// Layout components\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport PageContent from './components/PageContent';\r\nimport ConnectedLoading from './containers/ConnectedLoading'\r\nimport ConnectedError from './containers/ConnectedError'\r\n\r\n//init redux store\r\nconst store = configureStore()\r\n\r\nconsole.log('initializing store: ', store.getState())\r\n\r\n// const unsubscribe = store.subscribe(() => {\r\n//   //console.log('state changed: ', store.getState())\r\n// })\r\n\r\n\r\n\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <div className=\"App\">\r\n      <ConnectedRouter history={history}>\r\n        <Header />\r\n        <PageContent />\r\n        <ConnectedLoading />\r\n        <ConnectedError />\r\n        <Footer />\r\n      </ConnectedRouter>\r\n      {/* exclude devtools in production */}\r\n      {(process.env.NODE_ENV !== 'production') && <DevTools />}\r\n    </div>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"Search_SearchForm__24xnT\",\"active\":\"Search_active__3P13n\"};"],"sourceRoot":""}