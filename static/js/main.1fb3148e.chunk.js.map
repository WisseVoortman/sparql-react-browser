{"version":3,"sources":["redux/store/middleware.js","containers/DevTools.jsx","redux/reducers/data.js","redux/actionTypes.js","redux/reducers/nodes.js","redux/reducers/links.js","redux/reducers/datasource.js","redux/reducers/loading.js","redux/reducers/error.js","redux/reducers/index.js","redux/store/index.js","components/Nav.js","components/Header.js","components/Footer.js","pages/Home.js","components/ForceGraph.js","containers/ConnectedForceGraph.js","components/ForceGraphOld.js","components/Search.js","redux/actions/datasource.js","redux/actions/utils.js","redux/actions/sparql.js","containers/ConnectedSearch.js","components/DataSourceDropdown.js","containers/ConnectedDataSourceDropdown.js","pages/Graph.js","pages/Contact.js","pages/NotFound.js","components/PageContent.js","components/Loading.js","containers/ConnectedLoading.js","components/Error.js","containers/ConnectedError.js","App.js","index.js"],"names":["history","createBrowserHistory","middleware","applyMiddleware","thunkMiddleware","routerMiddleware","DevTools","createDevTools","toggleVisibilityKey","changePositionKey","defaultIsVisible","theme","dataReducer","state","id","action","NewState","Object","assign","type","nodeReducer","links","source","value","target","property","templist","forEach","link","includes","push","console","log","result","config","url","vars","data","head","results","bindings","element","urlParams","subject","split","splice","join","subjectURL","objParam","linkReducer","sort","a","b","i","length","linknum","propertyParam","datasourceReducer","currentDatasource","datasources","name","endpoint","newState","datasource","loadingReducer","endsWith","requestName","replace","counter","errorReducer","error","appReducer","combineReducers","nodes","nodesReducer","linkesReducer","loading","router","connectRouter","enhancer","compose","instrument","persistState","matches","window","location","href","match","getSessionKey","Navigation","className","Navbar","expand","fixed","Brand","as","NavLink","activeClassName","to","width","height","alt","Toggle","aria-controls","Collapse","Nav","Link","exact","React","Component","Header","Footer","Container","Row","Col","sm","Date","getYear","Home","Jumbotron","Button","variant","onClick","props","ForceGraph","drag","simulation","d3","on","d","active","alphaTarget","restart","fx","x","fy","y","document","getElementById","addEventListener","removeSVG","createSVG","offsetWidth","offsetHeight","restartSimulation","this","forceLink","distance","forceCenter","forceCharge","strength","force","setState","prevprops","selectAll","remove","stop","zoom","scaleExtent","currentTransform","transform","svg","attr","append","style","call","alpha","selection","enter","merge","dr","exit","classed","text","nodeURL","propertyURL","getAllLinkPropertys","String","linkpropertys","nodesellipse","nodestext","linktext","linkmarker","defaultProps","forceStrength","initialState","ConnectedForceGraph","connect","dispatch","bindActionCreators","Search","query","handleQueryChange","bind","handleQuerySubmit","handleSubjectChange","handleSubjectDetailsQuerySubmit","event","fetchSparql","preventDefault","uri","fetchAboutSubject","Form","onSubmit","Group","controlId","Label","Control","rows","placeholder","onChange","fetchTest","setCurrentDatasource","thunkCreator","types","promise","rest","REQUESTED","RESOLVED","REJECTED","then","errors","Error","catch","axios","require","fetch","response","json","method","qs","stringify","queryLn","ref","headers","Accept","ConnectedSearch","DataSourceDropdown","Dropdown","Menu","map","item","key","Item","ConnectedDataSourceDropdown","Graph","Contact","NotFound","PageContent","path","component","Notfound","Loading","isLoading","ConnectedLoading","keys","reduce","message","color","ConnectedError","store","createStore","getState","App","process","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1fb3148e.chunk.js","sourcesContent":["import thunkMiddleware from 'redux-thunk'\r\n\r\nimport { applyMiddleware } from 'redux'\r\nimport { routerMiddleware } from 'connected-react-router'\r\n\r\nimport { createBrowserHistory } from 'history'\r\nexport const history = createBrowserHistory()\r\n\r\nconst middleware = applyMiddleware(\r\n  thunkMiddleware,\r\n  routerMiddleware(history)\r\n)\r\n\r\nexport default middleware","import React from 'react'\r\n\r\nimport { createDevTools } from 'redux-devtools'\r\n\r\nimport LogMonitor from 'redux-devtools-log-monitor'\r\nimport DockMonitor from 'redux-devtools-dock-monitor'\r\n\r\nconst DevTools = createDevTools(\r\n  <DockMonitor\r\n    toggleVisibilityKey='ctrl-h'\r\n    changePositionKey='ctrl-q'\r\n    defaultIsVisible={true}\r\n  >\r\n    <LogMonitor theme='tomorrow' />\r\n  </DockMonitor>\r\n)\r\n\r\nexport default DevTools","import { FETCH_TEST_SUCCESS, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS } from '../actionTypes'\r\n\r\nexport default function dataReducer(state = {\r\n  id: 1,\r\n\r\n},\r\n  action) {\r\n  let NewState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case FETCH_TEST_SUCCESS: {\r\n      NewState.id = state.id + 1\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_SUCCESS: {\r\n      NewState.id = state.id + 1\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_ABOUTSUBJECT_SUCCESS: {\r\n      NewState.id = state.id + 1\r\n      return NewState\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","\r\n//datasource\r\nexport const SET_CURRENT_DATASOURCE = 'SET_CURRENT_DATASOURCE';\r\n\r\n//fetch test\r\nexport const FETCH_TEST_REQUEST = 'FETCH_TEST_REQUEST'\r\nexport const FETCH_TEST_SUCCESS = 'FETCH_TEST_SUCCESS'\r\nexport const FETCH_TEST_FAILURE = 'FETCH_TEST_FAILURE'\r\n\r\n//fetch sparql\r\nexport const FETCH_SPARQL_REQUEST = 'FETCH_SPARQL_REQUEST'\r\nexport const FETCH_SPARQL_SUCCESS = 'FETCH_SPARQL_SUCCESS'\r\nexport const FETCH_SPARQL_FAILURE = 'FETCH_SPARQL_FAILURE'\r\n\r\n//fetch sparql\r\nexport const FETCH_SPARQL_ABOUTSUBJECT_REQUEST = 'FETCH_SPARQL_ABOUTSUBJECT_REQUEST'\r\nexport const FETCH_SPARQL_ABOUTSUBJECT_SUCCESS = 'FETCH_SPARQL_ABOUTSUBJECT_SUCCESS'\r\nexport const FETCH_SPARQL_ABOUTSUBJECT_FAILURE = 'FETCH_SPARQL_ABOUTSUBJECT_FAILURE'\r\n\r\nexport const SPARQL_GET_URI_FROM_LABEL_PENDING = 'SPARQL_GET_URI_FROM_LABEL_PENDING';\r\nexport const SPARQL_GET_URI_FROM_LABEL_FULFILLED = 'SPARQL_GET_URI_FROM_LABEL_FULFILLED';\r\nexport const SPARQL_GET_URI_FROM_LABEL_REJECTED = 'SPARQL_GET_URI_FROM_LABEL_REJECTED';\r\nexport const SPARQL_GET_TRIPLES_FROM_URI = 'SPARQL_GET_TRIPLES_FROM_URI';\r\nexport const SPARQL_GET_TRIPLES_FROM_URI_PENDING = 'SPARQL_GET_TRIPLES_FROM_URI_PENDING';\r\nexport const SPARQL_GET_TRIPLES_FROM_URI_FULFILLED = 'SPARQL_GET_TRIPLES_FROM_URI_FULFILLED';\r\nexport const SPARQL_GET_TRIPLES_FROM_URI_REJECTED = 'SPARQL_GET_TRIPLES_FROM_URI_REJECTED';\r\n\r\nexport const SPARQL_PENDING_REQUESTS_LIST = [\r\n  SPARQL_GET_URI_FROM_LABEL_PENDING,\r\n  SPARQL_GET_TRIPLES_FROM_URI_PENDING,\r\n];\r\n\r\nexport const SPARQL_REJECTED_REQUESTS_LIST = [\r\n  SPARQL_GET_URI_FROM_LABEL_REJECTED,\r\n  SPARQL_GET_TRIPLES_FROM_URI_REJECTED,\r\n];","import { FETCH_TEST_SUCCESS, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS } from '../actionTypes'\r\n\r\nexport default function nodeReducer(state = [\r\n  { id: 'Subject', type: 'literal' },\r\n  { id: 'Object', type: 'literal' },\r\n], action) {\r\n  let NewState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case FETCH_TEST_SUCCESS: {\r\n\r\n      var links = [\r\n        { source: { value: \"http://example.nl/persoon/Wisse\", type: \"uri\" }, target: { value: \"http://example.nl/bedrijf/DUO\", type: \"uri\" }, property: \"Is stagair bij\" },\r\n        { source: { value: \"http://example.nl/persoon/Wisse\", type: \"uri\" }, target: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, property: \"Heeft Woonadres\" },\r\n        { source: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, target: { value: \"7913TH\", type: \"literal\" }, property: \"Postcode\" },\r\n        { source: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, target: { value: \"25\", type: \"literal\" }, property: \"Nummer\" },\r\n        { source: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, target: { value: \"Zuideropgaande\", type: \"literal\" }, property: \"Straatnaam\" },\r\n        { source: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, target: { value: \"Hollandscheveld\", type: \"literal\" }, property: \"Plaatsnaam\" },\r\n        { source: { value: \"http://example.nl/bedrijf/DUO\", type: \"uri\" }, target: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, property: \"Heeft adres\" },\r\n        { source: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, target: { value: \"9722TB\", type: \"literal\" }, property: \"Postcode\" },\r\n        { source: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, target: { value: \"12\", type: \"literal\" }, property: \"Nummer\" },\r\n        { source: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, target: { value: \"Kempkensberg\", type: \"literal\" }, property: \"Straatnaam\" },\r\n        { source: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, target: { value: \"Groningen\", type: \"literal\" }, property: \"Plaatsnaam\" },\r\n        { source: { value: \"http://example.nl/persoon/Wisse\", type: \"uri\" }, target: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, property: \"Werkadres\" },\r\n      ]\r\n\r\n      NewState = []\r\n\r\n      //distinct nodes\r\n      var templist = []\r\n      links.forEach(link => {\r\n        if (!templist.includes(link.source.value)) {\r\n          NewState.push({ id: link.source.value, type: link.source.type })\r\n        }\r\n        if (!templist.includes(link.target.value)) {\r\n          NewState.push({ id: link.target.value, type: link.target.type })\r\n        }\r\n\r\n        templist.push(link.source.value)\r\n        templist.push(link.target.value)\r\n      })\r\n      console.log('node NewState: ' + NewState)\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_SUCCESS: {\r\n      console.log(action.result.config.url)\r\n      //LINK:\r\n      //[{ source: \"John\", target: 'Fussbal', property: 'plays' }]\r\n\r\n      //NODE\r\n      //[{ id: 'John' }]\r\n\r\n      NewState = []\r\n\r\n      //distinct nodes\r\n      var templist = []\r\n\r\n      var vars = action.result.data.head.vars\r\n      action.result.data.results.bindings.forEach(element => {\r\n\r\n        //add subject and object to templist\r\n        if (!templist.includes(element[vars[0]].value)) {\r\n          NewState.push({ id: element[vars[0]].value, type: element[vars[0]].type })\r\n        }\r\n        if (!templist.includes(element[vars[2]].value)) {\r\n          NewState.push({ id: element[vars[2]].value, type: element[vars[2]].type })\r\n        }\r\n\r\n        templist.push(element[vars[0]].value)\r\n        templist.push(element[vars[2]].value)\r\n      })\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_ABOUTSUBJECT_SUCCESS: {\r\n      //LINK:\r\n      //[{ source: \"John\", target: 'Fussbal', property: 'plays' }]\r\n\r\n      //NODE\r\n      //[{ id: 'John' }]\r\n\r\n      NewState = []\r\n\r\n      //distinct nodes\r\n      var templist = []\r\n\r\n      //add subject\r\n      var urlParams = action.result.config.subject.split('/')\r\n      urlParams.splice(0, 3)\r\n      urlParams = urlParams.join('/')\r\n      console.log('urlParam: ' + urlParams)\r\n\r\n      NewState.push({ id: action.result.config.subject, type: 'uri' })\r\n\r\n      var vars = action.result.data.head.vars\r\n      // console.log(vars)\r\n\r\n      // console.log('longurl' + action.result.config.subject)\r\n      var subjectURL = action.result.config.subject.split('/')\r\n      // console.log('shorturl ' + subjectURL[2])\r\n\r\n      action.result.data.results.bindings.forEach(element => {\r\n\r\n        //check if property comes from specific url to filter bad nodes\r\n        var subjectURL = action.result.config.subject.split('/')\r\n        if (element[vars[0]].value.split('/')[2] === subjectURL[2]) {\r\n          //add object\r\n          if (!templist.includes(element[vars[1]].value)) {\r\n            if (element[vars[1]].type === 'uri') {\r\n              var objParam = element[action.result.data.head.vars[1]].value.split('/')\r\n              objParam.splice(0, 3)\r\n              objParam = objParam.join('/')\r\n              console.log('objParam: ' + objParam)\r\n              NewState.push({ id: element[action.result.data.head.vars[1]].value, type: element[vars[1]].type })\r\n            }\r\n            else {\r\n              NewState.push({ id: element[vars[1]].value, type: element[vars[1]].type })\r\n            }\r\n\r\n          }\r\n          templist.push(element[vars[1]].value)\r\n        }\r\n      })\r\n      return NewState\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","import { FETCH_TEST_SUCCESS, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS } from '../actionTypes'\r\n\r\nexport default function linkReducer(state = [\r\n  { source: \"Subject\", target: \"Object\", property: \"http://example.nl/property\" },\r\n], action) {\r\n  let NewState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case FETCH_TEST_SUCCESS: {\r\n\r\n      NewState = [\r\n        { source: \"http://example.nl/persoon/Wisse\", target: \"http://example.nl/bedrijf/DUO\", property: \"http://example.nl/Is stagair bij\" },\r\n        { source: \"http://example.nl/persoon/Wisse\", target: \"http://example.nl/adres/Adres1\", property: \"http://example.nl/Heeft Woonadres\" },\r\n        { source: \"http://example.nl/adres/Adres1\", target: \"7913TH\", property: \"http://example.nl/Postcode\" },\r\n        { source: \"http://example.nl/adres/Adres1\", target: \"25\", property: \"http://example.nl/Nummer\" },\r\n        { source: \"http://example.nl/adres/Adres1\", target: \"Zuideropgaande\", property: \"http://example.nl/Straatnaam\" },\r\n        { source: \"http://example.nl/adres/Adres1\", target: \"Hollandscheveld\", property: \"http://example.nl/Plaatsnaam\" },\r\n        { source: \"http://example.nl/bedrijf/DUO\", target: \"http://example.nl/adres/Adres2\", property: \"http://example.nl/Heeft adres\" },\r\n        { source: \"http://example.nl/adres/Adres2\", target: \"9722TB\", property: \"http://example.nl/Postcode\" },\r\n        { source: \"http://example.nl/adres/Adres2\", target: \"12\", property: \"http://example.nl/Nummer\" },\r\n        { source: \"http://example.nl/adres/Adres2\", target: \"Kempkensberg\", property: \"http://example.nl/Straatnaam\" },\r\n        { source: \"http://example.nl/adres/Adres2\", target: \"Groningen\", property: \"http://example.nl/Plaatsnaam\" },\r\n        { source: \"http://example.nl/persoon/Wisse\", target: \"http://example.nl/adres/Adres2\", property: \"http://example.nl/Werkadres\" },\r\n      ]\r\n\r\n      //sort links by source then target --> sorteert goed.\r\n      NewState.sort(function (a, b) {\r\n        if (a.source > b.source) { return 1; }\r\n        else if (a.source < b.source) { return -1; }\r\n        else {\r\n          if (a.target > b.target) { return 1; }\r\n          if (a.target < b.target) { return -1; }\r\n          else { return 0; }\r\n        }\r\n      })\r\n\r\n      // set linknum for every link --> wordt in path gebruikt om duplicate links te kunnen leggen\r\n      for (var i = 0; i < NewState.length; i++) {\r\n        if (i !== 0 &&\r\n          NewState[i].source === NewState[i - 1].source &&\r\n          NewState[i].target === NewState[i - 1].target) {\r\n          NewState[i].linknum = NewState[i - 1].linknum + 1;\r\n        }\r\n        else { NewState[i].linknum = 1; };\r\n      };\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_SUCCESS: {\r\n      //LINK:\r\n      //[{ source: \"John\", target: 'Fussbal', property: 'plays' }]\r\n\r\n      //NODE\r\n      //[{ id: 'John' }]\r\n\r\n      NewState = []\r\n\r\n      action.result.data.results.bindings.forEach(element => {\r\n        //console.log(element)\r\n        var source = element[action.result.data.head.vars[0]]\r\n        var target = element[action.result.data.head.vars[2]]\r\n        var property = element[action.result.data.head.vars[1]]\r\n        var link = {}\r\n        link.source = source.value\r\n        link.target = target.value\r\n        link.property = property.value\r\n        NewState.push(link)\r\n\r\n        //sort links by source then target --> sorteert goed.\r\n        NewState.sort(function (a, b) {\r\n          if (a.source > b.source) { return 1; }\r\n          else if (a.source < b.source) { return -1; }\r\n          else {\r\n            if (a.target > b.target) { return 1; }\r\n            if (a.target < b.target) { return -1; }\r\n            else { return 0; }\r\n          }\r\n        })\r\n\r\n        // set linknum for every link --> wordt in path gebruikt om duplicate links te kunnen leggen\r\n        for (var i = 0; i < NewState.length; i++) {\r\n          if (i !== 0 &&\r\n            NewState[i].source === NewState[i - 1].source &&\r\n            NewState[i].target === NewState[i - 1].target) {\r\n            NewState[i].linknum = NewState[i - 1].linknum + 1;\r\n          }\r\n          else { NewState[i].linknum = 1; };\r\n        };\r\n\r\n\r\n      });\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_ABOUTSUBJECT_SUCCESS: {\r\n      NewState = []\r\n\r\n      var urlParams = action.result.config.subject.split('/')\r\n      urlParams.splice(0, 3)\r\n      urlParams = urlParams.join('/')\r\n      console.log('urlParam: ' + urlParams)\r\n\r\n      action.result.data.results.bindings.forEach(element => {\r\n\r\n        var link = {}\r\n\r\n        link.source = action.result.config.subject\r\n\r\n        if (element[action.result.data.head.vars[1]].type === 'uri') {\r\n          var objParam = element[action.result.data.head.vars[1]].value.split('/')\r\n          objParam.splice(0, 3)\r\n          objParam = objParam.join('/')\r\n          console.log('objParam: ' + objParam)\r\n\r\n\r\n          link.target = element[action.result.data.head.vars[1]].value\r\n        }\r\n        else {\r\n          link.target = element[action.result.data.head.vars[1]].value\r\n        }\r\n\r\n\r\n        var propertyParam = element[action.result.data.head.vars[0]].value.split('/')\r\n        propertyParam.splice(0, 3)\r\n        propertyParam = propertyParam.join('/')\r\n        link.property = element[action.result.data.head.vars[0]].value\r\n\r\n        var subjectURL = action.result.config.subject.split('/')\r\n        //check if property comes from specific url to filter bad links\r\n        if (element[action.result.data.head.vars[0]].value.split('/')[2] === subjectURL[2]) {\r\n          NewState.push(link)\r\n        }\r\n\r\n\r\n\r\n        //sort links by source then target --> sorteert goed.\r\n        NewState.sort(function (a, b) {\r\n          if (a.source > b.source) { return 1; }\r\n          else if (a.source < b.source) { return -1; }\r\n          else {\r\n            if (a.target > b.target) { return 1; }\r\n            if (a.target < b.target) { return -1; }\r\n            else { return 0; }\r\n          }\r\n        })\r\n\r\n        // set linknum for every link --> wordt in path gebruikt om duplicate links te kunnen leggen\r\n        for (var i = 0; i < NewState.length; i++) {\r\n          if (i !== 0 &&\r\n            NewState[i].source === NewState[i - 1].source &&\r\n            NewState[i].target === NewState[i - 1].target) {\r\n            NewState[i].linknum = NewState[i - 1].linknum + 1;\r\n          }\r\n          else { NewState[i].linknum = 1; };\r\n        };\r\n\r\n\r\n      });\r\n      return NewState\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_CURRENT_DATASOURCE } from '../actionTypes';\r\n\r\n\r\nexport default function datasourceReducer(state = {\r\n  currentDatasource: 'https://lod.onderwijsregistratie.nl/rio/sparql',\r\n  datasources: [\r\n    {\r\n      name: 'Onderwijsregistratie',\r\n      endpoint: 'https://lod.onderwijsregistratie.nl/rio/sparql',\r\n    },\r\n    {\r\n      name: 'dbpedia',\r\n      endpoint: 'http://dbpedia.org/sparql',\r\n    },\r\n    {\r\n      name: 'Onderwijsregistratie-localhost',\r\n      endpoint: 'http://localhost:8080/rdf4j-workbench/repositories/rio/query',\r\n    },\r\n    {\r\n      name: 'Basisregistraties',\r\n      endpoint: 'https://data.pdok.nl/sparql',\r\n    },\r\n    {\r\n      name: 'Onderwijsinspectie',\r\n      endpoint: 'http://localhost:8080/rdf4j-workbench/repositories/ivho/query',\r\n    },\r\n    {\r\n      name: 'Kennisnet',\r\n      endpoint: 'http://localhost:8080/rdf4j-workbench/repositories/kennisnet/query',\r\n    },\r\n  ],\r\n}, action) {\r\n  let newState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case SET_CURRENT_DATASOURCE: {\r\n      console.log(action.datasource)\r\n      newState.currentDatasource = action.datasource.endpoint;\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n","export default function loadingReducer(state = {}, action) {\r\n  if (action.type.endsWith('_REQUEST')) {\r\n    const requestName = action.type.replace('_REQUEST', '')\r\n    const counter = state[requestName] || 0\r\n    return { ...state, [requestName]: counter + 1 }\r\n  }\r\n\r\n  if (action.type.endsWith('_SUCCESS') || action.type.endsWith('_FAILURE')) {\r\n    const requestName = action.type.replace('_SUCCESS', '').replace('_FAILURE', '')\r\n    const counter = state[requestName] || 0\r\n    return { ...state, [requestName]: counter - 1 }\r\n  }\r\n\r\n  return state\r\n}","export default function errorReducer(state = {}, action) {\r\n  if (action.type.endsWith('_FAILURE')) {\r\n    return action.error\r\n  }\r\n  // clear error whensubmitting another request\r\n  if (action.type.endsWith('_REQUEST')) {\r\n    return {}\r\n  }\r\n\r\n  return state\r\n}","// Root Reducer, combines all reducers into one single reducer\r\n\r\nimport { combineReducers } from 'redux'\r\n\r\n\r\n// reducer for updating forcegraph based on meaningfull changes.\r\nimport dataReducer from './data'\r\n\r\n//sparql endpoint data reducers\r\nimport nodesReducer from './nodes'\r\nimport linkesReducer from './links'\r\n\r\n\r\nimport datasourceReducer from './datasource'\r\n\r\n//utility reducers\r\nimport loadingReducer from './loading'\r\nimport errorReducer from './error'\r\n\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nconst appReducer = (history) => combineReducers({\r\n  data: dataReducer,\r\n  nodes: nodesReducer,\r\n  links: linkesReducer,\r\n  datasource: datasourceReducer,\r\n  loading: loadingReducer,\r\n  error: errorReducer,\r\n  router: connectRouter(history)\r\n})\r\n\r\nexport default appReducer","// redux\r\nimport { createStore, compose } from 'redux'\r\n\r\n//root reducer\r\nimport appReducer from '../reducers/index'\r\n\r\n//middleware\r\nimport middleware from './middleware'\r\nimport { history } from './middleware'\r\n\r\n//devtools\r\nimport { persistState } from 'redux-devtools'\r\nimport DevTools from '../../containers/DevTools'\r\n\r\n\r\nconst enhancer = compose(\r\n  middleware,\r\n  DevTools.instrument(),\r\n  persistState(getSessionKey())\r\n)\r\n\r\nfunction getSessionKey() {\r\n  const matches = window.location.href.match(/[?&]debug=([^&#])\\b/)\r\n  return (matches && matches.length > 0)\r\n    ? matches[1]\r\n    : null\r\n}\r\n\r\nexport default function configureStore(initialState) {\r\n  return createStore(appReducer(history), initialState, enhancer)\r\n}","import React from 'react'\r\nimport {\r\n  NavLink,\r\n} from 'react-router-dom'\r\n\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\n\r\n//import Logo from '../assets/img/logo.svg'\r\n\r\nclass Navigation extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Navigation\">\r\n        <Navbar expand=\"lg\" fixed=\"top\">\r\n          <Navbar.Brand as={NavLink} activeClassName=\"notactive\" to=\"/\">\r\n            <img\r\n              // src={Logo}\r\n              width=\"100\"\r\n              height=\"100\"\r\n              alt=\"Logo\"\r\n            /><b>React SPARQL Browser</b>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav.Link as={NavLink} exact activeClassName=\"active\" to=\"/\">Home</Nav.Link>\r\n            <Nav.Link as={NavLink} activeClassName=\"active\" to=\"/contact\">Contact</Nav.Link>\r\n            <Nav.Link as={NavLink} activeClassName=\"active\" to=\"/graph\">Graph</Nav.Link>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\n\r\nimport Navigation from './Nav'\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Header\">\r\n        <header>\r\n          <Navigation />\r\n        </header>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"Footer\">\r\n        <Container>\r\n          <Row>\r\n            <Col sm={4}></Col>\r\n            <Col sm={4}><p>© React-SPARQL-Browser {new Date().getYear() + 1900}</p></Col>\r\n            <Col sm={4}></Col>\r\n\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass Home extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <Jumbotron>\r\n          <h1>Sparql-React-Browser</h1>\r\n          <p>\r\n            Welkom bij de Sparql-React-Browser. Via deze applicatie kunt u open onderwijsdata opvragen en visualiseren. Met onderstaande zoekmogelijkheid komt u snel bij de data die u zoekt. Data wordt weergegeven in een graph JSON. Het gaat om open informatie.\r\n          </p>\r\n          <p>\r\n            <Button variant=\"primary\" onClick={() => this.props.history.push('/graph')}>Probeer uit!</Button>\r\n          </p>\r\n        </Jumbotron>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Home","import * as d3 from 'd3'\r\nimport React from 'react'\r\n\r\nclass ForceGraph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nodes: props.nodes,\r\n      links: props.links\r\n    };\r\n\r\n    // dragging\r\n    this.drag = (simulation) => {\r\n      const dragstarted = (d) => {\r\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      };\r\n\r\n      const dragged = (d) => {\r\n        d.fx = d3.event.x;\r\n        d.fy = d3.event.y;\r\n      };\r\n\r\n      const dragended = (d) => {\r\n        if (!d3.event.active) simulation.alphaTarget(0);\r\n        d.fx = null;\r\n        d.fy = null;\r\n      };\r\n\r\n      return d3\r\n        .drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended)\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('componentDidMount')\r\n    var element = document.getElementById('forcegraph');\r\n\r\n    // Redraw based on the new size whenever the browser window is resized.\r\n    window.addEventListener(\"resize\", () => {\r\n      this.removeSVG()\r\n      this.createSVG(element.offsetWidth, element.offsetHeight)\r\n      this.restartSimulation()\r\n    });\r\n\r\n    //initial forcegraph\r\n    this.createSVG(element.offsetWidth, element.offsetHeight)\r\n\r\n\r\n    //initial forces\r\n    this.forceLink = d3.forceLink().links(this.props.links).distance(400).id(function (d) { return d.id; })\r\n    this.forceCenter = d3.forceCenter((element.offsetWidth * 1) / 2, (element.offsetHeight * 1) / 2)\r\n    this.forceCharge = d3.forceManyBody().strength(-3000) //defaul -30\r\n\r\n    //simulation --> simulation gets updated upon interaction\r\n    this.simulation = d3.forceSimulation(this.props.nodes)\r\n      .force('center', this.forceCenter)\r\n      .force('charge', this.forceCharge)\r\n      .force('link', this.forceLink)\r\n    this.simulation.on('tick', () => this.setState({\r\n      //call this.setstate to rerender with react.\r\n    }));\r\n  }\r\n\r\n  componentDidUpdate(prevprops) {\r\n    this.simulation.nodes(this.props.nodes) // load new nodes\r\n    this.simulation.force('link').links(this.props.links) // load new links\r\n\r\n    //console.log('hier')\r\n    //console.log(prevprops.data.id)\r\n    //console.log(this.props.data.id)\r\n    if (this.props.data.id !== prevprops.data.id) { // check if any data has changed and restart the simulation if so currently based on id in linkreducer\r\n      //d3.selectAll(\"svg > *\").remove()\r\n\r\n      d3.select('.links').selectAll('path').remove()\r\n      d3.select('.nodesellipse').selectAll('ellipse').remove()\r\n      d3.select('.nodestext').selectAll('text').remove()\r\n      d3.select('.linkstext').selectAll('text').remove()\r\n      // d3.select('.defs').selectAll('path').remove()\r\n\r\n      console.log('restartSimulation')\r\n      this.restartSimulation()\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.simulation.stop();\r\n  }\r\n\r\n  createSVG(width, height) {\r\n    console.log('createsvg')\r\n\r\n    var zoom = d3.zoom()\r\n      .scaleExtent([.5, 10])\r\n      .on(\"zoom\", zoomed);\r\n\r\n    var svg = d3.select(\"#forcegraph\")\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"forcegraph\")\r\n      .style(\"width\", width * 1)   // set size of svg in relation to parent\r\n      .style(\"height\", height * 1) // set size of svg in relation to parent\r\n      .style(\"border\", \"1px solid black\")\r\n      .call(zoom).append(\"g\")\r\n    svg.append(\"g\").attr(\"class\", \"links\")\r\n    svg.append(\"g\").attr(\"class\", \"nodesellipse\")\r\n    svg.append(\"g\").attr(\"class\", \"nodestext\")\r\n    svg.append(\"g\").attr(\"class\", \"linkstext\")\r\n    svg.append(\"defs\").attr(\"class\", \"defs\")\r\n\r\n    function zoomed() {\r\n      const currentTransform = d3.event.transform;\r\n      svg.attr(\"transform\", currentTransform);\r\n      //slider.property(\"value\", currentTransform.k);\r\n    }\r\n\r\n    // function slided(d) {\r\n    //   zoom.scaleTo(svg, d3.select(this).property(\"value\"));\r\n    // }\r\n\r\n    // var slider = d3.select(\"#forcegraph\").append(\"p\").append(\"input\")\r\n    //   .datum({})\r\n    //   .attr(\"type\", \"range\")\r\n    //   .attr(\"value\", zoom.scaleExtent()[0])\r\n    //   .attr(\"min\", zoom.scaleExtent()[0])\r\n    //   .attr(\"max\", zoom.scaleExtent()[1])\r\n    //   .attr(\"step\", (zoom.scaleExtent()[1] - zoom.scaleExtent()[0]) / 100)\r\n    //   .on(\"input\", slided);\r\n  }\r\n\r\n  removeSVG() {\r\n    d3.select('#forcegraph').selectAll('svg').remove()\r\n  }\r\n\r\n  restartSimulation() {\r\n    this.simulation.alpha(1).restart()\r\n  }\r\n\r\n  links() {\r\n    var selection = d3.select('.links')\r\n      .selectAll('path')\r\n      .data(this.props.links)\r\n\r\n    selection.enter()\r\n      .append('path')\r\n      .attr(\"class\", function (d) { return \"link\" })\r\n      .attr(\"class\", function (d) { return \"link \" + d.property; })\r\n      .attr(\"id\", function (d, i) { return \"linkId_\" + i; })\r\n      .attr(\"marker-end\", function (d) { return \"url(#\" + d.property.replace(/\\s/g, '') + \")\"; }) //removed to allow matching\r\n      .merge(selection)\r\n      .attr(\"d\", function (d) {\r\n        var dx = d.target.x - d.source.x\r\n        var dy = d.target.y - d.source.y\r\n        if (d.linknum) {\r\n          var dr = d.linknum * 150 - 150;\r\n        }\r\n        else {\r\n          var dr = 0\r\n        }\r\n\r\n        return \"M\" + d.source.x + \",\" + d.source.y + \"A\" + dr + \",\" + dr + \" 0 0,1 \" + d.target.x + \",\" + d.target.y;\r\n      })\r\n\r\n\r\n\r\n    selection.exit().remove()\r\n  }\r\n\r\n  nodesellipse() {\r\n    var selection = d3.select('.nodesellipse')\r\n      .selectAll('ellipse')\r\n      .data(this.props.nodes)             //bind data\r\n      .call(this.drag(this.simulation));            //allow dragging  \r\n\r\n    selection.enter()                     //for each row in the data do...\r\n      .append('ellipse')\r\n      .on('click', function (d) {\r\n\r\n      })\r\n      .on(\"mouseover\", function (d) {\r\n        console.log('mouseover')\r\n      })\r\n      .on(\"mouseout\", function (d) {\r\n        console.log('mouseout')\r\n      })\r\n      .on(\"mousedown\", function (d) {\r\n        console.log('mousedown')\r\n      })\r\n      .on(\"mouseup\", function (d) {\r\n        console.log('mouseup')\r\n      })\r\n      .attr(\"rx\", function (d) { return 30 }) //d.id.length\r\n      .attr(\"ry\", function (d) { return 30 }) //d.id.length\r\n      .attr(\"class\", \"ellipse\")\r\n      .classed('uri', function (d) { return d.type === 'uri' })\r\n      .classed('literal', function (d) { return d.type === 'literal' })\r\n      //.style(\"fill\", \"#FD8D3C\")\r\n      .merge(selection)\r\n      .attr(\"transform\", function (d) {\r\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n      })\r\n\r\n    selection.exit().remove()\r\n\r\n  }\r\n\r\n  nodestext() {\r\n    var selection = d3.select('.nodestext')\r\n      .selectAll('text')\r\n      .data(this.props.nodes)                        //bind data\r\n      .call(this.drag(this.simulation));            //allow dragging  \r\n\r\n    selection.enter()                     //for each row in the data do...\r\n      .append('text')\r\n\r\n      .on('click', function (d) {\r\n\r\n      })\r\n      .on(\"mouseover\", function (d) {\r\n        console.log('mouseover')\r\n      })\r\n      .on(\"mouseout\", function (d) {\r\n        console.log('mouseout')\r\n      })\r\n      .on(\"mousedown\", function (d) {\r\n        console.log('mousedown')\r\n      })\r\n      .on(\"mouseup\", function (d) {\r\n        console.log('mouseup')\r\n      })\r\n      .text(function (d) {\r\n        if (d.type === 'uri') {\r\n          var nodeURL = d.id.split('/')\r\n          nodeURL.splice(0, 3)\r\n          nodeURL = nodeURL.join('/')\r\n          console.log('nodeURL: ' + nodeURL)\r\n          return nodeURL;\r\n        }\r\n        return d.id;\r\n      })\r\n      .merge(selection)\r\n      .attr(\"transform\", function (d) {\r\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n      });\r\n    // 2nd way of doing it\r\n    // .attr('x', function (d) { return d.x })\r\n    // .attr('y', function (d) { return d.y })\r\n    // .attr('dy', function (d) { return 5 })\r\n\r\n    selection.exit().remove()\r\n  }\r\n\r\n  linktext() {\r\n    var selection = d3.select('.linkstext')\r\n      .selectAll('text')\r\n      .data(this.props.links)\r\n\r\n    selection.enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", \"200\")\r\n      .attr(\"class\", \"linklabel\")\r\n      .append(\"textPath\")\r\n      .attr(\"xlink:href\", function (d, i) { return \"#linkId_\" + i; })\r\n      .text(function (d) {\r\n        var propertyURL = d.property.split('/')\r\n        propertyURL.splice(0, 3)\r\n        propertyURL = propertyURL.join('/')\r\n        console.log('propertyURL: ' + propertyURL)\r\n        return propertyURL;\r\n      })\r\n\r\n    selection.exit().remove()\r\n\r\n  }\r\n\r\n  linkmarker() {\r\n    var selection = d3.select('.defs')\r\n      .selectAll('marker')\r\n      .data(this.getAllLinkPropertys())\r\n\r\n    selection.enter()\r\n      .append(\"marker\")\r\n      .attr(\"id\", String)\r\n      .attr(\"viewBox\", \"0 -5 10 10\")\r\n      .attr(\"refX\", 40) // distance from link\r\n      .attr(\"refY\", 0) //deviation from link linke\r\n      .attr(\"markerWidth\", 6)\r\n      .attr(\"markerHeight\", 6)\r\n      .attr(\"orient\", \"auto\")\r\n      .append(\"svg:path\")\r\n      .attr(\"d\", \"M0,-5L10,0L0,5\");\r\n\r\n\r\n    selection.exit().remove()\r\n  }\r\n\r\n  getAllLinkPropertys() {\r\n\r\n    var linkpropertys = []\r\n    this.props.links.forEach(element => {\r\n      linkpropertys.push(element.property.replace(/\\s/g, ''))\r\n    });\r\n    return linkpropertys\r\n  }\r\n\r\n  getConNodes() {\r\n    console.log('conNodes')\r\n  }\r\n\r\n  render() {\r\n    this.links()\r\n    this.nodesellipse()\r\n    this.nodestext()\r\n    this.linktext()\r\n    this.linkmarker()\r\n\r\n\r\n\r\n    return (\r\n      <div id=\"forcegraph\">\r\n        {/* {this.props.nodes.map((node, index) => (\r\n            <Circle node={node} index={index}></Circle>\r\n          ))}\r\n          {this.props.links.map((link, index) => (\r\n            <Link link={link} index={index}></Link>\r\n          ))} */}\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nForceGraph.defaultProps = {\r\n  width: 600,\r\n  height: 600,\r\n  forceStrength: -10\r\n};\r\n\r\nexport default ForceGraph\r\n\r\n\r\nclass Circle extends React.Component {\r\n  render() {\r\n    return (\r\n      <g>\r\n        <circle r={20} cx={this.props.node.x} cy={this.props.node.y} fill=\"red\" key={this.props.index} onClick={() => alert('You have clicked the circle.')} />\r\n        <text>{this.props.node.id}</text>\r\n      </g>\r\n\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nclass Link extends React.Component {\r\n  render() {\r\n    return (<line\r\n      x1={this.props.link.source.x}\r\n      y1={this.props.link.source.y}\r\n      x2={this.props.link.target.x}\r\n      y2={this.props.link.target.y}\r\n      key={`line-${this.props.index}`}\r\n      stroke=\"black\" />)\r\n  }\r\n\r\n}","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ForceGraph from '../components/ForceGraph'\r\nimport ForceGraphOld from '../components/ForceGraphOld'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    nodes: state.nodes,\r\n    links: state.links,\r\n    data: state.data,\r\n    history: state.router\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({}, dispatch)\r\n\r\nconst ConnectedForceGraph = connect(mapStateToProps, mapDispatchToProps)(ForceGraph)\r\n\r\nexport default ConnectedForceGraph","import * as d3 from 'd3'\r\nimport React from 'react'\r\n\r\nclass ForceGraph extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    console.log('ForceGraph rerendered')\r\n  }\r\n\r\n  componentDidMount() {\r\n    var element = document.getElementById('forcegraph');\r\n\r\n    // Redraw based on the new size whenever the browser window is resized.\r\n    window.addEventListener(\"resize\", () => {\r\n      this.removeSVG()\r\n      this.createSVG(element.offsetWidth, element.offsetHeight)\r\n      this.createSimulation(this.props.nodes, this.props.links, element.offsetWidth, element.offsetHeight)\r\n    });\r\n\r\n    this.createSVG(element.offsetWidth, element.offsetHeight)\r\n    this.createSimulation(this.props.nodes, this.props.links, element.offsetWidth, element.offsetHeight)\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.removeSimulation()\r\n    var element = document.getElementById('forcegraph');\r\n    this.createSimulation(this.props.nodes, this.props.links, element.offsetWidth, element.offsetHeight)\r\n  }\r\n\r\n  createSVG(width, height) {\r\n    console.log('createsvg')\r\n\r\n    var zoom = d3.zoom()\r\n      .scaleExtent([.5, 10])\r\n      .on(\"zoom\", zoomed);\r\n\r\n    var svg = d3.select(\"#forcegraph\")\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"forcegraph\")\r\n      .style(\"width\", width * 1)   // set size of svg in relation to parent\r\n      .style(\"height\", height * 1) // set size of svg in relation to parent\r\n      .style(\"border\", \"1px solid black\")\r\n      .call(zoom).append(\"g\")\r\n    svg.append(\"g\").attr(\"class\", \"links\")\r\n    svg.append(\"g\").attr(\"class\", \"nodesellipse\")\r\n    svg.append(\"g\").attr(\"class\", \"nodestext\")\r\n    svg.append(\"g\").attr(\"class\", \"linkstext\")\r\n    svg.append(\"defs\").attr(\"class\", \"defs\")\r\n\r\n    function zoomed() {\r\n      const currentTransform = d3.event.transform;\r\n      svg.attr(\"transform\", currentTransform);\r\n      //slider.property(\"value\", currentTransform.k);\r\n    }\r\n\r\n    // function slided(d) {\r\n    //   zoom.scaleTo(svg, d3.select(this).property(\"value\"));\r\n    // }\r\n\r\n    // var slider = d3.select(\"#forcegraph\").append(\"p\").append(\"input\")\r\n    //   .datum({})\r\n    //   .attr(\"type\", \"range\")\r\n    //   .attr(\"value\", zoom.scaleExtent()[0])\r\n    //   .attr(\"min\", zoom.scaleExtent()[0])\r\n    //   .attr(\"max\", zoom.scaleExtent()[1])\r\n    //   .attr(\"step\", (zoom.scaleExtent()[1] - zoom.scaleExtent()[0]) / 100)\r\n    //   .on(\"input\", slided);\r\n  }\r\n\r\n  removeSVG() {\r\n    d3.select('#forcegraph').selectAll('svg').remove()\r\n  }\r\n\r\n  removeSimulation() {\r\n    d3.select('.nodestext').selectAll('text').remove();\r\n    d3.select('.nodesellipse').selectAll('ellipse').remove();\r\n    d3.select('.links').selectAll('path').remove();\r\n    d3.select('.linkstext').selectAll('text').remove();\r\n\r\n  }\r\n\r\n  createSimulation(nodes, links, width, height) {\r\n    //simulation\r\n\r\n    var forceLink = d3.forceLink().links(links).distance(400).id(function (d) { return d.id; })\r\n    var forceCenter = d3.forceCenter((width * 1) / 2, (height * 1) / 2)\r\n    var forceCharge = d3.forceManyBody().strength(-1000) //defaul -30\r\n\r\n    var simulation = d3.forceSimulation(nodes)\r\n      .force('center', forceCenter)\r\n      .force('charge', forceCharge)\r\n      .force('link', forceLink)\r\n      .on('tick', ticked);\r\n\r\n    //node properties\r\n    function updateNodesText() {\r\n      var selection = d3.select('.nodestext')\r\n        .selectAll('text')\r\n        .data(nodes)                        //bind data\r\n        .call(drag(simulation));            //allow dragging  \r\n\r\n      selection.enter()                     //for each row in the data do...\r\n        .append('text')\r\n        .on('click', function (d) {\r\n          //alert(d.id)\r\n          //d3.select(this).style(\"fill\", \"magenta\")\r\n        })\r\n        .on(\"mouseover\", function (d) {\r\n          set_highlight(d, get_connectedNodes(d), get_connectedLinks(d));\r\n        })\r\n        .on(\"mouseout\", function (d) {\r\n          exit_highlight(d);\r\n          exit_fade(d)\r\n        })\r\n        .on(\"mousedown\", function (d) {\r\n          console.log('d nodetext:' + d.id)\r\n          set_fade(d, get_connectedNodes(d));\r\n\r\n        })\r\n        .on(\"mouseup\", function (d) {\r\n          console.log('mouseup')\r\n        })                    //add element\r\n        .text(function (d) {                // add attributes\r\n          return d.id\r\n        })\r\n        .merge(selection)\r\n        .attr(\"transform\", function (d) {\r\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n        });\r\n      // 2nd way of doing it\r\n      // .attr('x', function (d) { return d.x })\r\n      // .attr('y', function (d) { return d.y })\r\n      // .attr('dy', function (d) { return 5 })\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    function updateNodesellipse() {\r\n      var selection = d3.select('.nodesellipse')\r\n        .selectAll('ellipse')\r\n        .data(nodes)             //bind data\r\n        .call(drag(simulation));            //allow dragging  \r\n\r\n      selection.enter()                     //for each row in the data do...\r\n        .append('ellipse')\r\n        .on('click', function (d) {\r\n          //alert(d.id)\r\n          //d3.select(this).style(\"fill\", \"magenta\")\r\n        })\r\n        .on(\"mouseover\", function (d) {\r\n          set_highlight(d, get_connectedNodes(d), get_connectedLinks(d));\r\n        })\r\n        .on(\"mouseout\", function (d) {\r\n          exit_highlight(d);\r\n          exit_fade(d);\r\n        })\r\n        .on(\"mousedown\", function (d) {\r\n          console.log('d nodeellipse:' + d.id)\r\n          set_fade(d, get_connectedNodes(d));\r\n        })\r\n        .on(\"mouseup\", function (d) {\r\n          console.log('mouseup')\r\n        })\r\n        .attr(\"rx\", function (d) { return 30 }) //d.id.length\r\n        .attr(\"ry\", function (d) { return 30 }) //d.id.length\r\n        .attr(\"class\", \"ellipse\")\r\n        .classed('uri', function (d) { return d.type === 'uri' })\r\n        .classed('literal', function (d) { return d.type === 'literal' })\r\n        //.style(\"fill\", \"#FD8D3C\")\r\n        .merge(selection)\r\n        .attr(\"transform\", function (d) {\r\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n        })\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    //link properties\r\n    function updateLinks() {\r\n      var selection = d3.select('.links')\r\n        .selectAll('path')\r\n        .data(links)\r\n\r\n      selection.enter()\r\n        .append('path')\r\n        .attr(\"class\", function (d) { return \"link\" })\r\n        .attr(\"class\", function (d) { return \"link \" + d.property; })\r\n        .attr(\"id\", function (d, i) { return \"linkId_\" + i; })\r\n        .attr(\"marker-end\", function (d) { return \"url(#\" + d.property.replace(/\\s/g, '') + \")\"; }) //removed to allow matching\r\n        .merge(selection)\r\n        .attr(\"d\", function (d) {\r\n          var dx = d.target.x - d.source.x\r\n          var dy = d.target.y - d.source.y\r\n          if (d.linknum) {\r\n            var dr = d.linknum * 150 - 150;\r\n          }\r\n          else {\r\n            var dr = 0\r\n          }\r\n\r\n          return \"M\" + d.source.x + \",\" + d.source.y + \"A\" + dr + \",\" + dr + \" 0 0,1 \" + d.target.x + \",\" + d.target.y;\r\n        })\r\n\r\n\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    function updateLinksText() {\r\n      var selection = d3.select('.linkstext')\r\n        .selectAll('text')\r\n        .data(links)\r\n\r\n      selection.enter()\r\n        .append(\"text\")\r\n        .attr(\"x\", \"200\")\r\n        .attr(\"class\", \"linklabel\")\r\n        .append(\"textPath\")\r\n        .attr(\"xlink:href\", function (d, i) { return \"#linkId_\" + i; })\r\n        .text(function (d) {\r\n          return d.property;\r\n        })\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    function updateLinkMarkers() {\r\n      var selection = d3.select('.defs')\r\n        .selectAll('marker')\r\n        .data(getAllLinkPropertys())\r\n\r\n      selection.enter()\r\n        .append(\"marker\")\r\n        .attr(\"id\", String)\r\n        .attr(\"viewBox\", \"0 -5 10 10\")\r\n        .attr(\"refX\", 40) // distance from link\r\n        .attr(\"refY\", 0) //deviation from link linke\r\n        .attr(\"markerWidth\", 6)\r\n        .attr(\"markerHeight\", 6)\r\n        .attr(\"orient\", \"auto\")\r\n        .append(\"svg:path\")\r\n        .attr(\"d\", \"M0,-5L10,0L0,5\");\r\n\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    function getAllLinkPropertys() {\r\n\r\n      var linkpropertys = []\r\n      links.forEach(element => {\r\n        linkpropertys.push(element.property.replace(/\\s/g, ''))\r\n      });\r\n      return linkpropertys\r\n    }\r\n\r\n    //update drawing nodes and links\r\n    function ticked() {\r\n      console.log('ticked')\r\n      updateNodesText()\r\n      updateNodesellipse()\r\n      updateLinks()\r\n      updateLinksText()\r\n      updateLinkMarkers()\r\n    }\r\n\r\n    // dragging\r\n    const drag = (simulation) => {\r\n      const dragstarted = (d) => {\r\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      };\r\n\r\n      const dragged = (d) => {\r\n        d.fx = d3.event.x;\r\n        d.fy = d3.event.y;\r\n      };\r\n\r\n      const dragended = (d) => {\r\n        if (!d3.event.active) simulation.alphaTarget(0);\r\n        d.fx = null;\r\n        d.fy = null;\r\n      };\r\n\r\n      return d3\r\n        .drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended)\r\n    };\r\n\r\n    function get_connectedNodes(d) {\r\n      //get connected nodes of d\r\n      var connectedNodes = []\r\n\r\n      connectedNodes.push(d.id) //add the node that is being hoverd so that it is also highlighted\r\n\r\n      links.forEach(link => {\r\n        if (link.source.id === d.id) {\r\n          if (!connectedNodes.includes(link.target.id)) connectedNodes.push(link.target.id)\r\n        }\r\n        if (link.target.id === d.id) {\r\n          if (!connectedNodes.includes(link.source.id)) connectedNodes.push(link.source.id)\r\n        }\r\n      });\r\n      console.log('connectedNodes: ')\r\n      console.log(connectedNodes)\r\n      return connectedNodes\r\n    }\r\n\r\n    function get_connectedLinks(d) {\r\n      //get connected links of d\r\n      var connectedLinks = []\r\n\r\n      links.forEach(link => {\r\n        if (link.source.id === d.id || link.target.id === d.id) {\r\n          connectedLinks.push({ source: link.source.id, target: link.target.id })\r\n        }\r\n      });\r\n      console.log('connectedLinks: ')\r\n      console.log(connectedLinks)\r\n      return connectedLinks\r\n    }\r\n\r\n    function set_highlight(d, connectedNodes) {\r\n      // filter based on connectednodes\r\n      d3.select('.nodesellipse').selectAll('ellipse')\r\n        .filter(function (ellipses) {\r\n          if (connectedNodes.includes(ellipses.id)) { return true }\r\n          else { return false }\r\n        })\r\n        // set class\r\n        .classed('ellipse_highlight', true);\r\n    }\r\n\r\n    function exit_highlight(d) {\r\n      //remove all highlights\r\n      d3.select('.nodesellipse').selectAll('ellipse')\r\n        .filter(function (d) { return true })\r\n        .classed('ellipse_highlight', false);\r\n    }\r\n\r\n    function set_fade(d, connectedNodes) {\r\n      console.log('setting fade')\r\n      d3.select('.nodesellipse').selectAll('ellipse')\r\n        .filter(function (ellipses) {\r\n          if (!(connectedNodes.includes(ellipses.id))) { return true }\r\n          else { return false }\r\n        })\r\n        // set class\r\n        .classed('faded', true);\r\n\r\n\r\n      d3.select('.nodestext').selectAll('text')\r\n        .filter(function (ellipses) {\r\n          if (!(connectedNodes.includes(ellipses.id))) { return true }\r\n          else { return false }\r\n        })\r\n        // set class\r\n        .classed('faded', true);\r\n\r\n\r\n    }\r\n    function exit_fade(d) {\r\n      //remove all highlights\r\n      d3.select('.nodesellipse').selectAll('ellipse')\r\n        .filter(function (d) { return true })\r\n        .classed('faded', false);\r\n\r\n      d3.select('.nodestext').selectAll('text')\r\n        .filter(function (d) { return true })\r\n        .classed('faded', false);\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return <div id=\"forcegraph\">\r\n    </div >;\r\n  }\r\n}\r\n\r\nexport default ForceGraph","import React from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      query: \"SELECT * WHERE\" + \"{\" + \"?sub ?pred ?obj .\" + \"}\" + \"LIMIT 10\",\r\n      subject: \"http://lod.onderwijsregistratie.nl/rio/id/Onderwijsbestuur/100B490\",\r\n    }\r\n\r\n    this.handleQueryChange = this.handleQueryChange.bind(this);\r\n    this.handleQuerySubmit = this.handleQuerySubmit.bind(this);\r\n\r\n    this.handleSubjectChange = this.handleSubjectChange.bind(this)\r\n    this.handleSubjectDetailsQuerySubmit = this.handleSubjectDetailsQuerySubmit.bind(this)\r\n\r\n  }\r\n\r\n  handleQueryChange(event) {\r\n    console.log(event.target.value)\r\n    this.setState({ query: event.target.value });\r\n  }\r\n\r\n  handleQuerySubmit(event) {\r\n    this.props.fetchSparql(this.state.query, this.props.datasource.currentDatasource)\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleSubjectChange(event) {\r\n    console.log(event.target.value)\r\n    this.setState({ subject: event.target.value });\r\n  }\r\n\r\n  handleSubjectDetailsQuerySubmit(event) {\r\n    var uri = this.state.subject\r\n    const query = 'SELECT * ' +\r\n      'WHERE { <' + uri + '> ?property ?object }' +\r\n      'limit 20';\r\n    this.props.fetchAboutSubject(query, uri, this.props.datasource.currentDatasource)\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <div id=\"queryform\">\r\n          <Form onSubmit={this.handleQuerySubmit}>\r\n\r\n            <Form.Group controlId=\"QueryInput\">\r\n              <Form.Label>Query input:</Form.Label>\r\n              <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Input query\" value={this.state.query} onChange={this.handleQueryChange} />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n          </Form>\r\n        </div>\r\n\r\n        <div id=\"querysubjectdetails form\">\r\n          <Form onSubmit={this.handleSubjectDetailsQuerySubmit}>\r\n\r\n            <Form.Group controlId=\"SubjectInput\">\r\n              <Form.Label>Query input:</Form.Label>\r\n              <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Input subject\" value={this.state.subject} onChange={this.handleSubjectChange} />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n          </Form>\r\n        </div>\r\n\r\n        <div id=\"buttons\">\r\n          <p>{this.props.datasource.currentDatasource.endpoint}</p>\r\n          <button onClick={() => this.props.fetchTest()}>Fetch Test</button>\r\n          <button onClick={() => this.props.fetchSparql(this.state.query, this.props.datasource.currentDatasource)}>Fetch Sparql</button>\r\n          <button onClick={() => this.props.push('/graph')}>Ga naar graph</button>\r\n        </div>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search\r\n\r\n","import { SET_CURRENT_DATASOURCE } from '../actionTypes'\r\n\r\nexport const setCurrentDatasource = (datasource) => {\r\n  return {\r\n    type: SET_CURRENT_DATASOURCE,\r\n    datasource\r\n  }\r\n}\r\n","export const thunkCreator = (action) => {\r\n  const { types, promise, ...rest } = action\r\n  const [REQUESTED, RESOLVED, REJECTED] = types\r\n\r\n  return (dispatch) => {\r\n    dispatch({ ...rest, type: REQUESTED })\r\n\r\n    return promise\r\n      .then(result => {\r\n        if (result.error || result.errors) throw new Error(result.error)\r\n        dispatch({ ...rest, type: RESOLVED, result })\r\n        return result\r\n      })\r\n      .catch(error => {\r\n        dispatch({ ...rest, type: REJECTED, error })\r\n        //throw error\r\n      })\r\n  }\r\n}","import { FETCH_TEST_REQUEST, FETCH_TEST_SUCCESS, FETCH_TEST_FAILURE } from '../actionTypes'\r\nimport { FETCH_SPARQL_REQUEST, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_FAILURE } from '../actionTypes'\r\nimport { FETCH_SPARQL_ABOUTSUBJECT_REQUEST, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_FAILURE } from '../actionTypes'\r\nimport { thunkCreator } from './utils'\r\nimport qs from 'qs'\r\n\r\nconst axios = require('axios');\r\n\r\nexport const fetchTest = () => thunkCreator({\r\n  types: [FETCH_TEST_REQUEST, FETCH_TEST_SUCCESS, FETCH_TEST_FAILURE],\r\n  promise: fetch(`https://www.anapioficeandfire.com/api/books`)\r\n    .then(response => response.json())\r\n    .catch(error => { console.log(error) })\r\n\r\n})\r\n\r\nexport const fetchSparql = (query, datasource) => thunkCreator({\r\n  types: [FETCH_SPARQL_REQUEST, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_FAILURE],\r\n  promise: axios({\r\n    method: 'post',\r\n    url: datasource,\r\n    data: qs.stringify({\r\n      action: 'exec',\r\n      queryLn: 'SPARQL',\r\n      ref: 'text',\r\n      query,\r\n    }),\r\n    headers: {\r\n      Accept: 'application/sparql-results+json'\r\n    },\r\n\r\n  })\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})\r\n\r\nexport const fetchAboutSubject = (query, subject, datasource) => thunkCreator({\r\n  types: [FETCH_SPARQL_ABOUTSUBJECT_REQUEST, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_FAILURE],\r\n  promise: axios({\r\n    method: 'post',\r\n    url: datasource,\r\n    data: qs.stringify({\r\n      action: 'exec',\r\n      queryLn: 'SPARQL',\r\n      ref: 'text',\r\n      query,\r\n    }),\r\n    headers: {\r\n      Accept: 'application/sparql-results+json'\r\n    },\r\n    subject: subject\r\n\r\n  })\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Search from '../components/Search'\r\nimport { fetchTest, fetchSparql, fetchAboutSubject } from '../redux/actions/index'\r\nimport { push } from 'connected-react-router'\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    nodes: state.nodes,\r\n    links: state.links,\r\n    datasource: state.datasource,\r\n    history: state.router\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({ fetchTest, fetchSparql, fetchAboutSubject, push }, dispatch)\r\n\r\nconst ConnectedSearch = connect(mapStateToProps, mapDispatchToProps)(Search)\r\n\r\nexport default ConnectedSearch","import React from 'react';\r\nimport { Dropdown } from 'react-bootstrap'\r\n\r\nclass DataSourceDropdown extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"datasourceDropdown\">\r\n        <Dropdown>\r\n          <Dropdown.Toggle >\r\n            Geselecteerde bron: {this.props.datasource.currentDatasource}\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n            {this.props.datasource.datasources.map((item, key) =>\r\n              <Dropdown.Item key={key} onClick={() => this.props.setCurrentDatasource(item)}>\r\n                {item.name}\r\n              </Dropdown.Item>\r\n            )}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DataSourceDropdown\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport DataSourceDropdown from '../components/DataSourceDropdown'\r\nimport { setCurrentDatasource } from '../redux/actions/index';\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    datasource: state.datasource\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({ setCurrentDatasource }, dispatch)\r\n\r\nconst ConnectedDataSourceDropdown = connect(mapStateToProps, mapDispatchToProps)(DataSourceDropdown)\r\n\r\nexport default ConnectedDataSourceDropdown","import React from 'react'\r\n\r\nimport ConnectedForceGraph from '../containers/ConnectedForceGraph';\r\nimport ConnectedSearch from '../containers/ConnectedSearch'\r\nimport ConnectedDataSourceDropdown from '../containers/ConnectedDataSourceDropdown'\r\n\r\nclass Graph extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Graph\">\r\n        <h2>Graph</h2>\r\n        <ConnectedSearch />\r\n        <ConnectedDataSourceDropdown />\r\n        <ConnectedForceGraph />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Graph","import React from 'react'\r\n\r\nclass Contact extends React.Component {\r\n  onSubmit = () => {\r\n    this.props.history.push('/')\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Contact\">\r\n        <h2>Contact form</h2>\r\n        <form>\r\n          <input placeholder=\"name\" type=\"name\" />\r\n          <input placeholder=\"email\" type=\"email\" />\r\n          <button onClick={this.onSubmit}>Submit</button>\r\n        </form>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Contact","import React from 'react'\r\n\r\nclass NotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"NotFound\">\r\n        <h1>Not Found...</h1>\r\n        <button onClick={() => this.props.history.push('/home')}>Go home</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default NotFound","import React from 'react'\r\nimport {\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom'\r\n\r\n\r\n\r\n//pages\r\nimport Home from '../pages/Home'\r\nimport Graph from '../pages/Graph'\r\nimport Contact from '../pages/Contact'\r\nimport Notfound from '../pages/NotFound'\r\n\r\nclass PageContent extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"PageContent\">\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/home\" component={Home} />\r\n            <Route path=\"/sparql-react-browser/\" component={Home} />\r\n            <Route path=\"/graph\" component={Graph} />\r\n            <Route path=\"/contact\" component={Contact} />\r\n\r\n            <Route component={Notfound} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PageContent","import React from 'react'\r\n\r\nconst Loading = ({ isLoading }) =>\r\n  isLoading && <span>Loading...</span>\r\n\r\nexport default Loading","import { connect } from 'react-redux'\r\nimport Loading from '../components/Loading'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const { loading } = state\r\n\r\n  const isLoading = Object.keys(loading).reduce((result, requestName) => {\r\n    if (result === true) return true\r\n    if (loading[requestName] > 0) return true\r\n    return false\r\n  }, false)\r\n\r\n  return { isLoading }\r\n}\r\n\r\nconst ConnectedLoading = connect(mapStateToProps)(Loading)\r\n\r\nexport default ConnectedLoading","import React from 'react'\r\n\r\nconst Error = ({ message }) =>\r\n  message\r\n    ? <span style={{ color: 'red' }}>Error: {message}</span>\r\n    : null\r\n\r\nexport default Error","import { connect } from 'react-redux'\r\n\r\nimport Error from '../components/Error'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    message: state.error && state.error.message\r\n  }\r\n}\r\n\r\nconst ConnectedError = connect(mapStateToProps)(Error)\r\n\r\nexport default ConnectedError","import React from 'react';\r\n\r\n//Router\r\nimport { ConnectedRouter } from 'connected-react-router'\r\nimport { history } from './redux/store/middleware'\r\n\r\n//bootstrap stylesheet\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n//custom stylesheet\r\nimport './css/App.scss';\r\n\r\n//devtools\r\nimport DevTools from './containers/DevTools.jsx'\r\n\r\nimport { Provider } from 'react-redux'\r\n\r\nimport configureStore from './redux/store/index'\r\n\r\n//Bootrap components\r\nimport Container from 'react-bootstrap/Container'\r\n\r\n// Layout components\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport PageContent from './components/PageContent';\r\nimport ConnectedLoading from './containers/ConnectedLoading'\r\nimport ConnectedError from './containers/ConnectedError'\r\n\r\n//init redux store\r\nconst store = configureStore()\r\n\r\nconsole.log('initializing store: ', store.getState())\r\n\r\n// const unsubscribe = store.subscribe(() => {\r\n//   //console.log('state changed: ', store.getState())\r\n// })\r\n\r\n\r\n\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <div className=\"App\">\r\n      <ConnectedRouter history={history}>\r\n        <Header />\r\n        <Container>\r\n          <PageContent />\r\n          <ConnectedLoading />\r\n          <ConnectedError />\r\n        </Container>\r\n\r\n        <Footer />\r\n      </ConnectedRouter>\r\n      {/* exclude devtools in production */}\r\n      {(process.env.NODE_ENV !== 'production') && <DevTools />}\r\n    </div>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}