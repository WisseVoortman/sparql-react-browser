{"version":3,"sources":["redux/store/middleware.js","containers/DevTools.jsx","redux/reducers/data.js","redux/actionTypes.js","redux/reducers/nodes.js","redux/reducers/links.js","redux/reducers/datasource.js","redux/reducers/forcegraphSettings.js","redux/reducers/loading.js","redux/reducers/error.js","redux/reducers/index.js","redux/store/index.js","components/Nav.js","components/Header.js","components/Footer.js","pages/Home.js","components/D3NodeGenerator.js","components/D3LinkGenerator.js","components/ForceGraph.js","redux/actions/datasource.js","components/ForceGraphOld.js","redux/actions/utils.js","redux/actions/sparql.js","redux/actions/nodes.js","containers/ConnectedForceGraph.js","components/QueryForm.js","containers/ConnectedQueryForm.js","components/AddDataSource.js","containers/ConnectedAddDatasource.js","components/DataSource.js","containers/ConnectedDataSource.js","components/Examples.js","containers/ConnectedExamples.js","pages/Graph.js","pages/Contact.js","pages/NotFound.js","components/PageContent.js","components/Loading.js","containers/ConnectedLoading.js","components/Error.js","containers/ConnectedError.js","App.js","index.js"],"names":["history","createBrowserHistory","middleware","applyMiddleware","thunkMiddleware","routerMiddleware","DevTools","createDevTools","toggleVisibilityKey","changePositionKey","defaultIsVisible","theme","dataReducer","state","id","action","NewState","Object","assign","type","nodeReducer","selectedNode","nodesList","node","links","source","value","target","property","templist","forEach","link","includes","push","console","log","vars","result","data","head","results","bindings","element","config","subject","split","linkReducer","sort","a","b","i","length","linknum","datasourceReducer","searchAll","currentDatasource","datasources","name","endpoint","active","newState","datasource","index","indexOf","splice","forcegraphSettingsReducer","linkDistance","min","max","forceCharge","settings","loadingReducer","endsWith","requestName","replace","counter","errorReducer","error","appReducer","combineReducers","nodes","nodesReducer","linkesReducer","forcegraphsettings","loading","router","connectRouter","enhancer","compose","instrument","persistState","matches","window","location","href","match","getSessionKey","Navigation","Navbar","expand","Container","Brand","as","NavLink","activeClassName","to","width","height","alt","Toggle","aria-controls","Collapse","Nav","Link","exact","React","Component","Header","className","Footer","Date","getYear","Home","Jumbotron","Button","variant","onClick","props","D3NodeGenerator","drag","simulation","d3","on","d","selectAll","remove","rs","fx","x","fy","y","selection","this","call","enter","append","ssn","rsn","facn","attr","classed","merge","exit","style","pageX","pageY","text","dropdownMenu","transition","duration","nodeURL","join","renderNodeEllipse","renderNodeText","D3LinkGenerator","linkpropertys","linksList","dr","open","getAllLinkPropertys","String","ForceGraph","restartSimulation","bind","setSelectedNode","removeSelectedNode","fetchAboutClickedNode","document","getElementById","addEventListener","removeSVG","createSVG","offsetWidth","offsetHeight","forceLink","distance","forceCenter","strength","force","setState","prevprops","stop","zoom","scaleExtent","currentTransform","transform","svg","alpha","restart","defaultProps","forceStrength","initialState","setCurrentDatasource","toggleSearchAll","toggleBlockDatasource","deleteDatasource","addDatasource","thunkCreator","types","promise","rest","REQUESTED","RESOLVED","REJECTED","dispatch","then","errors","Error","catch","axios","require","fetchTest","fetch","response","json","fetchSparql","query","method","url","qs","stringify","queryLn","ref","headers","Accept","fetchAboutSubject","ConnectedForceGraph","connect","bindActionCreators","QueryForm","handleQueryChange","handleQuerySubmit","handleSubjectChange","handleSubjectDetailsQuerySubmit","event","preventDefault","uri","Form","onSubmit","Group","controlId","Label","Control","rows","placeholder","onChange","ConnectedQueryForm","AddDatasource","show","handleNameChange","handleEndpointChange","handleModal","Modal","onHide","closeButton","Title","Body","handleSubmitDatasource","ConnectedAddDatasource","DataSourceDropdown","Row","Col","sm","Dropdown","Menu","map","item","key","Item","ButtonGroup","renderBlockButton","renderDatasourceDropdown","ConnectedDataSource","DataSource","Example","CardDeck","Card","Text","ConnectedExamples","Examples","Graph","path","fill","defaultActiveKey","component","Contact","NotFound","PageContent","Notfound","Loading","isLoading","ConnectedLoading","keys","reduce","message","color","ConnectedError","store","createStore","getState","App","process","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b0e09ae0.chunk.js","sourcesContent":["import thunkMiddleware from 'redux-thunk'\r\n\r\nimport { applyMiddleware } from 'redux'\r\nimport { routerMiddleware } from 'connected-react-router'\r\n\r\nimport { createBrowserHistory } from 'history'\r\nexport const history = createBrowserHistory()\r\n\r\nconst middleware = applyMiddleware(\r\n  thunkMiddleware,\r\n  routerMiddleware(history)\r\n)\r\n\r\nexport default middleware","import React from 'react'\r\n\r\nimport { createDevTools } from 'redux-devtools'\r\n\r\nimport LogMonitor from 'redux-devtools-log-monitor'\r\nimport DockMonitor from 'redux-devtools-dock-monitor'\r\n\r\nconst DevTools = createDevTools(\r\n  <DockMonitor\r\n    toggleVisibilityKey='ctrl-h'\r\n    changePositionKey='ctrl-q'\r\n    defaultIsVisible={true}\r\n  >\r\n    <LogMonitor theme='tomorrow' />\r\n  </DockMonitor>\r\n)\r\n\r\nexport default DevTools","import { FETCH_TEST_SUCCESS, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS } from '../actionTypes'\r\n\r\nexport default function dataReducer(state = {\r\n  id: 1,\r\n\r\n},\r\n  action) {\r\n  let NewState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case FETCH_TEST_SUCCESS: {\r\n      NewState.id = state.id + 1\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_SUCCESS: {\r\n      NewState.id = state.id + 1\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_ABOUTSUBJECT_SUCCESS: {\r\n      NewState.id = state.id + 1\r\n      return NewState\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","\r\n//datasource\r\nexport const SET_CURRENT_DATASOURCE = 'SET_CURRENT_DATASOURCE';\r\nexport const TOGGLE_SEARCHALL = 'TOGGLE_SEARCHALL'\r\nexport const TOGGLE_BLOCK_DATASOURCE = 'TOGGLE_BLOCK_DATASOURCE'\r\nexport const DELETE_DATASOURCE = 'DELETE_DATASOURCE'\r\nexport const ADD_DATASOURCE = 'ADD_DATASOURCE'\r\n\r\n//forcegraph settings\r\nexport const SET_FORCEGRAPH_SETTINGS = 'SET_FORCEGRAPH_SETTINGS'\r\n\r\n// nodes\r\nexport const SET_SELECTED_NODE = 'SET_SELECTED_NODE'\r\nexport const REMOVE_SELECTED_NODE = 'REMOVE_SELECTED_NODE'\r\n\r\n\r\n//fetch test\r\nexport const FETCH_TEST_REQUEST = 'FETCH_TEST_REQUEST'\r\nexport const FETCH_TEST_SUCCESS = 'FETCH_TEST_SUCCESS'\r\nexport const FETCH_TEST_FAILURE = 'FETCH_TEST_FAILURE'\r\n\r\n//fetch sparql\r\nexport const FETCH_SPARQL_REQUEST = 'FETCH_SPARQL_REQUEST'\r\nexport const FETCH_SPARQL_SUCCESS = 'FETCH_SPARQL_SUCCESS'\r\nexport const FETCH_SPARQL_FAILURE = 'FETCH_SPARQL_FAILURE'\r\n\r\n//fetch sparql about subject\r\nexport const FETCH_SPARQL_ABOUTSUBJECT_REQUEST = 'FETCH_SPARQL_ABOUTSUBJECT_REQUEST'\r\nexport const FETCH_SPARQL_ABOUTSUBJECT_SUCCESS = 'FETCH_SPARQL_ABOUTSUBJECT_SUCCESS'\r\nexport const FETCH_SPARQL_ABOUTSUBJECT_FAILURE = 'FETCH_SPARQL_ABOUTSUBJECT_FAILURE'\r\n\r\n//fetch about clicked nodes\r\nexport const FETCH_ABOUT_CLICKED_NODE_REQUEST = 'FETCH_ABOUT_CLICKED_NODE_REQUEST'\r\nexport const FETCH_ABOUT_CLICKED_NODE_SUCCESS = 'FETCH_ABOUT_CLICKED_NODE_SUCCESS'\r\nexport const FETCH_ABOUT_CLICKED_NODE_FAILURE = 'FETCH_ABOUT_CLICKED_NODE_FAILURE'\r\n\r\n","import { SET_SELECTED_NODE, REMOVE_SELECTED_NODE } from '../actionTypes'\r\nimport { FETCH_TEST_SUCCESS, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS, FETCH_ABOUT_CLICKED_NODE_SUCCESS } from '../actionTypes'\r\n\r\nexport default function nodeReducer(state = {\r\n  selectedNode: null,\r\n  nodesList: [\r\n    { id: 'Subject', type: 'literal' },\r\n    { id: 'Object', type: 'literal' },\r\n  ]\r\n}, action) {\r\n  let NewState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case SET_SELECTED_NODE: {\r\n      const node = action.node\r\n      NewState.selectedNode = node\r\n      return NewState\r\n    }\r\n    case REMOVE_SELECTED_NODE: {\r\n      NewState.selectedNode = null\r\n      return NewState\r\n    }\r\n\r\n    case FETCH_TEST_SUCCESS: {\r\n\r\n      var links = [\r\n        { source: { value: \"http://example.nl/persoon/Wisse\", type: \"uri\" }, target: { value: \"http://example.nl/bedrijf/DUO\", type: \"uri\" }, property: \"http://example.nl/Is stagair bij\" },\r\n        { source: { value: \"http://example.nl/persoon/Wisse\", type: \"uri\" }, target: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, property: \"http://example.nl/Heeft Woonadres\" },\r\n        { source: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, target: { value: \"7913TH\", type: \"literal\" }, property: \"http://example.nl/Postcode\" },\r\n        { source: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, target: { value: \"25\", type: \"literal\" }, property: \"http://example.nl/Nummer\" },\r\n        { source: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, target: { value: \"Zuideropgaande\", type: \"literal\" }, property: \"http://example.nl/Straatnaam\" },\r\n        { source: { value: \"http://example.nl/adres/Adres1\", type: \"uri\" }, target: { value: \"Hollandscheveld\", type: \"literal\" }, property: \"http://example.nl/Plaatsnaam\" },\r\n        { source: { value: \"http://example.nl/bedrijf/DUO\", type: \"uri\" }, target: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, property: \"http://example.nl/Heeft adres\" },\r\n        { source: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, target: { value: \"9722TB\", type: \"literal\" }, property: \"http://example.nl/Postcode\" },\r\n        { source: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, target: { value: \"12\", type: \"literal\" }, property: \"http://example.nl/Nummer\" },\r\n        { source: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, target: { value: \"Kempkensberg\", type: \"literal\" }, property: \"http://example.nl/Straatnaam\" },\r\n        { source: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, target: { value: \"Groningen\", type: \"literal\" }, property: \"Plaatsnaam\" },\r\n        { source: { value: \"http://example.nl/persoon/Wisse\", type: \"uri\" }, target: { value: \"http://example.nl/adres/Adres2\", type: \"uri\" }, property: \"Werkadres\" },\r\n      ]\r\n\r\n      NewState.nodesList = []\r\n\r\n      //distinct nodes\r\n      var templist = []\r\n      links.forEach(link => {\r\n        if (!templist.includes(link.source.value)) {\r\n          NewState.nodesList.push({ id: link.source.value, type: link.source.type })\r\n        }\r\n        if (!templist.includes(link.target.value)) {\r\n          NewState.nodesList.push({ id: link.target.value, type: link.target.type })\r\n        }\r\n\r\n        templist.push(link.source.value)\r\n        templist.push(link.target.value)\r\n      })\r\n      console.log('node NewState: ' + NewState)\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_SUCCESS: {\r\n      NewState.nodesList = []\r\n\r\n      //distinct nodes\r\n      var templist = []\r\n\r\n      //var names from the result\r\n      var vars = action.result.data.head.vars\r\n\r\n\r\n      action.result.data.results.bindings.forEach(element => {\r\n\r\n        //add subject and object to templist\r\n        if (!templist.includes(element[vars[0]].value)) {\r\n          NewState.nodesList.push({ id: element[vars[0]].value, type: element[vars[0]].type })\r\n        }\r\n        if (!templist.includes(element[vars[2]].value)) {\r\n          NewState.nodesList.push({ id: element[vars[2]].value, type: element[vars[2]].type })\r\n        }\r\n\r\n        templist.push(element[vars[0]].value)\r\n        templist.push(element[vars[2]].value)\r\n      })\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_ABOUTSUBJECT_SUCCESS: {\r\n\r\n      NewState.nodesList = []\r\n\r\n      //distinct nodes\r\n      var templist = []\r\n\r\n      // add main subject to nodeslist\r\n      NewState.nodesList.push({ id: action.result.config.subject, type: 'uri' })\r\n\r\n      //var names from the result\r\n      var vars = action.result.data.head.vars\r\n\r\n      // for each triple\r\n      action.result.data.results.bindings.forEach(element => {\r\n        console.log('hier: ')\r\n        console.log(element[action.result.data.head.vars[1]]['xml:lang'])\r\n\r\n        //check if property comes from the same base URL as the subject\r\n        if (element[vars[0]].value.split('/')[2] === action.result.config.subject.split('/')[2]) {\r\n\r\n          //add targets to nodeslist\r\n          if (!templist.includes(element[vars[1]].value)) {\r\n\r\n            //xml lang set\r\n            if (element[action.result.data.head.vars[1]]['xml:lang'] && (element[action.result.data.head.vars[1]]['xml:lang'] === 'en' || element[action.result.data.head.vars[1]]['xml:lang'] === 'nl')) {\r\n              NewState.nodesList.push({ id: element[action.result.data.head.vars[1]].value, type: element[vars[1]].type })\r\n            }\r\n            //xml lang not set\r\n            if (!element[action.result.data.head.vars[1]]['xml:lang']) {\r\n              NewState.nodesList.push({ id: element[action.result.data.head.vars[1]].value, type: element[vars[1]].type })\r\n            }\r\n\r\n          }\r\n          templist.push(element[vars[1]].value)\r\n        }\r\n      })\r\n      return NewState\r\n    }\r\n    case FETCH_ABOUT_CLICKED_NODE_SUCCESS: {\r\n      NewState.nodesList = state.nodesList\r\n\r\n      //distinct nodes\r\n      var templist = []\r\n\r\n      //var names from the result\r\n      var vars = action.result.data.head.vars\r\n\r\n      // for each triple\r\n      action.result.data.results.bindings.forEach(element => {\r\n\r\n        //check if property comes from the same base URL as the subject\r\n        if (element[vars[0]].value.split('/')[2] === action.result.config.subject.split('/')[2]) {\r\n\r\n          //add targets to nodeslist\r\n          if (!templist.includes(element[vars[1]].value)) {\r\n\r\n            //xml lang set\r\n            if (element[action.result.data.head.vars[1]]['xml:lang'] && (element[action.result.data.head.vars[1]]['xml:lang'] === 'en' || element[action.result.data.head.vars[1]]['xml:lang'] === 'nl')) {\r\n              NewState.nodesList.push({ id: element[action.result.data.head.vars[1]].value, type: element[vars[1]].type })\r\n            }\r\n            //xml lang not set\r\n            if (!element[action.result.data.head.vars[1]]['xml:lang']) {\r\n              NewState.nodesList.push({ id: element[action.result.data.head.vars[1]].value, type: element[vars[1]].type })\r\n            }\r\n\r\n          }\r\n          templist.push(element[vars[1]].value)\r\n        }\r\n      })\r\n      return NewState\r\n\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","import { FETCH_TEST_SUCCESS, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS, FETCH_ABOUT_CLICKED_NODE_SUCCESS } from '../actionTypes'\r\n\r\nexport default function linkReducer(state = [\r\n  { source: \"Subject\", target: \"Object\", property: \"http://example.nl/property\" },\r\n], action) {\r\n  let NewState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case FETCH_TEST_SUCCESS: {\r\n\r\n      NewState = [\r\n        { source: \"http://example.nl/persoon/Wisse\", target: \"http://example.nl/bedrijf/DUO\", property: \"http://example.nl/Is stagair bij\" },\r\n        { source: \"http://example.nl/persoon/Wisse\", target: \"http://example.nl/adres/Adres1\", property: \"http://example.nl/Heeft Woonadres\" },\r\n        { source: \"http://example.nl/adres/Adres1\", target: \"7913TH\", property: \"http://example.nl/Postcode\" },\r\n        { source: \"http://example.nl/adres/Adres1\", target: \"25\", property: \"http://example.nl/Nummer\" },\r\n        { source: \"http://example.nl/adres/Adres1\", target: \"Zuideropgaande\", property: \"http://example.nl/Straatnaam\" },\r\n        { source: \"http://example.nl/adres/Adres1\", target: \"Hollandscheveld\", property: \"http://example.nl/Plaatsnaam\" },\r\n        { source: \"http://example.nl/bedrijf/DUO\", target: \"http://example.nl/adres/Adres2\", property: \"http://example.nl/Heeft adres\" },\r\n        { source: \"http://example.nl/adres/Adres2\", target: \"9722TB\", property: \"http://example.nl/Postcode\" },\r\n        { source: \"http://example.nl/adres/Adres2\", target: \"12\", property: \"http://example.nl/Nummer\" },\r\n        { source: \"http://example.nl/adres/Adres2\", target: \"Kempkensberg\", property: \"http://example.nl/Straatnaam\" },\r\n        { source: \"http://example.nl/adres/Adres2\", target: \"Groningen\", property: \"http://example.nl/Plaatsnaam\" },\r\n        { source: \"http://example.nl/persoon/Wisse\", target: \"http://example.nl/adres/Adres2\", property: \"http://example.nl/Werkadres\" },\r\n      ]\r\n\r\n      //sort links by source then target --> sorteert goed.\r\n      NewState.sort(function (a, b) {\r\n        if (a.source > b.source) { return 1; }\r\n        else if (a.source < b.source) { return -1; }\r\n        else {\r\n          if (a.target > b.target) { return 1; }\r\n          if (a.target < b.target) { return -1; }\r\n          else { return 0; }\r\n        }\r\n      })\r\n\r\n      // set linknum for every link --> wordt in path gebruikt om duplicate links te kunnen leggen\r\n      for (var i = 0; i < NewState.length; i++) {\r\n        if (i !== 0 &&\r\n          NewState[i].source === NewState[i - 1].source &&\r\n          NewState[i].target === NewState[i - 1].target) {\r\n          NewState[i].linknum = NewState[i - 1].linknum + 1;\r\n        }\r\n        else { NewState[i].linknum = 1; };\r\n      };\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_SUCCESS: {\r\n      //LINK:\r\n      //[{ source: \"John\", target: 'Fussbal', property: 'plays' }]\r\n\r\n      //NODE\r\n      //[{ id: 'John' }]\r\n\r\n      NewState = []\r\n\r\n      action.result.data.results.bindings.forEach(element => {\r\n        //console.log(element)\r\n        var source = element[action.result.data.head.vars[0]]\r\n        var target = element[action.result.data.head.vars[2]]\r\n        var property = element[action.result.data.head.vars[1]]\r\n        var link = {}\r\n        link.source = source.value\r\n        link.target = target.value\r\n        link.property = property.value\r\n        NewState.push(link)\r\n\r\n        //sort links by source then target --> sorteert goed.\r\n        NewState.sort(function (a, b) {\r\n          if (a.source > b.source) { return 1; }\r\n          else if (a.source < b.source) { return -1; }\r\n          else {\r\n            if (a.target > b.target) { return 1; }\r\n            if (a.target < b.target) { return -1; }\r\n            else { return 0; }\r\n          }\r\n        })\r\n\r\n        // set linknum for every link --> wordt in path gebruikt om duplicate links te kunnen leggen\r\n        for (var i = 0; i < NewState.length; i++) {\r\n          if (i !== 0 &&\r\n            NewState[i].source === NewState[i - 1].source &&\r\n            NewState[i].target === NewState[i - 1].target) {\r\n            NewState[i].linknum = NewState[i - 1].linknum + 1;\r\n          }\r\n          else { NewState[i].linknum = 1; };\r\n        };\r\n\r\n\r\n      });\r\n      return NewState\r\n    }\r\n    case FETCH_SPARQL_ABOUTSUBJECT_SUCCESS: {\r\n      NewState = []\r\n\r\n      action.result.data.results.bindings.forEach(element => {\r\n\r\n        var link = {}\r\n\r\n        link.source = action.result.config.subject\r\n        link.target = element[action.result.data.head.vars[1]].value\r\n        link.property = element[action.result.data.head.vars[0]].value\r\n\r\n        //check if property comes from the same base URL as the subject\r\n        if (element[action.result.data.head.vars[0]].value.split('/')[2] === action.result.config.subject.split('/')[2]) {\r\n\r\n          // add links to linklist\r\n          //xml lang set --> used to set language of a literal\r\n          if (element[action.result.data.head.vars[1]]['xml:lang'] && (element[action.result.data.head.vars[1]]['xml:lang'] === 'en' || element[action.result.data.head.vars[1]]['xml:lang'] === 'nl')) {\r\n            NewState.push(link)\r\n          }\r\n          //xml lang not set\r\n          if (!element[action.result.data.head.vars[1]]['xml:lang']) {\r\n            NewState.push(link)\r\n          }\r\n        }\r\n\r\n        //sort links by source then target --> sorteert goed.\r\n        NewState.sort(function (a, b) {\r\n          if (a.source > b.source) { return 1; }\r\n          else if (a.source < b.source) { return -1; }\r\n          else {\r\n            if (a.target > b.target) { return 1; }\r\n            if (a.target < b.target) { return -1; }\r\n            else { return 0; }\r\n          }\r\n        })\r\n\r\n        // set linknum for every link --> wordt in path gebruikt om duplicate links te kunnen leggen\r\n        for (var i = 0; i < NewState.length; i++) {\r\n          if (i !== 0 &&\r\n            NewState[i].source === NewState[i - 1].source &&\r\n            NewState[i].target === NewState[i - 1].target) {\r\n            NewState[i].linknum = NewState[i - 1].linknum + 1;\r\n          }\r\n          else { NewState[i].linknum = 1; };\r\n        };\r\n\r\n\r\n      });\r\n      return NewState\r\n    }\r\n    case FETCH_ABOUT_CLICKED_NODE_SUCCESS: {\r\n      NewState = state\r\n\r\n      action.result.data.results.bindings.forEach(element => {\r\n\r\n        var link = {}\r\n\r\n        link.source = action.result.config.subject\r\n        link.target = element[action.result.data.head.vars[1]].value\r\n        link.property = element[action.result.data.head.vars[0]].value\r\n\r\n        //check if property comes from the same base URL as the subject\r\n        if (element[action.result.data.head.vars[0]].value.split('/')[2] === action.result.config.subject.split('/')[2]) {\r\n\r\n          // add links to linklist\r\n          //xml lang set --> used to set language of a literal\r\n          if (element[action.result.data.head.vars[1]]['xml:lang'] && (element[action.result.data.head.vars[1]]['xml:lang'] === 'en' || element[action.result.data.head.vars[1]]['xml:lang'] === 'nl')) {\r\n            NewState.push(link)\r\n          }\r\n          //xml lang not set\r\n          if (!element[action.result.data.head.vars[1]]['xml:lang']) {\r\n            NewState.push(link)\r\n          }\r\n        }\r\n\r\n        //sort links by source then target --> sorteert goed.\r\n        NewState.sort(function (a, b) {\r\n          if (a.source > b.source) { return 1; }\r\n          else if (a.source < b.source) { return -1; }\r\n          else {\r\n            if (a.target > b.target) { return 1; }\r\n            if (a.target < b.target) { return -1; }\r\n            else { return 0; }\r\n          }\r\n        })\r\n\r\n        // set linknum for every link --> wordt in path gebruikt om duplicate links te kunnen leggen\r\n        for (var i = 0; i < NewState.length; i++) {\r\n          if (i !== 0 &&\r\n            NewState[i].source === NewState[i - 1].source &&\r\n            NewState[i].target === NewState[i - 1].target) {\r\n            NewState[i].linknum = NewState[i - 1].linknum + 1;\r\n          }\r\n          else { NewState[i].linknum = 1; };\r\n        };\r\n\r\n\r\n      });\r\n      return NewState\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_CURRENT_DATASOURCE, TOGGLE_SEARCHALL, TOGGLE_BLOCK_DATASOURCE, DELETE_DATASOURCE, ADD_DATASOURCE } from '../actionTypes';\r\n\r\n\r\nexport default function datasourceReducer(state = {\r\n  searchAll: 'Uit',\r\n  currentDatasource: 'https://lod.onderwijsregistratie.nl/rio/sparql',\r\n  datasources: [\r\n    {\r\n      name: 'Onderwijsregistratie',\r\n      endpoint: 'https://lod.onderwijsregistratie.nl/rio/sparql',\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'dbpedia',\r\n      endpoint: 'http://dbpedia.org/sparql',\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'Basisregistratie adressen en gebouwen (alle voorkomens)',\r\n      endpoint: 'https://bag.basisregistraties.overheid.nl/sparql',\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'Basisregistratie adressen en gebouwen (nu geldige voorkomens)',\r\n      endpoint: 'https://bag.basisregistraties.overheid.nl/sparql/now',\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'Basisregistratie Kadaster - Digitale Kadastrale Kaart',\r\n      endpoint: 'https://brk.basisregistraties.overheid.nl/sparql',\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'Basisregitratie Topografie - Top10NL',\r\n      endpoint: 'https://brt.basisregistraties.overheid.nl/sparql',\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'Cultuurhistorische objecten',\r\n      endpoint: 'https://linkeddata.cultureelerfgoed.nl/sparql',\r\n      active: true,\r\n    },\r\n  ],\r\n}, action) {\r\n  let newState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case SET_CURRENT_DATASOURCE: {\r\n      newState.currentDatasource = action.datasource.endpoint;\r\n      return newState;\r\n    }\r\n    case TOGGLE_SEARCHALL: {\r\n      if (state.searchAll === 'Aan') {\r\n        newState.searchAll = 'Uit'\r\n      }\r\n      if (state.searchAll === 'Uit') {\r\n        newState.searchAll = 'Aan'\r\n      }\r\n\r\n      return newState\r\n    }\r\n    case TOGGLE_BLOCK_DATASOURCE: {\r\n      var index = state.datasources.indexOf(action.datasource)\r\n      newState.datasources[index].active = !newState.datasources[index].active\r\n\r\n      return newState\r\n    }\r\n    case DELETE_DATASOURCE: {\r\n      const name = action.datasource.name\r\n      var index = state.datasources.indexOf(action.datasource)\r\n      newState.datasources.splice(index, 1)\r\n      return newState\r\n    }\r\n    case ADD_DATASOURCE: {\r\n      const name = action.name\r\n      const endpoint = action.endpoint\r\n      newState.datasources.push({\r\n        name: name,\r\n        endpoint: endpoint,\r\n        active: true,\r\n      })\r\n      return newState\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n","import { SET_FORCEGRAPH_SETTINGS } from '../actionTypes'\r\n\r\nexport default function forcegraphSettingsReducer(state = {\r\n  linkDistance: {\r\n    min: 0,\r\n    max: 400,\r\n    value: 400,\r\n  },\r\n  forceCharge: {\r\n    min: 0,\r\n    max: 3000,\r\n    value: 3000,\r\n\r\n  }\r\n},\r\n  action) {\r\n  let NewState = Object.assign({}, state);\r\n  switch (action.type) {\r\n    case SET_FORCEGRAPH_SETTINGS: {\r\n\r\n      return action.settings\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","export default function loadingReducer(state = {}, action) {\r\n  if (action.type.endsWith('_REQUEST')) {\r\n    const requestName = action.type.replace('_REQUEST', '')\r\n    const counter = state[requestName] || 0\r\n    return { ...state, [requestName]: counter + 1 }\r\n  }\r\n\r\n  if (action.type.endsWith('_SUCCESS') || action.type.endsWith('_FAILURE')) {\r\n    const requestName = action.type.replace('_SUCCESS', '').replace('_FAILURE', '')\r\n    const counter = state[requestName] || 0\r\n    return { ...state, [requestName]: counter - 1 }\r\n  }\r\n\r\n  return state\r\n}","export default function errorReducer(state = {}, action) {\r\n  if (action.type.endsWith('_FAILURE')) {\r\n    return action.error\r\n  }\r\n  // clear error whensubmitting another request\r\n  if (action.type.endsWith('_REQUEST')) {\r\n    return {}\r\n  }\r\n\r\n  return state\r\n}","// Root Reducer, combines all reducers into one single reducer\r\n\r\nimport { combineReducers } from 'redux'\r\n\r\n\r\n// reducer for updating forcegraph based on meaningfull changes.\r\nimport dataReducer from './data'\r\n\r\n//sparql endpoint data reducers\r\nimport nodesReducer from './nodes'\r\nimport linkesReducer from './links'\r\n\r\n\r\nimport datasourceReducer from './datasource'\r\nimport forcegraphSettingsReducer from './forcegraphSettings'\r\n\r\n//utility reducers\r\nimport loadingReducer from './loading'\r\nimport errorReducer from './error'\r\n\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nconst appReducer = (history) => combineReducers({\r\n  data: dataReducer,\r\n  nodes: nodesReducer,\r\n  links: linkesReducer,\r\n  datasource: datasourceReducer,\r\n  forcegraphsettings: forcegraphSettingsReducer,\r\n  loading: loadingReducer,\r\n  error: errorReducer,\r\n  router: connectRouter(history)\r\n})\r\n\r\nexport default appReducer","// redux\r\nimport { createStore, compose } from 'redux'\r\n\r\n//root reducer\r\nimport appReducer from '../reducers/index'\r\n\r\n//middleware\r\nimport middleware from './middleware'\r\nimport { history } from './middleware'\r\n\r\n//devtools\r\nimport { persistState } from 'redux-devtools'\r\nimport DevTools from '../../containers/DevTools'\r\n\r\n\r\nconst enhancer = compose(\r\n  middleware,\r\n  DevTools.instrument(),\r\n  persistState(getSessionKey())\r\n)\r\n\r\nfunction getSessionKey() {\r\n  const matches = window.location.href.match(/[?&]debug=([^&#])\\b/)\r\n  return (matches && matches.length > 0)\r\n    ? matches[1]\r\n    : null\r\n}\r\n\r\nexport default function configureStore(initialState) {\r\n  return createStore(appReducer(history), initialState, enhancer)\r\n}","import React from 'react'\r\nimport {\r\n  NavLink,\r\n} from 'react-router-dom'\r\n\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\n\r\n//import Logo from '../assets/img/logo.svg'\r\n\r\nclass Navigation extends React.Component {\r\n  render() {\r\n    return (\r\n      <Navbar id=\"main-navigation\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand as={NavLink} activeClassName=\"notactive\" to=\"/\">\r\n            <img\r\n              // src={Logo}\r\n              width=\"100\"\r\n              height=\"100\"\r\n              alt=\"Logo\"\r\n            /><b>React SPARQL Browser</b>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav.Link as={NavLink} exact activeClassName=\"active\" to=\"/\">Home</Nav.Link>\r\n            <Nav.Link as={NavLink} activeClassName=\"active\" to=\"/sparql-react-browser/contact\">Contact</Nav.Link>\r\n            <Nav.Link as={NavLink} activeClassName=\"active\" to=\"/sparql-react-browser/graph/examples\">Graph</Nav.Link>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\n\r\nimport Navigation from './Nav'\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Header\">\r\n        <header>\r\n          <Navigation />\r\n        </header>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer id=\"Footer\">\r\n        <p>© React-SPARQL-Browser {new Date().getYear() + 1900}</p>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass Home extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <Jumbotron>\r\n          <h1>Sparql-React-Browser</h1>\r\n          <p>\r\n            Welkom bij de Sparql-React-Browser. Via deze applicatie kunt u open onderwijsdata opvragen en visualiseren. Met onderstaande zoekmogelijkheid komt u snel bij de data die u zoekt. Data wordt weergegeven in een graph JSON. Het gaat om open informatie.\r\n          </p>\r\n          <p>\r\n            <Button variant=\"primary\" onClick={() => this.props.history.push('/sparql-react-browser/graph/examples')}>Probeer uit!</Button>\r\n          </p>\r\n        </Jumbotron>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Home","import * as d3 from 'd3'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nclass D3NodeGenerator extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    // dragging\r\n    this.drag = (simulation) => {\r\n      const dragstarted = (d) => {\r\n        d3.select(\"#forcegraph\").selectAll(\".tooltip\").remove()\r\n        this.props.rs()\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      };\r\n\r\n      const dragged = (d) => {\r\n        d.fx = d3.event.x;\r\n        d.fy = d3.event.y;\r\n      };\r\n\r\n      const dragended = (d) => {\r\n        //if (!d3.event.active) simulation.alphaTarget(0);\r\n        d.fx = null;\r\n        d.fy = null;\r\n      };\r\n\r\n      return d3\r\n        .drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended)\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  renderNodeEllipse() {\r\n    var selection = d3.select('.nodesellipse')\r\n      .selectAll('ellipse')\r\n      .data(this.props.nodesList)             //bind data\r\n      .call(this.drag(this.simulation));            //allow dragging  \r\n\r\n    selection.enter()                     //for each row in the data do...\r\n      .append('ellipse')\r\n      .on('click', (d) => {\r\n        this.props.ssn(d.id)\r\n        this.props.rsn()\r\n        if (d.type === 'uri') {\r\n          this.props.facn(d.id, this.props.datasource)\r\n        }\r\n      })\r\n      .on(\"mouseover\", function (d) {\r\n        console.log('mouseover')\r\n        console.log(d)\r\n        console.log(this)\r\n\r\n      })\r\n      .on(\"mouseout\", function (d) {\r\n        console.log('mouseout')\r\n      })\r\n      .on(\"mousedown\", function (d) {\r\n        console.log('mousedown')\r\n      })\r\n      .on(\"mouseup\", function (d) {\r\n        console.log('mouseup')\r\n      })\r\n      .attr(\"rx\", function (d) { return 30 }) //d.id.length\r\n      .attr(\"ry\", function (d) { return 30 }) //d.id.length\r\n      .attr(\"class\", \"ellipse\")\r\n      .classed('uri', function (d) { return d.type === 'uri' })\r\n      .classed('literal', function (d) { return d.type === 'literal' || d.type === 'typed-literal' })\r\n      //.style(\"fill\", \"#FD8D3C\")\r\n      .merge(selection)\r\n      .attr(\"transform\", function (d) {\r\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n      })\r\n\r\n    selection.exit().remove()\r\n  }\r\n\r\n  renderNodeText() {\r\n    var selection = d3.select('.nodestext')\r\n      .selectAll('text')\r\n      .data(this.props.nodesList)                        //bind data\r\n      .call(this.drag(this.simulation));            //allow dragging  \r\n\r\n    selection.enter()                     //for each row in the data do...\r\n      .append('text')\r\n\r\n      .on('click', function (d) {\r\n        var div = d3.select(\"#forcegraph\")\r\n          .append(\"div\")\r\n          .attr(\"class\", \"tooltip dropdown\")\r\n          .style(\"opacity\", 0)\r\n          .style(\"left\", (d3.event.pageX + 28) + \"px\")\r\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n\r\n        var button = d3.select(\"#forcegraph\").selectAll(\".tooltip\")\r\n          .append(\"button\")\r\n          .attr(\"class\", \"btn btn-secondary dropdown-toggle\")\r\n          .attr(\"type\", \"button\")\r\n          .attr(\"id\", \"dropdownMenuButton\")\r\n          .attr(\"data-toggle\", \"dropdown\")\r\n          .attr(\"aria-haspopup\", \"true\")\r\n          .attr(\"aria-expanded\", \"false\")\r\n          .text(d.id)\r\n\r\n        var dropdownMenu = d3.select(\"#forcegraph\").selectAll(\".tooltip\")\r\n          .append(\"div\")\r\n          .attr(\"class\", \"dropdown-menu\")\r\n          .attr(\"aria-labelledby\", \"dropdownMenuButton\")\r\n\r\n        if (d.type === \"uri\") {\r\n          dropdownMenu.append(\"a\")\r\n            .attr(\"class\", \"dropdown-item\")\r\n            .attr(\"href\", d.id)\r\n            .text(\"go to uri\")\r\n        }\r\n        dropdownMenu.append(\"a\")\r\n          .attr(\"class\", \"dropdown-item\")\r\n        dropdownMenu.append(\"a\")\r\n          .attr(\"class\", \"dropdown-item\")\r\n\r\n\r\n        d3.select(\".tooltip\").transition()\r\n          .duration(200)\r\n          .style(\"opacity\", .9)\r\n          .style(\"left\", (d3.event.pageX + 28) + \"px\")\r\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n        // if (d.type === 'uri') {\r\n        //   //window.location.href = d.id // opens in the same page\r\n        //   window.open(d.id)           // opens in a new page\r\n        // }\r\n      })\r\n      .on(\"mouseover\", function (d) {\r\n        console.log('mouseover')\r\n\r\n\r\n\r\n\r\n      })\r\n      .on(\"mouseout\", function (d) {\r\n        console.log('mouseout')\r\n      })\r\n      .on(\"mousedown\", function (d) {\r\n        console.log('mousedown')\r\n      })\r\n      .on(\"mouseup\", function (d) {\r\n        console.log('mouseup')\r\n      })\r\n      .text(function (d) {\r\n        if (d.type === 'uri') {\r\n          var nodeURL = d.id.split('/')\r\n          nodeURL.splice(0, 3)\r\n          nodeURL = nodeURL.join('/')\r\n          console.log('nodeURL: ' + nodeURL)\r\n          return nodeURL;\r\n        }\r\n        return d.id;\r\n      })\r\n      .merge(selection)\r\n      .attr(\"transform\", function (d) {\r\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n      });\r\n    // 2nd way of doing it\r\n    // .attr('x', function (d) { return d.x })\r\n    // .attr('y', function (d) { return d.y })\r\n    // .attr('dy', function (d) { return 5 })\r\n\r\n    selection.exit().remove()\r\n  }\r\n\r\n  render() {\r\n    this.renderNodeEllipse()\r\n    this.renderNodeText()\r\n\r\n\r\n\r\n    return (\r\n      null\r\n    )\r\n  }\r\n}\r\nexport default D3NodeGenerator","import * as d3 from 'd3'\r\nimport React from 'react'\r\nimport reactDom from 'react-dom'\r\n\r\nclass D3LinkGenerator extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    // dragging\r\n    this.drag = (simulation) => {\r\n      const dragstarted = (d) => {\r\n        d3.select(\"#forcegraph\").selectAll(\".tooltip\").remove()\r\n        this.props.action()\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      };\r\n\r\n      const dragged = (d) => {\r\n        d.fx = d3.event.x;\r\n        d.fy = d3.event.y;\r\n      };\r\n\r\n      const dragended = (d) => {\r\n        //if (!d3.event.active) simulation.alphaTarget(0);\r\n        d.fx = null;\r\n        d.fy = null;\r\n      };\r\n\r\n      return d3\r\n        .drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended)\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  getAllLinkPropertys() {\r\n    var linkpropertys = []\r\n    this.props.linksList.forEach(element => {\r\n      linkpropertys.push(element.property.replace(/\\s/g, ''))\r\n    });\r\n    return linkpropertys\r\n  }\r\n\r\n  render() {\r\n    var selection = d3.select('.links')\r\n      .selectAll('path')\r\n      .data(this.props.linksList)\r\n\r\n    selection.enter()\r\n      .append('path')\r\n      .attr(\"class\", function (d) { return \"link\" })\r\n      .attr(\"class\", function (d) { return \"link \" + d.property; })\r\n      .attr(\"id\", function (d, i) { return \"linkId_\" + i; })\r\n      .attr(\"marker-end\", function (d) { return \"url(#\" + d.property.replace(/\\s/g, '') + \")\"; }) //removed to allow matching\r\n      .merge(selection)\r\n      .attr(\"d\", function (d) {\r\n        var dx = d.target.x - d.source.x\r\n        var dy = d.target.y - d.source.y\r\n        if (d.linknum) {\r\n          var dr = d.linknum * 150 - 150;\r\n        }\r\n        else {\r\n          var dr = 0\r\n        }\r\n\r\n        return \"M\" + d.source.x + \",\" + d.source.y + \"A\" + dr + \",\" + dr + \" 0 0,1 \" + d.target.x + \",\" + d.target.y;\r\n      })\r\n\r\n\r\n\r\n    selection.exit().remove()\r\n\r\n    var selection = d3.select('.linkstext')\r\n      .selectAll('text')\r\n      .data(this.props.linksList)\r\n\r\n    selection.enter()\r\n      .append(\"text\")\r\n      .on('click', function (d) {\r\n        //window.location.href = d.id // opens in the same page\r\n        window.open(d.id)           // opens in a new page\r\n      })\r\n      .attr(\"x\", \"200\")\r\n      .attr(\"class\", \"linklabel\")\r\n      .append(\"textPath\")\r\n      .attr(\"xlink:href\", function (d, i) { return \"#linkId_\" + i; })\r\n      .text(function (d) {\r\n        var text = d.property.split('/')\r\n        text.splice(0, 3)\r\n        text = text.join('/')\r\n        return text;\r\n      })\r\n\r\n    selection.exit().remove()\r\n\r\n    var selection = d3.select('.defs')\r\n      .selectAll('marker')\r\n      .data(this.getAllLinkPropertys())\r\n\r\n    selection.enter()\r\n      .append(\"marker\")\r\n      .attr(\"id\", String)\r\n      .attr(\"viewBox\", \"0 -5 10 10\")\r\n      .attr(\"refX\", 40) // distance from link\r\n      .attr(\"refY\", 0) //deviation from link linke\r\n      .attr(\"markerWidth\", 6)\r\n      .attr(\"markerHeight\", 6)\r\n      .attr(\"orient\", \"auto\")\r\n      .append(\"svg:path\")\r\n      .attr(\"d\", \"M0,-5L10,0L0,5\");\r\n\r\n\r\n    selection.exit().remove()\r\n\r\n    return (\r\n      null\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default D3LinkGenerator","import * as d3 from 'd3'\r\nimport React from 'react'\r\n\r\nimport D3NodeGenerator from './D3NodeGenerator'\r\nimport D3LinkGenerator from './D3LinkGenerator'\r\n\r\nclass ForceGraph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nodes: props.nodes,\r\n      links: props.links\r\n    };\r\n\r\n    this.rs = this.restartSimulation.bind(this)\r\n    this.ssn = this.props.setSelectedNode.bind(this)\r\n    this.rsn = this.props.removeSelectedNode.bind(this)\r\n    this.facn = this.props.fetchAboutClickedNode.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('componentDidMount')\r\n    var element = document.getElementById('forcegraph');\r\n\r\n    // Redraw based on the new size whenever the browser window is resized.\r\n    window.addEventListener(\"resize\", () => {\r\n      this.removeSVG()\r\n      this.createSVG(element.offsetWidth, element.offsetHeight)\r\n      this.restartSimulation()\r\n    });\r\n\r\n    //initial forcegraph\r\n    this.createSVG(element.offsetWidth, element.offsetHeight)\r\n\r\n\r\n    //initial forces\r\n    this.forceLink = d3.forceLink().links(this.props.links).distance(400).id(function (d) { return d.id; })\r\n    this.forceCenter = d3.forceCenter((element.offsetWidth * 1) / 2, (element.offsetHeight * 1) / 2)\r\n    this.forceCharge = d3.forceManyBody().strength(-3000) //defaul -30\r\n\r\n    //simulation --> simulation gets updated upon interaction\r\n    this.simulation = d3.forceSimulation(this.props.nodes.nodesList)\r\n      .force('center', this.forceCenter)\r\n      .force('charge', this.forceCharge)\r\n      .force('link', this.forceLink)\r\n    this.simulation.on('tick', () => {\r\n      console.log('tick')\r\n      this.setState({\r\n        //call this.setstate to rerender with react.\r\n      })\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevprops) {\r\n    this.simulation.nodes(this.props.nodes.nodesList) // load new nodes\r\n    this.simulation.force('link').links(this.props.links) // load new links\r\n\r\n\r\n    if (this.props.data.id !== prevprops.data.id) { // check if any data has changed and restart the simulation if so currently based on id in linkreducer\r\n      d3.select('.links').selectAll('path').remove()\r\n      d3.select('.nodesellipse').selectAll('ellipse').remove()\r\n      d3.select('.nodestext').selectAll('text').remove()\r\n      d3.select('.linkstext').selectAll('text').remove()\r\n      d3.select('.defs').selectAll('path').remove()\r\n      d3.select('.tooltips').selectAll('circle').remove()\r\n\r\n      console.log('restartSimulation')\r\n      this.restartSimulation()\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.simulation.stop();\r\n  }\r\n\r\n  createSVG(width, height) {\r\n    console.log('createsvg')\r\n\r\n    var zoom = d3.zoom()\r\n      .scaleExtent([.5, 10])\r\n      .on(\"zoom\", zoomed);\r\n\r\n    var svg = d3.select(\"#forcegraph\")\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"forcegraph\")\r\n      .style(\"width\", width * 1)   // set size of svg in relation to parent\r\n      .style(\"height\", height * 1) // set size of svg in relation to parent\r\n      .style(\"border\", \"1px solid black\")\r\n      .call(zoom).append(\"g\")\r\n    svg.append(\"g\").attr(\"class\", \"links\")\r\n    svg.append(\"g\").attr(\"class\", \"nodesellipse\")\r\n    svg.append(\"g\").attr(\"class\", \"nodestext\")\r\n    svg.append(\"g\").attr(\"class\", \"linkstext\")\r\n    svg.append(\"defs\").attr(\"class\", \"defs\")\r\n    svg.append(\"g\").attr(\"class\", \"tooltips\")\r\n\r\n    function zoomed() {\r\n      const currentTransform = d3.event.transform;\r\n      svg.attr(\"transform\", currentTransform);\r\n      //slider.property(\"value\", currentTransform.k);\r\n    }\r\n\r\n    // function slided(d) {\r\n    //   zoom.scaleTo(svg, d3.select(this).property(\"value\"));\r\n    // }\r\n\r\n    // var slider = d3.select(\"#forcegraph\").append(\"p\").append(\"input\")\r\n    //   .datum({})\r\n    //   .attr(\"type\", \"range\")\r\n    //   .attr(\"value\", zoom.scaleExtent()[0])\r\n    //   .attr(\"min\", zoom.scaleExtent()[0])\r\n    //   .attr(\"max\", zoom.scaleExtent()[1])\r\n    //   .attr(\"step\", (zoom.scaleExtent()[1] - zoom.scaleExtent()[0]) / 100)\r\n    //   .on(\"input\", slided);\r\n  }\r\n\r\n  removeSVG() {\r\n    d3.select('#forcegraph').selectAll('svg').remove()\r\n  }\r\n\r\n  restartSimulation() {\r\n    this.simulation.alpha(1).restart()\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"forcegraph\">\r\n        <D3NodeGenerator nodesList={this.props.nodes.nodesList} datasource={this.props.datasource} rs={this.rs} ssn={this.ssn} rsn={this.rsn} facn={this.facn}></D3NodeGenerator>\r\n        <D3LinkGenerator linksList={this.props.links} action={this.rs} ssn={this.ssn}></D3LinkGenerator>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nForceGraph.defaultProps = {\r\n  width: 600,\r\n  height: 600,\r\n  forceStrength: -10\r\n};\r\n\r\nexport default ForceGraph\r\n\r\n/*\r\ncan dispatch actions from child component\r\n\r\ntry passing drag in the same way\r\nd3 select .call in react component maybe?\r\n*/","import { SET_CURRENT_DATASOURCE, TOGGLE_SEARCHALL, TOGGLE_BLOCK_DATASOURCE, DELETE_DATASOURCE, ADD_DATASOURCE } from '../actionTypes'\r\n\r\nexport const setCurrentDatasource = (datasource) => {\r\n  return {\r\n    type: SET_CURRENT_DATASOURCE,\r\n    datasource\r\n  }\r\n}\r\n\r\nexport const toggleSearchAll = () => {\r\n  return {\r\n    type: TOGGLE_SEARCHALL\r\n  }\r\n}\r\n\r\nexport const toggleBlockDatasource = (datasource) => {\r\n  return {\r\n    type: TOGGLE_BLOCK_DATASOURCE,\r\n    datasource\r\n  }\r\n}\r\n\r\nexport const deleteDatasource = (datasource) => {\r\n  return {\r\n    type: DELETE_DATASOURCE,\r\n    datasource\r\n  }\r\n}\r\n\r\nexport const addDatasource = (name, endpoint) => {\r\n  return {\r\n    type: ADD_DATASOURCE,\r\n    name,\r\n    endpoint,\r\n  }\r\n}\r\n\r\n\r\n","import * as d3 from 'd3'\r\nimport React from 'react'\r\n\r\nclass ForceGraph extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    console.log('ForceGraph rerendered')\r\n  }\r\n\r\n  componentDidMount() {\r\n    var element = document.getElementById('forcegraph');\r\n\r\n    // Redraw based on the new size whenever the browser window is resized.\r\n    window.addEventListener(\"resize\", () => {\r\n      this.removeSVG()\r\n      this.createSVG(element.offsetWidth, element.offsetHeight)\r\n      this.createSimulation(this.props.nodes, this.props.links, element.offsetWidth, element.offsetHeight)\r\n    });\r\n\r\n    this.createSVG(element.offsetWidth, element.offsetHeight)\r\n    this.createSimulation(this.props.nodes, this.props.links, element.offsetWidth, element.offsetHeight)\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.removeSimulation()\r\n    var element = document.getElementById('forcegraph');\r\n    this.createSimulation(this.props.nodes, this.props.links, element.offsetWidth, element.offsetHeight)\r\n  }\r\n\r\n  createSVG(width, height) {\r\n    console.log('createsvg')\r\n\r\n    var zoom = d3.zoom()\r\n      .scaleExtent([.5, 10])\r\n      .on(\"zoom\", zoomed);\r\n\r\n    var svg = d3.select(\"#forcegraph\")\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"forcegraph\")\r\n      .style(\"width\", width * 1)   // set size of svg in relation to parent\r\n      .style(\"height\", height * 1) // set size of svg in relation to parent\r\n      .style(\"border\", \"1px solid black\")\r\n      .call(zoom).append(\"g\")\r\n    svg.append(\"g\").attr(\"class\", \"links\")\r\n    svg.append(\"g\").attr(\"class\", \"nodesellipse\")\r\n    svg.append(\"g\").attr(\"class\", \"nodestext\")\r\n    svg.append(\"g\").attr(\"class\", \"linkstext\")\r\n    svg.append(\"defs\").attr(\"class\", \"defs\")\r\n\r\n    function zoomed() {\r\n      const currentTransform = d3.event.transform;\r\n      svg.attr(\"transform\", currentTransform);\r\n      //slider.property(\"value\", currentTransform.k);\r\n    }\r\n\r\n    // function slided(d) {\r\n    //   zoom.scaleTo(svg, d3.select(this).property(\"value\"));\r\n    // }\r\n\r\n    // var slider = d3.select(\"#forcegraph\").append(\"p\").append(\"input\")\r\n    //   .datum({})\r\n    //   .attr(\"type\", \"range\")\r\n    //   .attr(\"value\", zoom.scaleExtent()[0])\r\n    //   .attr(\"min\", zoom.scaleExtent()[0])\r\n    //   .attr(\"max\", zoom.scaleExtent()[1])\r\n    //   .attr(\"step\", (zoom.scaleExtent()[1] - zoom.scaleExtent()[0]) / 100)\r\n    //   .on(\"input\", slided);\r\n  }\r\n\r\n  removeSVG() {\r\n    d3.select('#forcegraph').selectAll('svg').remove()\r\n  }\r\n\r\n  removeSimulation() {\r\n    d3.select('.nodestext').selectAll('text').remove();\r\n    d3.select('.nodesellipse').selectAll('ellipse').remove();\r\n    d3.select('.links').selectAll('path').remove();\r\n    d3.select('.linkstext').selectAll('text').remove();\r\n\r\n  }\r\n\r\n  createSimulation(nodes, links, width, height) {\r\n    //simulation\r\n\r\n    var forceLink = d3.forceLink().links(links).distance(400).id(function (d) { return d.id; })\r\n    var forceCenter = d3.forceCenter((width * 1) / 2, (height * 1) / 2)\r\n    var forceCharge = d3.forceManyBody().strength(-1000) //defaul -30\r\n\r\n    var simulation = d3.forceSimulation(nodes)\r\n      .force('center', forceCenter)\r\n      .force('charge', forceCharge)\r\n      .force('link', forceLink)\r\n      .on('tick', ticked);\r\n\r\n    //node properties\r\n    function updateNodesText() {\r\n      var selection = d3.select('.nodestext')\r\n        .selectAll('text')\r\n        .data(nodes)                        //bind data\r\n        .call(drag(simulation));            //allow dragging  \r\n\r\n      selection.enter()                     //for each row in the data do...\r\n        .append('text')\r\n        .on('click', function (d) {\r\n          //alert(d.id)\r\n          //d3.select(this).style(\"fill\", \"magenta\")\r\n        })\r\n        .on(\"mouseover\", function (d) {\r\n          set_highlight(d, get_connectedNodes(d), get_connectedLinks(d));\r\n        })\r\n        .on(\"mouseout\", function (d) {\r\n          exit_highlight(d);\r\n          exit_fade(d)\r\n        })\r\n        .on(\"mousedown\", function (d) {\r\n          console.log('d nodetext:' + d.id)\r\n          set_fade(d, get_connectedNodes(d));\r\n\r\n        })\r\n        .on(\"mouseup\", function (d) {\r\n          console.log('mouseup')\r\n        })                    //add element\r\n        .text(function (d) {                // add attributes\r\n          return d.id\r\n        })\r\n        .merge(selection)\r\n        .attr(\"transform\", function (d) {\r\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n        });\r\n      // 2nd way of doing it\r\n      // .attr('x', function (d) { return d.x })\r\n      // .attr('y', function (d) { return d.y })\r\n      // .attr('dy', function (d) { return 5 })\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    function updateNodesellipse() {\r\n      var selection = d3.select('.nodesellipse')\r\n        .selectAll('ellipse')\r\n        .data(nodes)             //bind data\r\n        .call(drag(simulation));            //allow dragging  \r\n\r\n      selection.enter()                     //for each row in the data do...\r\n        .append('ellipse')\r\n        .on('click', function (d) {\r\n          //alert(d.id)\r\n          //d3.select(this).style(\"fill\", \"magenta\")\r\n        })\r\n        .on(\"mouseover\", function (d) {\r\n          set_highlight(d, get_connectedNodes(d), get_connectedLinks(d));\r\n        })\r\n        .on(\"mouseout\", function (d) {\r\n          exit_highlight(d);\r\n          exit_fade(d);\r\n        })\r\n        .on(\"mousedown\", function (d) {\r\n          console.log('d nodeellipse:' + d.id)\r\n          set_fade(d, get_connectedNodes(d));\r\n        })\r\n        .on(\"mouseup\", function (d) {\r\n          console.log('mouseup')\r\n        })\r\n        .attr(\"rx\", function (d) { return 30 }) //d.id.length\r\n        .attr(\"ry\", function (d) { return 30 }) //d.id.length\r\n        .attr(\"class\", \"ellipse\")\r\n        .classed('uri', function (d) { return d.type === 'uri' })\r\n        .classed('literal', function (d) { return d.type === 'literal' })\r\n        //.style(\"fill\", \"#FD8D3C\")\r\n        .merge(selection)\r\n        .attr(\"transform\", function (d) {\r\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n        })\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    //link properties\r\n    function updateLinks() {\r\n      var selection = d3.select('.links')\r\n        .selectAll('path')\r\n        .data(links)\r\n\r\n      selection.enter()\r\n        .append('path')\r\n        .attr(\"class\", function (d) { return \"link\" })\r\n        .attr(\"class\", function (d) { return \"link \" + d.property; })\r\n        .attr(\"id\", function (d, i) { return \"linkId_\" + i; })\r\n        .attr(\"marker-end\", function (d) { return \"url(#\" + d.property.replace(/\\s/g, '') + \")\"; }) //removed to allow matching\r\n        .merge(selection)\r\n        .attr(\"d\", function (d) {\r\n          var dx = d.target.x - d.source.x\r\n          var dy = d.target.y - d.source.y\r\n          if (d.linknum) {\r\n            var dr = d.linknum * 150 - 150;\r\n          }\r\n          else {\r\n            var dr = 0\r\n          }\r\n\r\n          return \"M\" + d.source.x + \",\" + d.source.y + \"A\" + dr + \",\" + dr + \" 0 0,1 \" + d.target.x + \",\" + d.target.y;\r\n        })\r\n\r\n\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    function updateLinksText() {\r\n      var selection = d3.select('.linkstext')\r\n        .selectAll('text')\r\n        .data(links)\r\n\r\n      selection.enter()\r\n        .append(\"text\")\r\n        .attr(\"x\", \"200\")\r\n        .attr(\"class\", \"linklabel\")\r\n        .append(\"textPath\")\r\n        .attr(\"xlink:href\", function (d, i) { return \"#linkId_\" + i; })\r\n        .text(function (d) {\r\n          return d.property;\r\n        })\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    function updateLinkMarkers() {\r\n      var selection = d3.select('.defs')\r\n        .selectAll('marker')\r\n        .data(getAllLinkPropertys())\r\n\r\n      selection.enter()\r\n        .append(\"marker\")\r\n        .attr(\"id\", String)\r\n        .attr(\"viewBox\", \"0 -5 10 10\")\r\n        .attr(\"refX\", 40) // distance from link\r\n        .attr(\"refY\", 0) //deviation from link linke\r\n        .attr(\"markerWidth\", 6)\r\n        .attr(\"markerHeight\", 6)\r\n        .attr(\"orient\", \"auto\")\r\n        .append(\"svg:path\")\r\n        .attr(\"d\", \"M0,-5L10,0L0,5\");\r\n\r\n\r\n      selection.exit().remove()\r\n    }\r\n\r\n    function getAllLinkPropertys() {\r\n\r\n      var linkpropertys = []\r\n      links.forEach(element => {\r\n        linkpropertys.push(element.property.replace(/\\s/g, ''))\r\n      });\r\n      return linkpropertys\r\n    }\r\n\r\n    //update drawing nodes and links\r\n    function ticked() {\r\n      console.log('ticked')\r\n      updateNodesText()\r\n      updateNodesellipse()\r\n      updateLinks()\r\n      updateLinksText()\r\n      updateLinkMarkers()\r\n    }\r\n\r\n    // dragging\r\n    const drag = (simulation) => {\r\n      const dragstarted = (d) => {\r\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      };\r\n\r\n      const dragged = (d) => {\r\n        d.fx = d3.event.x;\r\n        d.fy = d3.event.y;\r\n      };\r\n\r\n      const dragended = (d) => {\r\n        if (!d3.event.active) simulation.alphaTarget(0);\r\n        d.fx = null;\r\n        d.fy = null;\r\n      };\r\n\r\n      return d3\r\n        .drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended)\r\n    };\r\n\r\n    function get_connectedNodes(d) {\r\n      //get connected nodes of d\r\n      var connectedNodes = []\r\n\r\n      connectedNodes.push(d.id) //add the node that is being hoverd so that it is also highlighted\r\n\r\n      links.forEach(link => {\r\n        if (link.source.id === d.id) {\r\n          if (!connectedNodes.includes(link.target.id)) connectedNodes.push(link.target.id)\r\n        }\r\n        if (link.target.id === d.id) {\r\n          if (!connectedNodes.includes(link.source.id)) connectedNodes.push(link.source.id)\r\n        }\r\n      });\r\n      console.log('connectedNodes: ')\r\n      console.log(connectedNodes)\r\n      return connectedNodes\r\n    }\r\n\r\n    function get_connectedLinks(d) {\r\n      //get connected links of d\r\n      var connectedLinks = []\r\n\r\n      links.forEach(link => {\r\n        if (link.source.id === d.id || link.target.id === d.id) {\r\n          connectedLinks.push({ source: link.source.id, target: link.target.id })\r\n        }\r\n      });\r\n      console.log('connectedLinks: ')\r\n      console.log(connectedLinks)\r\n      return connectedLinks\r\n    }\r\n\r\n    function set_highlight(d, connectedNodes) {\r\n      // filter based on connectednodes\r\n      d3.select('.nodesellipse').selectAll('ellipse')\r\n        .filter(function (ellipses) {\r\n          if (connectedNodes.includes(ellipses.id)) { return true }\r\n          else { return false }\r\n        })\r\n        // set class\r\n        .classed('ellipse_highlight', true);\r\n    }\r\n\r\n    function exit_highlight(d) {\r\n      //remove all highlights\r\n      d3.select('.nodesellipse').selectAll('ellipse')\r\n        .filter(function (d) { return true })\r\n        .classed('ellipse_highlight', false);\r\n    }\r\n\r\n    function set_fade(d, connectedNodes) {\r\n      console.log('setting fade')\r\n      d3.select('.nodesellipse').selectAll('ellipse')\r\n        .filter(function (ellipses) {\r\n          if (!(connectedNodes.includes(ellipses.id))) { return true }\r\n          else { return false }\r\n        })\r\n        // set class\r\n        .classed('faded', true);\r\n\r\n\r\n      d3.select('.nodestext').selectAll('text')\r\n        .filter(function (ellipses) {\r\n          if (!(connectedNodes.includes(ellipses.id))) { return true }\r\n          else { return false }\r\n        })\r\n        // set class\r\n        .classed('faded', true);\r\n\r\n\r\n    }\r\n    function exit_fade(d) {\r\n      //remove all highlights\r\n      d3.select('.nodesellipse').selectAll('ellipse')\r\n        .filter(function (d) { return true })\r\n        .classed('faded', false);\r\n\r\n      d3.select('.nodestext').selectAll('text')\r\n        .filter(function (d) { return true })\r\n        .classed('faded', false);\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return <div id=\"forcegraph\">\r\n    </div >;\r\n  }\r\n}\r\n\r\nexport default ForceGraph","export const thunkCreator = (action) => {\r\n  const { types, promise, ...rest } = action\r\n  const [REQUESTED, RESOLVED, REJECTED] = types\r\n\r\n  return (dispatch) => {\r\n    dispatch({ ...rest, type: REQUESTED })\r\n\r\n    return promise\r\n      .then(result => {\r\n        if (result.error || result.errors) throw new Error(result.error)\r\n        dispatch({ ...rest, type: RESOLVED, result })\r\n        return result\r\n      })\r\n      .catch(error => {\r\n        dispatch({ ...rest, type: REJECTED, error })\r\n        //throw error\r\n      })\r\n  }\r\n}","import { FETCH_TEST_REQUEST, FETCH_TEST_SUCCESS, FETCH_TEST_FAILURE } from '../actionTypes'\r\nimport { FETCH_SPARQL_REQUEST, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_FAILURE } from '../actionTypes'\r\nimport { FETCH_SPARQL_ABOUTSUBJECT_REQUEST, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_FAILURE } from '../actionTypes'\r\nimport { thunkCreator } from './utils'\r\nimport qs from 'qs'\r\n\r\nconst axios = require('axios');\r\n\r\nexport const fetchTest = () => thunkCreator({\r\n  types: [FETCH_TEST_REQUEST, FETCH_TEST_SUCCESS, FETCH_TEST_FAILURE],\r\n  promise: fetch(`https://www.anapioficeandfire.com/api/books`)\r\n    .then(response => response.json())\r\n    .catch(error => { console.log(error) })\r\n\r\n})\r\n\r\nexport const fetchSparql = (query, datasource) => thunkCreator({\r\n  types: [FETCH_SPARQL_REQUEST, FETCH_SPARQL_SUCCESS, FETCH_SPARQL_FAILURE],\r\n  promise: axios({\r\n    method: 'post',\r\n    url: datasource,\r\n    data: qs.stringify({\r\n      action: 'exec',\r\n      queryLn: 'SPARQL',\r\n      ref: 'text',\r\n      query,\r\n    }),\r\n    headers: {\r\n      Accept: 'application/sparql-results+json'\r\n    },\r\n\r\n  })\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})\r\n\r\nexport const fetchAboutSubject = (query, subject, datasource) => thunkCreator({\r\n  types: [FETCH_SPARQL_ABOUTSUBJECT_REQUEST, FETCH_SPARQL_ABOUTSUBJECT_SUCCESS, FETCH_SPARQL_ABOUTSUBJECT_FAILURE],\r\n  promise: axios({\r\n    method: 'post',\r\n    url: datasource,\r\n    data: qs.stringify({\r\n      action: 'exec',\r\n      queryLn: 'SPARQL',\r\n      ref: 'text',\r\n      query,\r\n    }),\r\n    headers: {\r\n      Accept: 'application/sparql-results+json'\r\n    },\r\n    subject: subject\r\n\r\n  })\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})","import { SET_SELECTED_NODE, REMOVE_SELECTED_NODE } from '../actionTypes'\r\n\r\nimport { FETCH_ABOUT_CLICKED_NODE_REQUEST, FETCH_ABOUT_CLICKED_NODE_SUCCESS, FETCH_ABOUT_CLICKED_NODE_FAILURE } from '../actionTypes'\r\n\r\nimport { thunkCreator } from './utils'\r\nimport qs from 'qs'\r\n\r\nconst axios = require('axios');\r\n\r\nexport const setSelectedNode = (node) => {\r\n  return {\r\n    type: SET_SELECTED_NODE,\r\n    node\r\n  }\r\n}\r\n\r\nexport const removeSelectedNode = (node) => {\r\n  return {\r\n    type: REMOVE_SELECTED_NODE,\r\n  }\r\n}\r\n\r\nexport const fetchAboutClickedNode = (subject, datasource) => thunkCreator({\r\n  types: [FETCH_ABOUT_CLICKED_NODE_REQUEST, FETCH_ABOUT_CLICKED_NODE_SUCCESS, FETCH_ABOUT_CLICKED_NODE_FAILURE],\r\n  promise: axios({\r\n    method: 'post',\r\n    url: datasource.currentDatasource,\r\n    data: qs.stringify({\r\n      action: 'exec',\r\n      queryLn: 'SPARQL',\r\n      ref: 'text',\r\n      query: 'SELECT * ' + 'WHERE { <' + subject + '> ?property ?object }' + 'limit 200'\r\n    }),\r\n    headers: {\r\n      Accept: 'application/sparql-results+json'\r\n    },\r\n    subject: subject\r\n\r\n  })\r\n  //  .then(response => console.log(response))\r\n  // .catch(error => { console.log(error) })\r\n})","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ForceGraph from '../components/ForceGraph'\r\nimport ForceGraphOld from '../components/ForceGraphOld'\r\n\r\nimport { setSelectedNode, removeSelectedNode, fetchAboutClickedNode } from '../redux/actions/index'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    nodes: state.nodes,\r\n    datasource: state.datasource,\r\n    links: state.links,\r\n    data: state.data,\r\n    history: state.router\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({\r\n    setSelectedNode,\r\n    removeSelectedNode,\r\n    fetchAboutClickedNode\r\n  }, dispatch)\r\n\r\nconst ConnectedForceGraph = connect(mapStateToProps, mapDispatchToProps)(ForceGraph)\r\n\r\nexport default ConnectedForceGraph","import React from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass QueryForm extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      query: \"SELECT * WHERE\" + \"{\" + \"?sub ?pred ?obj .\" + \"}\" + \"LIMIT 10\",\r\n      subject: \"http://lod.onderwijsregistratie.nl/rio/id/Onderwijsbestuur/100B490\",\r\n    }\r\n\r\n    this.handleQueryChange = this.handleQueryChange.bind(this);\r\n    this.handleQuerySubmit = this.handleQuerySubmit.bind(this);\r\n\r\n    this.handleSubjectChange = this.handleSubjectChange.bind(this)\r\n    this.handleSubjectDetailsQuerySubmit = this.handleSubjectDetailsQuerySubmit.bind(this)\r\n\r\n  }\r\n\r\n  handleQueryChange(event) {\r\n    console.log(event.target.value)\r\n    this.setState({ query: event.target.value });\r\n  }\r\n\r\n  handleQuerySubmit(event) {\r\n    this.props.fetchSparql(this.state.query, this.props.datasource.currentDatasource)\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleSubjectChange(event) {\r\n    console.log(event.target.value)\r\n    this.setState({ subject: event.target.value });\r\n  }\r\n\r\n  handleSubjectDetailsQuerySubmit(event) {\r\n    var uri = this.state.subject\r\n    const query = 'SELECT * ' +\r\n      'WHERE { <' + uri + '> ?property ?object }' +\r\n      'limit 200';\r\n    this.props.fetchAboutSubject(query, uri, this.props.datasource.currentDatasource)\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <div id=\"queryform\">\r\n          <Form onSubmit={this.handleQuerySubmit}>\r\n\r\n            <Form.Group controlId=\"QueryInput\">\r\n              <Form.Label>Query input:</Form.Label>\r\n              <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Input query\" value={this.state.query} onChange={this.handleQueryChange} />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n          </Form>\r\n        </div>\r\n\r\n        <div id=\"querysubjectdetails form\">\r\n          <Form onSubmit={this.handleSubjectDetailsQuerySubmit}>\r\n\r\n            <Form.Group controlId=\"SubjectInput\">\r\n              <Form.Label>Query input:</Form.Label>\r\n              <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Input subject\" value={this.state.subject} onChange={this.handleSubjectChange} />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n          </Form>\r\n        </div>\r\n\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default QueryForm\r\n\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport QueryForm from '../components/QueryForm'\r\nimport { fetchTest, fetchSparql, fetchAboutSubject } from '../redux/actions/index'\r\nimport { push } from 'connected-react-router'\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    datasource: state.datasource,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({ fetchTest, fetchSparql, fetchAboutSubject, push }, dispatch)\r\n\r\nconst ConnectedQueryForm = connect(mapStateToProps, mapDispatchToProps)(QueryForm)\r\n\r\nexport default ConnectedQueryForm","import React from 'react'\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\nimport useState from 'react'\r\nimport { addDatasource } from '../redux/actions/datasource';\r\n\r\nclass AddDatasource extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = ({\r\n      show: false,\r\n      name: '',\r\n      endpoint: '',\r\n\r\n    })\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this)\r\n    this.handleEndpointChange = this.handleEndpointChange.bind(this)\r\n  }\r\n  handleModal() {\r\n    this.setState({\r\n      show: !this.state.show,\r\n      name: '',\r\n      endpoint: '',\r\n    })\r\n  }\r\n\r\n  handleNameChange(event) {\r\n    console.log(event.target.value)\r\n    this.setState({ name: event.target.value });\r\n  }\r\n\r\n  handleEndpointChange(event) {\r\n    console.log(event.target.value)\r\n    this.setState({ endpoint: event.target.value });\r\n  }\r\n\r\n  handleSubmitDatasource() {\r\n    console.log('submit datasource')\r\n\r\n    this.props.addDatasource(this.state.name, this.state.endpoint)\r\n\r\n    this.setState({\r\n      show: !this.state.show\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={() => { this.handleModal() }}>\r\n          Databron Toevoegen\r\n      </Button>\r\n\r\n        <Modal\r\n          show={this.state.show}\r\n          onHide={() => this.handleModal()}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Databron Toevoegen: </Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n\r\n            <Form onSubmit={() => this.handleSubmitDatasource()}>\r\n\r\n              <Form.Group controlId=\"formName\">\r\n                <Form.Label>Naam:</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Naam\" onChange={this.handleNameChange} />\r\n\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formEndpoint\">\r\n                <Form.Label>Endpoint:</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Endpoint\" onChange={this.handleEndpointChange} />\r\n              </Form.Group>\r\n            </Form>\r\n\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => { this.handleModal() }}>Sluiten</Button>\r\n            <Button variant=\"primary\" onClick={() => { this.handleSubmitDatasource() }}>Opslaan</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default AddDatasource\r\n\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport AddDatasource from '../components/AddDataSource'\r\n\r\nimport { addDatasource } from '../redux/actions/datasource'\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({\r\n    addDatasource,\r\n  }, dispatch)\r\n\r\nconst ConnectedAddDatasource = connect(mapStateToProps, mapDispatchToProps)(AddDatasource)\r\n\r\nexport default ConnectedAddDatasource","import React from 'react';\r\nimport { ButtonGroup, Button, Dropdown, Row, Col } from 'react-bootstrap'\r\n\r\nimport ConnectedAddDatasource from '../containers/ConnectedAddDatasource'\r\n\r\nclass DataSourceDropdown extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n  render() {\r\n    const renderBlockButton = (item) => {\r\n      if (item.active) {\r\n        return (\r\n          <Button onClick={() => this.props.toggleBlockDatasource(item)}>Block </Button>\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n          <Button onClick={() => this.props.toggleBlockDatasource(item)}>Unblock </Button>\r\n        )\r\n      }\r\n    }\r\n\r\n    const renderDatasourceDropdown = () => {\r\n      if (this.props.datasource.searchAll === 'Uit') {\r\n        return (\r\n          <Dropdown className=\"w-100\">\r\n            <Dropdown.Toggle >Geselecteerde bron: {this.props.datasource.currentDatasource}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              {this.props.datasource.datasources.map((item, key) =>\r\n                <Dropdown.Item key={key} >\r\n                  <Row>\r\n                    <Col>\r\n                      <div onClick={() => this.props.setCurrentDatasource(item)}>{item.name}</div>\r\n                    </Col>\r\n                    <Col>\r\n                      <ButtonGroup className=\"float-right\">\r\n\r\n                        {renderBlockButton(item)}\r\n                        <Button onClick={() => this.props.deleteDatasource(item)}>Remove</Button>\r\n                      </ButtonGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </Dropdown.Item>\r\n              )}\r\n              {<ConnectedAddDatasource />}\r\n            </Dropdown.Menu>\r\n          </Dropdown>)\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div id=\"Datasource\">\r\n        <Row>\r\n          <Col sm={3}>\r\n            <Button className=\"w-100\" onClick={() => this.props.toggleSearchAll()}>Doorzoek alle bronnen: {this.props.datasource.searchAll}</Button>\r\n          </Col>\r\n          <Col sm={9}>\r\n            {renderDatasourceDropdown()}\r\n          </Col>\r\n        </Row>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DataSourceDropdown\r\n","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport DataSource from '../components/DataSource'\r\nimport { setCurrentDatasource, toggleSearchAll, toggleBlockDatasource, deleteDatasource } from '../redux/actions/index';\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    datasource: state.datasource\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({\r\n    setCurrentDatasource,\r\n    toggleSearchAll,\r\n    toggleBlockDatasource,\r\n    deleteDatasource,\r\n  }, dispatch)\r\n\r\nconst ConnectedDataSource = connect(mapStateToProps, mapDispatchToProps)(DataSource)\r\n\r\nexport default ConnectedDataSource","import React from 'react'\r\nimport { Button, Card, CardDeck } from 'react-bootstrap'\r\n\r\nclass Example extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      query: \"SELECT * WHERE\" + \"{\" + \"?sub ?pred ?obj .\" + \"}\" + \"LIMIT 10\",\r\n      subject: \"http://lod.onderwijsregistratie.nl/rio/id/Onderwijsbestuur/100B490\",\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <CardDeck>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Persoon & relevante adressen</Card.Title>\r\n              <Card.Text>\r\n                Dit voorbeeld laat zien hoe de applicatie een persoon visualiseerd met de bijbehorende relevante adressen</Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Button onClick={() => this.props.fetchTest()}>Bekijk voorbeeld</Button>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Voorbeeld 2</Card.Title>\r\n              <Card.Text>\r\n                Indien mogelijk iets dat demonstreert dat dat vanaf meerdere bronnen afkomstig kan zijn</Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Button onClick={() => this.props.fetchTest()}>Bekijk voorbeeld</Button>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Voorbeeld 3</Card.Title>\r\n              <Card.Text>\r\n                Dit voorbeeld laat zien hoe de applicatie een persoon visualiseerd met de bijbehorende relevante adressen</Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Button onClick={() => this.props.fetchTest()}>Bekijk voorbeeld</Button>\r\n            </Card.Footer>\r\n          </Card>\r\n\r\n        </CardDeck>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Example","import { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Examples from '../components/Examples'\r\nimport { fetchTest, fetchSparql, fetchAboutSubject } from '../redux/actions/index'\r\nimport { push } from 'connected-react-router'\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    datasource: state.datasource,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) =>\r\n  bindActionCreators({ fetchTest, fetchSparql, fetchAboutSubject, push }, dispatch)\r\n\r\nconst ConnectedExamples = connect(mapStateToProps, mapDispatchToProps)(Examples)\r\n\r\nexport default ConnectedExamples","import React from 'react'\r\n\r\nimport {\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom'\r\n\r\nimport { Nav } from 'react-bootstrap'\r\n\r\nimport {\r\n  NavLink,\r\n} from 'react-router-dom'\r\n\r\n\r\nimport ConnectedForceGraph from '../containers/ConnectedForceGraph';\r\nimport ConnectedQueryForm from '../containers/ConnectedQueryForm'\r\nimport ConnectedDataSource from '../containers/ConnectedDataSource'\r\nimport ConnectedExamples from '../containers/ConnectedExamples';\r\n\r\nclass Graph extends React.Component {\r\n  render() {\r\n    console.log(this.props.match.path)\r\n    return (\r\n      <div className=\"Graph\">\r\n        <h2>Graph</h2>\r\n        <Nav fill variant=\"tabs\" defaultActiveKey=\"/sparql-react-browser/graph/examples\">\r\n          <Nav.Item>\r\n            <Nav.Link as={NavLink} activeClassName=\"active\" to=\"/sparql-react-browser/graph/examples\">Voorbeelden</Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link as={NavLink} activeClassName=\"active\" to=\"/sparql-react-browser/graph/queryform\">Query</Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n\r\n        <ConnectedDataSource />\r\n\r\n        <Switch>\r\n          <Route exact path={`${this.props.match.path}/examples`} component={ConnectedExamples} />\r\n          <Route exact path={`${this.props.match.path}/queryform`} component={ConnectedQueryForm} />\r\n        </Switch>\r\n\r\n\r\n        <ConnectedForceGraph />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Graph","import React from 'react'\r\n\r\nclass Contact extends React.Component {\r\n  onSubmit = () => {\r\n    this.props.history.push('/')\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Contact\">\r\n        <h2>Contact form</h2>\r\n        <form>\r\n          <input placeholder=\"name\" type=\"name\" />\r\n          <input placeholder=\"email\" type=\"email\" />\r\n          <button onClick={this.onSubmit}>Submit</button>\r\n        </form>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Contact","import React from 'react'\r\n\r\nclass NotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"NotFound\">\r\n        <h1>Not Found...</h1>\r\n        <button onClick={() => this.props.history.push('/home')}>Go home</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default NotFound","import React from 'react'\r\nimport {\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom'\r\n\r\n\r\n\r\n//pages\r\nimport Home from '../pages/Home'\r\nimport Graph from '../pages/Graph'\r\nimport Contact from '../pages/Contact'\r\nimport Notfound from '../pages/NotFound'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nclass PageContent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container id=\"PageContent\">\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/sparql-react-browser/\" component={Home} />\r\n            <Route exact path=\"/sparql-react-browser/home\" component={Home} />\r\n            <Route path=\"/sparql-react-browser/graph\" component={Graph} />\r\n            <Route path=\"/sparql-react-browser/contact\" component={Contact} />\r\n\r\n            <Route component={Notfound} />\r\n          </Switch>\r\n        </div>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PageContent","import React from 'react'\r\n\r\nconst Loading = ({ isLoading }) =>\r\n  isLoading && <span>Loading...</span>\r\n\r\nexport default Loading","import { connect } from 'react-redux'\r\nimport Loading from '../components/Loading'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const { loading } = state\r\n\r\n  const isLoading = Object.keys(loading).reduce((result, requestName) => {\r\n    if (result === true) return true\r\n    if (loading[requestName] > 0) return true\r\n    return false\r\n  }, false)\r\n\r\n  return { isLoading }\r\n}\r\n\r\nconst ConnectedLoading = connect(mapStateToProps)(Loading)\r\n\r\nexport default ConnectedLoading","import React from 'react'\r\n\r\nconst Error = ({ message }) =>\r\n  message\r\n    ? <span style={{ color: 'red' }}>Error: {message}</span>\r\n    : null\r\n\r\nexport default Error","import { connect } from 'react-redux'\r\n\r\nimport Error from '../components/Error'\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    message: state.error && state.error.message\r\n  }\r\n}\r\n\r\nconst ConnectedError = connect(mapStateToProps)(Error)\r\n\r\nexport default ConnectedError","import React from 'react';\r\n\r\n//Router\r\nimport { ConnectedRouter } from 'connected-react-router'\r\nimport { history } from './redux/store/middleware'\r\n\r\n//custom stylesheet\r\nimport './css/Custom.scss';\r\n\r\n//devtools\r\nimport DevTools from './containers/DevTools.jsx'\r\n\r\nimport { Provider } from 'react-redux'\r\n\r\nimport configureStore from './redux/store/index'\r\n\r\n//Bootrap components\r\nimport Container from 'react-bootstrap/Container'\r\n\r\n// Layout components\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport PageContent from './components/PageContent';\r\nimport ConnectedLoading from './containers/ConnectedLoading'\r\nimport ConnectedError from './containers/ConnectedError'\r\n\r\n//init redux store\r\nconst store = configureStore()\r\n\r\nconsole.log('initializing store: ', store.getState())\r\n\r\n// const unsubscribe = store.subscribe(() => {\r\n//   //console.log('state changed: ', store.getState())\r\n// })\r\n\r\n\r\n\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <div className=\"App\">\r\n      <ConnectedRouter history={history}>\r\n        <Header />\r\n        <PageContent />\r\n        <ConnectedLoading />\r\n        <ConnectedError />\r\n        <Footer />\r\n      </ConnectedRouter>\r\n      {/* exclude devtools in production */}\r\n      {(process.env.NODE_ENV !== 'production') && <DevTools />}\r\n    </div>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}